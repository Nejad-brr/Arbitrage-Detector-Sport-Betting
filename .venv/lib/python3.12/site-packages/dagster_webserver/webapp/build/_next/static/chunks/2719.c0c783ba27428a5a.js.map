{"version":3,"file":"static/chunks/2719.c0c783ba27428a5a.js","mappings":"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","sources":["webpack://_N_E/../dg-docs-components/src/css/ListView.module.css?c1b5","webpack://_N_E/../dg-docs-components/src/schema/css/TypeTag.module.css?df2c","webpack://_N_E/../ui-core/src/workspace/GraphRoot.tsx","webpack://_N_E/../ui-core/src/assets/AutomaterializeDaemonStatusTag.tsx","webpack://_N_E/../ui-core/src/assets/AssetGroupRoot.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationPageHeaderTitle.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationPageHeader.oss.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationHasDocsQuery.tsx","webpack://_N_E/../ui-core/src/code-location/findRepositoryInLocation.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationTabs.oss.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationSearchableList.tsx","webpack://_N_E/../ui-core/src/assets/useAssetSearch.tsx","webpack://_N_E/../ui-core/src/workspace/WorkspaceAssetsQuery.tsx","webpack://_N_E/../ui-core/src/ui/usePersistedExpansionState.tsx","webpack://_N_E/../ui-core/src/workspace/useFlattenedGroupedAssetList.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationAssetsList.tsx","webpack://_N_E/../ui-core/src/workspace/WorkspaceGraphsQuery.tsx","webpack://_N_E/../ui-core/src/workspace/extractGraphsForRepo.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationGraphsList.tsx","webpack://_N_E/../ui-core/src/ops/OpCard.tsx","webpack://_N_E/../ui-core/src/ops/OpDetailsRoot.tsx","webpack://_N_E/../ui-core/src/ops/OpsRoot.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationOpsView.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefinitionsMain.tsx","webpack://_N_E/../ui-core/src/ui/SideNavItem.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefinitionsNav.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefinitionsRoot.tsx","webpack://_N_E/../dg-docs-components/src/CopyButton.tsx","webpack://_N_E/../dg-docs-components/src/ComponentExample.tsx","webpack://_N_E/../dg-docs-components/src/ComponentTags.tsx","webpack://_N_E/../dg-docs-components/src/ComponentHeader.tsx","webpack://_N_E/../dg-docs-components/src/ComponentScaffolding.tsx","webpack://_N_E/../dg-docs-components/src/schema/ArrayTag.tsx","webpack://_N_E/../dg-docs-components/src/schema/TypeTag.tsx","webpack://_N_E/../dg-docs-components/src/ComponentSchema.tsx","webpack://_N_E/../dg-docs-components/src/ComponentDetails.tsx","webpack://_N_E/../dg-docs-components/src/ComponentPageContents.tsx","webpack://_N_E/../dg-docs-components/src/ListView.tsx","webpack://_N_E/../dg-docs-components/src/PackageDetails.tsx","webpack://_N_E/../dg-docs-components/src/PackagePageDetails.tsx","webpack://_N_E/../dg-docs-components/src/PackageTree.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDocsPackageTree.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDocsQuery.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDocsRoot.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationAlertsSection.oss.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationServerSection.oss.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationOverviewSectionHeader.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationNotFound.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationOverviewRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineOverviewRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/JobFallthroughRoot.oss.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineOrJobDisambiguationRoot.tsx","webpack://_N_E/../ui-core/src/launchpad/LaunchpadSetupFromRunRoot.tsx","webpack://_N_E/../ui-core/src/launchpad/LaunchpadSetupRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/JobTabs.tsx","webpack://_N_E/../ui-core/src/pipelines/buildJobTabs.oss.tsx","webpack://_N_E/../ui-core/src/nav/LatestRunTag.tsx","webpack://_N_E/../ui-core/src/nav/JobMetadata.tsx","webpack://_N_E/../ui-core/src/nav/PipelineNav.tsx","webpack://_N_E/../ui-core/src/instance/backfill/BackfillTable.tsx","webpack://_N_E/../ui-core/src/partitions/JobBackfillsTable.tsx","webpack://_N_E/../ui-core/src/partitions/PartitionRunStatusCheckboxes.tsx","webpack://_N_E/../ui-core/src/partitions/BackfillSelector.tsx","webpack://_N_E/../ui-core/src/partitions/PartitionGraph.tsx","webpack://_N_E/../ui-core/src/partitions/OpJobPartitionsView.tsx","webpack://_N_E/../ui-core/src/partitions/AssetJobPartitionsView.tsx","webpack://_N_E/../ui-core/src/assets/usePartitionNameForPipeline.tsx","webpack://_N_E/../ui-core/src/partitions/PipelinePartitionsRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineRoot.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleAlertDetails.oss.tsx","webpack://_N_E/../ui-core/src/schedules/SchedulePartitionStatus.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleResetButton.tsx","webpack://_N_E/../ui-core/src/ticks/EvaluateScheduleDialog.tsx","webpack://_N_E/../ui-core/src/ticks/EvaluateTickButtonSchedule.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleDetails.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleUtils.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleRoot.tsx","webpack://_N_E/../ui-core/src/workspace/WorkspaceRoot.tsx","webpack://_N_E/../dg-docs-components/src/css/PackageTree.module.css?e022","webpack://_N_E/../ui-core/src/pipelines/PipelineExplorerRoot.oss.tsx","webpack://_N_E/../dg-docs-components/src/css/ComponentScaffolding.module.css?a616","webpack://_N_E/../ui-core/src/workspace/CodeLocationRowSet.tsx","webpack://_N_E/../ui-core/src/code-location/css/CodeLocationDocsPackageTree.module.css?dc9b","webpack://_N_E/../dg-docs-components/src/css/CopyButton.module.css?c637","webpack://_N_E/../dg-docs-components/src/css/ComponentHeader.module.css?6f6b","webpack://_N_E/../dg-docs-components/src/css/ComponentDetails.module.css?10e3","webpack://_N_E/../ui-core/src/code-location/css/CodeLocationDocsRoot.module.css?33b6","webpack://_N_E/../dg-docs-components/src/schema/css/ArrayTag.module.css?e9d3","webpack://_N_E/../dg-docs-components/src/css/ComponentPageContents.module.css?4493","webpack://_N_E/../ui-core/src/code-location/css/CodeLocationOverviewRoot.module.css?8bf4","webpack://_N_E/../dg-docs-components/src/css/ComponentTags.module.css?b779","webpack://_N_E/../ui-core/src/workspace/CodeLocationMenu.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineRunsEmptyState.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineRunsFeedRoot.tsx","webpack://_N_E/../dg-docs-components/src/css/ComponentSchema.module.css?b6f0","webpack://_N_E/../dg-docs-components/src/css/PackagePageDetails.module.css?3659","webpack://_N_E/../dg-docs-components/src/css/ComponentExample.module.css?3a45","webpack://_N_E/../dg-docs-components/src/css/yaml.css?b7d0","webpack://_N_E/../dg-docs-components/src/css/PackageDetails.module.css?6702"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListView_container__yJUD8\",\"emptyState\":\"ListView_emptyState__XHDyO\",\"componentItem\":\"ListView_componentItem__ziM5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"TypeTag_tag__VlKpL\",\"objectType\":\"TypeTag_objectType__dR7sE\"};","import {Box, NonIdealState, PageHeader, Subtitle1, Tag} from '@dagster-io/ui-components';\nimport {useState} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {RepoAddress} from './types';\nimport {gql, useQuery} from '../apollo-client';\nimport {GraphExplorerRootQuery, GraphExplorerRootQueryVariables} from './types/GraphRoot.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {explodeCompositesInHandleGraph} from '../pipelines/CompositeSupport';\nimport {\n  GRAPH_EXPLORER_FRAGMENT,\n  GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT,\n  GraphExplorer,\n  GraphExplorerOptions,\n} from '../pipelines/GraphExplorer';\nimport {explorerPathFromString, explorerPathToString} from '../pipelines/PipelinePathUtils';\nimport {Loading} from '../ui/Loading';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const GraphRoot = (props: Props) => {\n  useTrackPageView();\n\n  const {repoAddress} = props;\n  const params = useParams();\n\n  const path = explorerPathFromString((params as any)[0]);\n\n  // Show the name of the composite solid we are within (-1 is the selection, -2 is current parent)\n  // or the name of the pipeline tweaked to look a bit more like a graph name.\n  const title = path.opNames.length > 1 ? path.opNames[path.opNames.length - 2] : path.pipelineName;\n  useDocumentTitle(`Graph: ${title}`);\n\n  return (\n    <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n      <PageHeader\n        title={<Subtitle1>{title}</Subtitle1>}\n        tags={\n          <Tag icon=\"schema\">\n            Graph in <RepositoryLink repoAddress={repoAddress} />\n          </Tag>\n        }\n      />\n      <Box border=\"top\" style={{minHeight: 0, flex: 1, display: 'flex'}}>\n        <GraphExplorerRoot repoAddress={repoAddress} />\n      </Box>\n    </div>\n  );\n};\n\nconst GraphExplorerRoot = (props: Props) => {\n  const {repoAddress} = props;\n  const params = useParams();\n\n  const explorerPath = explorerPathFromString((params as any)['0']);\n  const history = useHistory();\n  const [options, setOptions] = useState<GraphExplorerOptions>({\n    explodeComposites: false,\n    preferAssetRendering: true,\n  });\n\n  const parentNames = explorerPath.opNames.slice(0, explorerPath.opNames.length - 1);\n  const graphResult = useQuery<GraphExplorerRootQuery, GraphExplorerRootQueryVariables>(\n    GRAPH_EXPLORER_ROOT_QUERY,\n    {\n      variables: {\n        graphSelector: {\n          repositoryName: repoAddress?.name || '',\n          repositoryLocationName: repoAddress?.location || '',\n          graphName: explorerPath.pipelineName,\n        },\n        rootHandleID: parentNames.join('.'),\n        requestScopeHandleID: options.explodeComposites ? undefined : parentNames.join('.'),\n      },\n    },\n  );\n\n  return (\n    <Loading<GraphExplorerRootQuery> queryResult={graphResult}>\n      {({graphOrError: result}) => {\n        if (result.__typename === 'GraphNotFoundError') {\n          return (\n            <NonIdealState icon=\"error\" title=\"Graph not found\" description={result.message} />\n          );\n        }\n        if (result.__typename === 'PythonError') {\n          return <NonIdealState icon=\"error\" title=\"Query Error\" description={result.message} />;\n        }\n        const parentHandle = result.solidHandle;\n        const displayedHandles = options.explodeComposites\n          ? explodeCompositesInHandleGraph(result.solidHandles)\n          : result.solidHandles;\n\n        return (\n          <GraphExplorer\n            options={options}\n            setOptions={setOptions}\n            explorerPath={explorerPath}\n            onChangeExplorerPath={(path, mode) => {\n              const fullPath = workspacePathFromAddress(\n                props.repoAddress,\n                `/graphs/${explorerPathToString(path)}`,\n              );\n              if (mode === 'push') {\n                history.push(fullPath);\n              } else {\n                history.replace(fullPath);\n              }\n            }}\n            container={result}\n            repoAddress={repoAddress}\n            handles={displayedHandles}\n            parentHandle={parentHandle ? parentHandle : undefined}\n            isGraph={true}\n            getInvocations={(definitionName) =>\n              displayedHandles\n                .filter((s) => s.solid.definition.name === definitionName)\n                .map((s) => ({handleID: s.handleID}))\n            }\n          />\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst GRAPH_EXPLORER_ROOT_QUERY = gql`\n  query GraphExplorerRootQuery(\n    $graphSelector: GraphSelector\n    $rootHandleID: String!\n    $requestScopeHandleID: String\n  ) {\n    graphOrError(selector: $graphSelector) {\n      ... on Graph {\n        id\n        name\n        solidHandle(handleID: $rootHandleID) {\n          ...GraphExplorerSolidHandleFragment\n        }\n        solidHandles(parentHandleID: $requestScopeHandleID) {\n          handleID\n          solid {\n            name\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n        ...GraphExplorerFragment\n      }\n      ... on GraphNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${GRAPH_EXPLORER_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Tag, Tooltip} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\n\nimport {useAutomaterializeDaemonStatus} from './useAutomaterializeDaemonStatus';\n\nexport const AutomaterializeDaemonStatusTag = () => {\n  const {paused} = useAutomaterializeDaemonStatus();\n\n  return (\n    <Tooltip\n      content={\n        paused\n          ? 'Automation condition evaluation is paused. New materializations will not be triggered by automation conditions.'\n          : ''\n      }\n      canShow={paused}\n    >\n      <Link to=\"/health\" style={{outline: 'none'}}>\n        <Tag icon={paused ? 'toggle_off' : 'toggle_on'} intent={paused ? 'warning' : 'success'}>\n          {paused ? 'Auto-materialize off' : 'Auto-materialize on'}\n        </Tag>\n      </Link>\n    </Tooltip>\n  );\n};\n","import {Box, Page, PageHeader, Subtitle1, Tabs, Tag} from '@dagster-io/ui-components';\nimport React, {useCallback, useMemo} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport {AssetGlobalLineageLink} from 'shared/assets/AssetPageHeader.oss';\n\nimport {AssetsCatalogTable} from './AssetsCatalogTable';\nimport {useAutoMaterializeSensorFlag} from './AutoMaterializeSensorFlag';\nimport {AutomaterializeDaemonStatusTag} from './AutomaterializeDaemonStatusTag';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  AssetGroupMetadataQuery,\n  AssetGroupMetadataQueryVariables,\n} from './types/AssetGroupRoot.types';\nimport {useTrackPageView} from '../app/analytics';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphViewType} from '../asset-graph/Utils';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {AssetGroupSelector} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useOpenInNewTab} from '../hooks/useOpenInNewTab';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\nimport {TabLink} from '../ui/TabLink';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface AssetGroupRootParams {\n  groupName: string;\n  prefixPath: string;\n  0: string;\n}\n\nexport const AssetGroupRoot = ({\n  repoAddress,\n  tab,\n}: {\n  repoAddress: RepoAddress;\n  tab: 'lineage' | 'list';\n}) => {\n  useTrackPageView();\n\n  const {groupName, 0: path} = useParams<AssetGroupRootParams>();\n  const history = useHistory();\n\n  useDocumentTitle(`Asset Group: ${groupName}`);\n  const openInNewTab = useOpenInNewTab();\n\n  const groupPath = workspacePathFromAddress(repoAddress, `/asset-groups/${groupName}`);\n  const groupSelector = useMemo(\n    () => ({\n      groupName,\n      repositoryLocationName: repoAddress.location,\n      repositoryName: repoAddress.name,\n    }),\n    [groupName, repoAddress],\n  );\n\n  const onChangeExplorerPath = useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode]({\n        pathname: `${groupPath}/${explorerPathToString(path)}`,\n        search: history.location.search,\n      });\n    },\n    [groupPath, history],\n  );\n\n  const onNavigateToSourceAssetNode = useCallback(\n    (e: Pick<React.MouseEvent<any>, 'metaKey'>, node: AssetLocation) => {\n      let path;\n      if (node.groupName && node.repoAddress) {\n        path = workspacePathFromAddress(\n          node.repoAddress,\n          `/asset-groups/${node.groupName}/lineage/${node.assetKey.path\n            .map(encodeURIComponent)\n            .join('/')}`,\n        );\n      } else {\n        path = assetDetailsPathForKey(node.assetKey, {view: 'definition'});\n      }\n      if (e.metaKey) {\n        openInNewTab(path);\n      } else {\n        history.push(path);\n      }\n    },\n    [history, openInNewTab],\n  );\n\n  const fetchOptions = React.useMemo(() => ({groupSelector, loading: false}), [groupSelector]);\n\n  const lineageOptions = React.useMemo(\n    () => ({preferAssetRendering: true, explodeComposites: true}),\n    [],\n  );\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Subtitle1>{groupName}</Subtitle1>}\n        right={<ReloadAllButton label=\"Reload definitions\" />}\n        tags={<AssetGroupTags groupSelector={groupSelector} repoAddress={repoAddress} />}\n        tabs={\n          <Box\n            flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n            margin={{right: 4}}\n          >\n            <Tabs selectedTabId={tab}>\n              <TabLink id=\"lineage\" title=\"Lineage\" to={`${groupPath}/lineage`} />\n              <TabLink id=\"list\" title=\"List\" to={`${groupPath}/list`} />\n            </Tabs>\n            <AssetGlobalLineageLink />\n          </Box>\n        }\n      />\n      {tab === 'lineage' ? (\n        <AssetGraphExplorer\n          fetchOptions={fetchOptions}\n          options={lineageOptions}\n          explorerPath={explorerPathFromString(path || 'lineage/')}\n          onChangeExplorerPath={onChangeExplorerPath}\n          onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n          viewType={AssetGraphViewType.GROUP}\n        />\n      ) : (\n        <AssetsCatalogTable\n          groupSelector={groupSelector}\n          prefixPath={path.split('/').map(decodeURIComponent).filter(Boolean)}\n          setPrefixPath={(prefixPath) =>\n            history.push(`${groupPath}/list/${prefixPath.map(encodeURIComponent).join('/')}`)\n          }\n        />\n      )}\n    </Page>\n  );\n};\n\nexport const ASSET_GROUP_METADATA_QUERY = gql`\n  query AssetGroupMetadataQuery($selector: AssetGroupSelector!) {\n    assetNodes(group: $selector) {\n      id\n      automationCondition {\n        __typename\n      }\n    }\n  }\n`;\n\nexport const AssetGroupTags = ({\n  repoAddress,\n  groupSelector,\n}: {\n  groupSelector: AssetGroupSelector;\n  repoAddress: RepoAddress;\n}) => {\n  const automaterializeSensorsFlagState = useAutoMaterializeSensorFlag();\n  const queryResult = useQuery<AssetGroupMetadataQuery, AssetGroupMetadataQueryVariables>(\n    ASSET_GROUP_METADATA_QUERY,\n    {variables: {selector: groupSelector}},\n  );\n  const {data} = queryResult;\n\n  const sensorTag = () => {\n    const assetNodes = data?.assetNodes;\n    if (!assetNodes || assetNodes.length === 0) {\n      return null;\n    }\n\n    if (\n      automaterializeSensorsFlagState === 'has-global-amp' &&\n      assetNodes.some((a) => !!a.automationCondition)\n    ) {\n      return <AutomaterializeDaemonStatusTag />;\n    }\n\n    return null;\n  };\n\n  return (\n    <>\n      <Tag icon=\"asset_group\">\n        Asset Group in <RepositoryLink repoAddress={repoAddress} />\n      </Tag>\n      {sensorTag()}\n    </>\n  );\n};\n","import {Box, Subtitle1} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\n\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nexport const CodeLocationPageHeaderTitle = ({repoAddress}: {repoAddress: RepoAddress}) => {\n  return (\n    <Subtitle1>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        <div>\n          <Link to=\"/deployment/locations\">Code locations</Link>\n        </div>\n        <div>/</div>\n        <div>{repoAddressAsHumanString(repoAddress)}</div>\n      </Box>\n    </Subtitle1>\n  );\n};\n","import {JoinedButtons, PageHeader} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\n\nimport {CodeLocationPageHeaderTitle} from './CodeLocationPageHeaderTitle';\nimport {CodeLocationMenu} from '../workspace/CodeLocationMenu';\nimport {ReloadButton} from '../workspace/CodeLocationRowSet';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationPageHeader = ({repoAddress}: Props) => {\n  const {locationEntries, loading} = useContext(WorkspaceContext);\n  const locationEntry = locationEntries.find((entry) => entry.name === repoAddress.location);\n  return (\n    <PageHeader\n      title={<CodeLocationPageHeaderTitle repoAddress={repoAddress} />}\n      right={\n        loading || !locationEntry ? null : (\n          <JoinedButtons>\n            <ReloadButton location={repoAddress.location} />\n            <CodeLocationMenu locationNode={locationEntry} />\n          </JoinedButtons>\n        )\n      }\n    />\n  );\n};\n","import {gql} from '../apollo-client';\n\nexport const CODE_LOCATION_HAS_DOCS_QUERY = gql`\n  query CodeLocationHasDocsQuery($repositorySelector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      ... on Repository {\n        id\n        hasLocationDocs\n      }\n    }\n  }\n`;\n","import {WorkspaceLocationNodeFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {RepoAddress} from '../workspace/types';\n\n// Given a `RepoAddress` and a location entry, try to find the matching repository to determine\n// whether there are actual code object definitions available for this `RepoAddress`.\n// It is possible that we have an errored `locationEntry` at a dunder `RepoAddress`, in which\n// case there are no actual code objects available.\nexport const findRepositoryInLocation = (\n  locationEntry: WorkspaceLocationNodeFragment | null,\n  repoAddress: RepoAddress,\n) => {\n  if (\n    locationEntry?.__typename !== 'WorkspaceLocationEntry' ||\n    locationEntry.locationOrLoadError?.__typename !== 'RepositoryLocation'\n  ) {\n    return null;\n  }\n\n  const location = locationEntry.locationOrLoadError;\n  const matchingLocation = location.repositories.find((repo) => repo.name === repoAddress.name);\n  return matchingLocation || null;\n};\n","import {Box, Tab, Tabs, Tag} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\nimport {FeatureFlag} from 'shared/app/FeatureFlags.oss';\n\nimport {CODE_LOCATION_HAS_DOCS_QUERY} from './CodeLocationHasDocsQuery';\nimport {findRepositoryInLocation} from './findRepositoryInLocation';\nimport {useQuery} from '../apollo-client';\nimport {featureEnabled} from '../app/Flags';\nimport {TabLink} from '../ui/TabLink';\nimport {WorkspaceLocationNodeFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\nimport {\n  CodeLocationHasDocsQuery,\n  CodeLocationHasDocsQueryVariables,\n} from './types/CodeLocationHasDocsQuery.types';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\n\nexport type CodeLocationTabType = 'overview' | 'docs' | 'definitions';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  selectedTab: CodeLocationTabType;\n  locationEntry: WorkspaceLocationNodeFragment | null;\n}\n\nexport const CodeLocationTabs = (props: Props) => {\n  const {repoAddress, selectedTab, locationEntry} = props;\n  const canShowDocs = featureEnabled(FeatureFlag.flagDocsInApp);\n\n  const {data} = useQuery<CodeLocationHasDocsQuery, CodeLocationHasDocsQueryVariables>(\n    CODE_LOCATION_HAS_DOCS_QUERY,\n    {\n      skip: !canShowDocs,\n      variables: {\n        repositorySelector: repoAddressToSelector(repoAddress),\n      },\n      fetchPolicy: 'cache-first',\n    },\n  );\n\n  const hasDocs = useMemo(() => {\n    return (\n      data?.repositoryOrError.__typename === 'Repository' && data.repositoryOrError.hasLocationDocs\n    );\n  }, [data]);\n\n  const repository = useMemo(\n    () => findRepositoryInLocation(locationEntry, repoAddress),\n    [locationEntry, repoAddress],\n  );\n\n  return (\n    <Tabs selectedTabId={selectedTab}>\n      <TabLink id=\"overview\" title=\"Overview\" to={workspacePathFromAddress(repoAddress, '/')} />\n      {canShowDocs && hasDocs ? (\n        <TabLink\n          id=\"docs\"\n          title={\n            <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n              <span>Docs</span>\n              <Tag>\n                <span style={{fontWeight: 'normal'}}>Beta</span>\n              </Tag>\n            </Box>\n          }\n          to={workspacePathFromAddress(repoAddress, '/docs')}\n        />\n      ) : null}\n      {repository ? (\n        <TabLink\n          id=\"definitions\"\n          title=\"Definitions\"\n          to={workspacePathFromAddress(repoAddress, '/definitions')}\n        />\n      ) : (\n        <Tab id=\"definitions\" title=\"Definitions\" disabled />\n      )}\n    </Tabs>\n  );\n};\n","import {\n  Box,\n  Colors,\n  Icon,\n  IconName,\n  MiddleTruncate,\n  NonIdealState,\n  TextInput,\n} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {ChangeEvent, ReactNode, useCallback, useRef, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {Container, HeaderCell, HeaderRow, Inner, Row} from '../ui/VirtualizedTable';\n\nconst ROW_HEIGHT = 44;\n\ninterface Props<T> {\n  items: T[];\n  placeholder: string;\n  nameFilter: (item: T, searchValue: string) => boolean;\n  renderRow: (item: T) => ReactNode;\n}\n\nexport const CodeLocationSearchableList = <T,>(props: Props<T>) => {\n  const {items, placeholder, nameFilter, renderRow} = props;\n\n  const [searchValue, setSearchValue] = useState('');\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const trimmedValue = searchValue.trim().toLowerCase();\n  const filteredItems = items.filter((item) => nameFilter(item, trimmedValue));\n\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: filteredItems.length,\n    getScrollElement: () => containerRef.current,\n    estimateSize: () => ROW_HEIGHT,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const virtualItems = rowVirtualizer.getVirtualItems();\n\n  return (\n    <Box flex={{direction: 'column'}} style={{overflow: 'hidden'}}>\n      <Box padding={{vertical: 8, horizontal: 24}}>\n        <TextInput\n          value={searchValue}\n          onChange={onChange}\n          placeholder={placeholder}\n          style={{width: '300px'}}\n          icon=\"search\"\n        />\n      </Box>\n      <div style={{flex: 1, overflow: 'hidden'}}>\n        <Container ref={containerRef}>\n          <HeaderRow templateColumns=\"1fr\" sticky>\n            <HeaderCell>Name</HeaderCell>\n          </HeaderRow>\n          {virtualItems.length > 0 ? (\n            <Inner $totalHeight={totalHeight}>\n              {virtualItems.map(({index, key, size, start}) => {\n                const item = filteredItems[index]!;\n                return (\n                  <Row key={key} $height={size} $start={start}>\n                    {renderRow(item)}\n                  </Row>\n                );\n              })}\n            </Inner>\n          ) : (\n            <Box flex={{direction: 'row', justifyContent: 'center'}} padding={{top: 32}}>\n              <NonIdealState\n                icon=\"search\"\n                title=\"No matching results\"\n                description={\n                  <>\n                    No matching results for query <strong>{searchValue}</strong> found in this code\n                    location.\n                  </>\n                }\n              />\n            </Box>\n          )}\n        </Container>\n      </div>\n    </Box>\n  );\n};\n\ninterface SearchableListRowProps {\n  iconName: IconName;\n  label: string;\n  path: string;\n}\n\nexport const SearchableListRow = ({iconName, label, path}: SearchableListRowProps) => {\n  return (\n    <Box\n      padding={{horizontal: 24}}\n      border=\"bottom\"\n      flex={{direction: 'column', justifyContent: 'center', alignItems: 'flex-start'}}\n      style={{height: ROW_HEIGHT, overflow: 'hidden'}}\n    >\n      <ListLink to={path} style={{width: '100%', overflow: 'hidden'}}>\n        <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n          <Icon name={iconName} color={Colors.linkDefault()} />\n          <div style={{flex: 1, overflow: 'hidden'}}>\n            <MiddleTruncate text={label} />\n          </div>\n        </Box>\n      </ListLink>\n    </Box>\n  );\n};\n\nconst ListLink = styled(Link)`\n  :active,\n  :focus {\n    outline: none;\n  }\n`;\n","import {useMemo} from 'react';\n\nimport {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AssetKeyInput} from '../graphql/types';\n\nconst useSanitizedAssetSearch = (searchValue: string) => {\n  return useMemo(() => {\n    return (searchValue || '')\n      .replace(/(( ?> ?)|\\.|\\/)/g, '/')\n      .toLowerCase()\n      .trim();\n  }, [searchValue]);\n};\n\nexport const useAssetSearch = <A extends {key: AssetKeyInput} | {assetKey: AssetKeyInput}>(\n  searchValue: string,\n  assets: A[],\n): A[] => {\n  const sanitizedSearch = useSanitizedAssetSearch(searchValue);\n\n  return useMemo(() => {\n    // If there is no search value, match everything.\n    if (!sanitizedSearch) {\n      return assets;\n    }\n    return assets.filter((a) =>\n      tokenForAssetKey('assetKey' in a ? a.assetKey : a.key)\n        .toLowerCase()\n        .includes(sanitizedSearch),\n    );\n  }, [assets, sanitizedSearch]);\n};\n","import {gql} from '../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {ASSET_TABLE_DEFINITION_FRAGMENT} from '../assets/AssetTableFragment';\n\nexport const REPO_ASSET_TABLE_FRAGMENT = gql`\n  fragment RepoAssetTableFragment on AssetNode {\n    id\n    assetKey {\n      path\n    }\n    groupName\n    ...AssetTableDefinitionFragment\n  }\n\n  ${ASSET_TABLE_DEFINITION_FRAGMENT}\n`;\n\nexport const WORKSPACE_ASSETS_QUERY = gql`\n  query WorkspaceAssetsQuery($selector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $selector) {\n      ... on Repository {\n        id\n        name\n        assetNodes {\n          id\n          ...RepoAssetTableFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${REPO_ASSET_TABLE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {useCallback, useContext, useMemo} from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nconst validateExpandedKeys = (parsed: unknown) => (Array.isArray(parsed) ? parsed : []);\n/**\n * Use localStorage to persist the expanded/collapsed visual state of rows.\n */\nexport const usePersistedExpansionState = (storageKey: string) => {\n  const {basePath} = useContext(AppContext);\n  const [expandedKeys, setExpandedKeys] = useStateWithStorage<string[]>(\n    `${basePath}:dagster.${storageKey}`,\n    validateExpandedKeys,\n  );\n\n  const onToggle = useCallback(\n    (key: string) => {\n      setExpandedKeys((current) => {\n        const nextExpandedKeys = new Set(current || []);\n        if (nextExpandedKeys.has(key)) {\n          nextExpandedKeys.delete(key);\n        } else {\n          nextExpandedKeys.add(key);\n        }\n        return Array.from(nextExpandedKeys);\n      });\n    },\n    [setExpandedKeys],\n  );\n\n  return useMemo(\n    () => ({\n      expandedKeys,\n      onToggle,\n    }),\n    [expandedKeys, onToggle],\n  );\n};\n","import {useMemo} from 'react';\n\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {RepoAddress} from './types';\nimport {RepoAssetTableFragment} from './types/WorkspaceAssetsQuery.types';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {usePersistedExpansionState} from '../ui/usePersistedExpansionState';\n\ntype Asset = RepoAssetTableFragment;\n\ntype RowType =\n  | {type: 'group'; name: string; assetCount: number}\n  | {type: 'asset'; id: string; definition: Asset};\n\nconst UNGROUPED_NAME = 'UNGROUPED';\nconst ASSET_GROUPS_EXPANSION_STATE_STORAGE_KEY = 'assets-virtualized-expansion-state';\n\ntype Config = {\n  repoAddress: RepoAddress;\n  assets: Asset[];\n};\n\nexport const useFlattenedGroupedAssetList = ({repoAddress, assets}: Config) => {\n  const repoKey = repoAddressAsHumanString(repoAddress);\n  const {expandedKeys, onToggle} = usePersistedExpansionState(\n    `${repoKey}-${ASSET_GROUPS_EXPANSION_STATE_STORAGE_KEY}`,\n  );\n\n  const grouped: Record<string, Asset[]> = useMemo(() => {\n    const groups: Record<string, Asset[]> = {};\n    for (const asset of assets) {\n      const groupName = asset.groupName || UNGROUPED_NAME;\n      if (!groups[groupName]) {\n        groups[groupName] = [];\n      }\n      groups[groupName]!.push(asset);\n    }\n\n    Object.values(groups).forEach((group) => {\n      group.sort((a, b) =>\n        COMMON_COLLATOR.compare(\n          displayNameForAssetKey(a.assetKey),\n          displayNameForAssetKey(b.assetKey),\n        ),\n      );\n    });\n\n    return groups;\n  }, [assets]);\n\n  const flattened: RowType[] = useMemo(() => {\n    const flat: RowType[] = [];\n    Object.entries(grouped)\n      .sort(([aName], [bName]) => COMMON_COLLATOR.compare(aName, bName))\n      .forEach(([groupName, assetsForGroup]) => {\n        flat.push({type: 'group', name: groupName, assetCount: assetsForGroup.length});\n        if (expandedKeys.includes(groupName)) {\n          assetsForGroup.forEach((asset) => {\n            flat.push({type: 'asset', id: asset.id, definition: asset});\n          });\n        }\n      });\n    return flat;\n  }, [grouped, expandedKeys]);\n\n  return {flattened, expandedKeys: new Set(expandedKeys), onToggle};\n};\n","import {\n  Box,\n  Colors,\n  Icon,\n  IconWrapper,\n  NonIdealState,\n  SpinnerWithText,\n  Tag,\n  TextInput,\n} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {ChangeEvent, useCallback, useMemo, useRef, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {SearchableListRow} from './CodeLocationSearchableList';\nimport {useQuery} from '../apollo-client';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {useAssetSearch} from '../assets/useAssetSearch';\nimport {Container, HeaderCell, HeaderRow, Inner, Row} from '../ui/VirtualizedTable';\nimport {WORKSPACE_ASSETS_QUERY} from '../workspace/WorkspaceAssetsQuery';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {\n  WorkspaceAssetsQuery,\n  WorkspaceAssetsQueryVariables,\n} from '../workspace/types/WorkspaceAssetsQuery.types';\nimport {useFlattenedGroupedAssetList} from '../workspace/useFlattenedGroupedAssetList';\n\nconst UNGROUPED_NAME = 'UNGROUPED';\nconst ROW_HEIGHT = 44;\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationAssetsList = ({repoAddress}: Props) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const repoName = repoAddressAsHumanString(repoAddress);\n  const selector = repoAddressToSelector(repoAddress);\n  const queryResultOverview = useQuery<WorkspaceAssetsQuery, WorkspaceAssetsQueryVariables>(\n    WORKSPACE_ASSETS_QUERY,\n    {\n      variables: {selector},\n    },\n  );\n  const {data, loading} = queryResultOverview;\n\n  const assetNodes = useMemo(() => {\n    if (data?.repositoryOrError.__typename === 'Repository') {\n      return data.repositoryOrError.assetNodes;\n    }\n    return [];\n  }, [data]);\n\n  const filteredBySearch = useAssetSearch(searchValue, assetNodes);\n  const {flattened, expandedKeys, onToggle} = useFlattenedGroupedAssetList({\n    repoAddress,\n    assets: filteredBySearch,\n  });\n\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: flattened.length,\n    getScrollElement: () => containerRef.current,\n    estimateSize: () => ROW_HEIGHT,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const virtualItems = rowVirtualizer.getVirtualItems();\n\n  const content = () => {\n    if (loading && !data) {\n      return (\n        <Box flex={{direction: 'row', justifyContent: 'center'}} padding={32}>\n          <SpinnerWithText label=\"Loading assets…\" />\n        </Box>\n      );\n    }\n\n    if (!filteredBySearch.length) {\n      if (searchValue.trim().length > 0) {\n        return (\n          <Box padding={{top: 20}}>\n            <NonIdealState\n              icon=\"search\"\n              title=\"No matching assets\"\n              description={\n                <div>\n                  No assets matching <strong>{searchValue}</strong> were found in {repoName}\n                </div>\n              }\n            />\n          </Box>\n        );\n      }\n\n      return (\n        <Box padding={{top: 20}}>\n          <NonIdealState\n            icon=\"search\"\n            title=\"No assets\"\n            description={`No assets were found in ${repoName}`}\n          />\n        </Box>\n      );\n    }\n\n    return (\n      <Container ref={containerRef}>\n        <HeaderRow templateColumns=\"1fr\" sticky>\n          <HeaderCell>Name</HeaderCell>\n        </HeaderRow>\n        <Inner $totalHeight={totalHeight}>\n          {virtualItems.map(({index, key, size, start}) => {\n            const item = flattened[index]!;\n            if (item.type === 'group') {\n              return (\n                <GroupNameRow\n                  key={key}\n                  height={size}\n                  start={start}\n                  expanded={expandedKeys.has(item.name)}\n                  groupName={item.name}\n                  assetCount={item.assetCount}\n                  onToggle={onToggle}\n                />\n              );\n            }\n\n            const {path} = item.definition.assetKey;\n            return (\n              <Row key={key} $height={size} $start={start}>\n                <SearchableListRow\n                  iconName=\"asset\"\n                  label={displayNameForAssetKey({path})}\n                  path={assetDetailsPathForKey({path})}\n                />\n              </Row>\n            );\n          })}\n        </Inner>\n      </Container>\n    );\n  };\n\n  return (\n    <Box flex={{direction: 'column'}} style={{overflow: 'hidden'}}>\n      <Box padding={{vertical: 8, horizontal: 24}}>\n        <TextInput\n          value={searchValue}\n          onChange={onChange}\n          placeholder=\"Search assets by key…\"\n          style={{width: '300px'}}\n          icon=\"search\"\n        />\n      </Box>\n      <div style={{flex: 1, overflow: 'hidden'}}>{content()}</div>\n    </Box>\n  );\n};\n\ninterface GroupNameRowProps {\n  groupName: string;\n  assetCount: number;\n  expanded: boolean;\n  height: number;\n  start: number;\n  onToggle: (groupName: string) => void;\n}\n\nconst GroupNameRow = (props: GroupNameRowProps) => {\n  const {groupName, assetCount, expanded, height, start, onToggle} = props;\n  return (\n    <ClickableRow\n      $height={height}\n      $start={start}\n      onClick={() => onToggle(groupName)}\n      $open={expanded}\n      tabIndex={0}\n      onKeyDown={(e) => {\n        if (e.code === 'Space' || e.code === 'Enter') {\n          e.preventDefault();\n          onToggle(groupName);\n        }\n      }}\n    >\n      <Box\n        background={Colors.backgroundLight()}\n        flex={{direction: 'row', alignItems: 'center', gap: 8, justifyContent: 'space-between'}}\n        padding={{horizontal: 24}}\n        border=\"bottom\"\n        style={{height: '100%'}}\n      >\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          <Icon name=\"asset_group\" />\n          {groupName === UNGROUPED_NAME ? (\n            <div>Ungrouped assets</div>\n          ) : (\n            <strong>{groupName}</strong>\n          )}\n        </Box>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          <Tag>{assetCount === 1 ? '1 asset' : `${assetCount} assets`}</Tag>\n          <Icon name=\"arrow_drop_down\" size={20} />\n        </Box>\n      </Box>\n    </ClickableRow>\n  );\n};\n\nconst ClickableRow = styled(Row)<{$open: boolean}>`\n  cursor: pointer;\n\n  :focus,\n  :active {\n    outline: none;\n  }\n\n  ${IconWrapper}[aria-label=\"arrow_drop_down\"] {\n    transition: transform 100ms linear;\n    ${({$open}) => ($open ? null : `transform: rotate(-90deg);`)}\n  }\n`;\n","import {gql} from '../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\n\nconst REPOSITORY_GRAPHS_FRAGMENT = gql`\n  fragment RepositoryGraphsFragment on Repository {\n    id\n    usedSolids {\n      definition {\n        ... on CompositeSolidDefinition {\n          id\n          name\n          description\n        }\n      }\n      invocations {\n        pipeline {\n          id\n          name\n        }\n        solidHandle {\n          handleID\n        }\n      }\n    }\n    pipelines {\n      id\n      name\n      isJob\n      graphName\n    }\n  }\n`;\n\nexport const WORSKPACE_GRAPHS_QUERY = gql`\n  query WorkspaceGraphsQuery($selector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $selector) {\n      ... on Repository {\n        id\n        ...RepositoryGraphsFragment\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${REPOSITORY_GRAPHS_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {RepositoryGraphsFragment} from './types/WorkspaceGraphsQuery.types';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\ntype Graph = {name: string; path: string; description: string | null};\n\nexport const extractGraphsForRepo = (repo: RepositoryGraphsFragment) => {\n  const jobGraphNames = new Set<string>(\n    repo.pipelines.filter((p) => p.isJob && !isHiddenAssetGroupJob(p.name)).map((p) => p.graphName),\n  );\n\n  const items: Graph[] = Array.from(jobGraphNames).map((graphName) => ({\n    name: graphName,\n    path: `/graphs/${graphName}`,\n    description: null,\n  }));\n\n  repo.usedSolids.forEach((s) => {\n    if (s.definition.__typename === 'CompositeSolidDefinition') {\n      const invocation = s.invocations[0];\n      if (invocation) {\n        items.push({\n          name: s.definition.name,\n          path: `/graphs/${invocation.pipeline.name}/${invocation.solidHandle.handleID}/`,\n          description: s.definition.description,\n        });\n      }\n    }\n  });\n\n  return items.sort((a, b) => COMMON_COLLATOR.compare(a.name, b.name));\n};\n","import {Box, NonIdealState, SpinnerWithText} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\n\nimport {CodeLocationSearchableList, SearchableListRow} from './CodeLocationSearchableList';\nimport {useQuery} from '../apollo-client';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {WORSKPACE_GRAPHS_QUERY} from '../workspace/WorkspaceGraphsQuery';\nimport {extractGraphsForRepo} from '../workspace/extractGraphsForRepo';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {\n  WorkspaceGraphsQuery,\n  WorkspaceGraphsQueryVariables,\n} from '../workspace/types/WorkspaceGraphsQuery.types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationGraphsList = (props: Props) => {\n  const {repoAddress} = props;\n\n  const selector = repoAddressToSelector(repoAddress);\n\n  const queryResult = useQuery<WorkspaceGraphsQuery, WorkspaceGraphsQueryVariables>(\n    WORSKPACE_GRAPHS_QUERY,\n    {variables: {selector}},\n  );\n\n  const {data, loading} = queryResult;\n\n  const graphs = useMemo(() => {\n    const repo = data?.repositoryOrError;\n    if (!repo || repo.__typename !== 'Repository') {\n      return [];\n    }\n\n    return extractGraphsForRepo(repo);\n  }, [data]);\n\n  const repoString = repoAddressAsHumanString(repoAddress);\n\n  if (loading) {\n    return (\n      <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n        <SpinnerWithText label=\"Loading graphs…\" />\n      </Box>\n    );\n  }\n\n  if (!data || !data.repositoryOrError) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"graph\"\n          title=\"An unexpected error occurred\"\n          description={`An error occurred while loading graphs for ${repoString}`}\n        />\n      </Box>\n    );\n  }\n\n  if (data.repositoryOrError.__typename === 'PythonError') {\n    return (\n      <Box padding={64}>\n        <PythonErrorInfo error={data.repositoryOrError} />\n      </Box>\n    );\n  }\n\n  if (data.repositoryOrError.__typename === 'RepositoryNotFoundError') {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"op\"\n          title=\"Repository not found\"\n          description={`The repository ${repoString} could not be found in this workspace.`}\n        />\n      </Box>\n    );\n  }\n\n  if (!graphs.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"graph\"\n          title=\"No graphs found\"\n          description={`The repository ${repoString} does not contain any graphs.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={graphs}\n      placeholder=\"Search graphs by name…\"\n      nameFilter={(graph, value) => graph.name.toLowerCase().includes(value)}\n      renderRow={(graph) => (\n        <SearchableListRow\n          iconName=\"graph\"\n          label={graph.name}\n          path={workspacePathFromAddress(repoAddress, graph.path)}\n        />\n      )}\n    />\n  );\n};\n","import {Box} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nimport {gql} from '../apollo-client';\nimport {OpCardSolidDefinitionFragment} from './types/OpCard.types';\nimport {OP_NODE_DEFINITION_FRAGMENT, OpNode} from '../graph/OpNode';\nimport {layoutOp} from '../graph/asyncGraphLayout';\n\ninterface OpCardProps {\n  definition: OpCardSolidDefinitionFragment;\n}\n\nexport const OpCard = (props: OpCardProps) => {\n  const {name, inputDefinitions, outputDefinitions} = props.definition;\n  const layout = layoutOp(\n    {\n      name,\n      inputs: inputDefinitions.map((d) => ({\n        definition: d,\n        dependsOn: [],\n      })),\n      outputs: outputDefinitions.map((d) => ({\n        definition: d,\n        dependedBy: [],\n      })),\n      definition: {\n        description: null,\n        assetNodes: [],\n      },\n    },\n    {x: 0, y: 0},\n  );\n\n  return (\n    <Box padding={24}>\n      <OpCardContainer style={{height: layout.bounds.height}}>\n        <OpNode\n          invocation={undefined}\n          definition={props.definition}\n          minified={false}\n          onClick={() => {}}\n          onDoubleClick={() => {}}\n          onEnterComposite={() => {}}\n          onHighlightEdges={() => {}}\n          layout={layout}\n          selected={false}\n          focused={false}\n          highlightedEdges={[]}\n          dim={false}\n        />\n      </OpCardContainer>\n    </Box>\n  );\n};\n\nexport const OP_CARD_SOLID_DEFINITION_FRAGMENT = gql`\n  fragment OpCardSolidDefinitionFragment on ISolidDefinition {\n    name\n    description\n    metadata {\n      key\n      value\n    }\n    inputDefinitions {\n      name\n    }\n    outputDefinitions {\n      name\n    }\n    ...OpNodeDefinitionFragment\n  }\n\n  ${OP_NODE_DEFINITION_FRAGMENT}\n`;\n\nconst OpCardContainer = styled.div`\n  flex: 1;\n  max-width: 450px;\n  position: relative;\n`;\n","import styled from 'styled-components';\n\nimport {OP_CARD_SOLID_DEFINITION_FRAGMENT, OpCard} from './OpCard';\nimport {gql, useQuery} from '../apollo-client';\nimport {UsedSolidDetailsQuery, UsedSolidDetailsQueryVariables} from './types/OpDetailsRoot.types';\nimport {\n  SIDEBAR_OP_DEFINITION_FRAGMENT,\n  SidebarOpDefinition,\n} from '../pipelines/SidebarOpDefinition';\nimport {SidebarOpInvocationInfo} from '../pipelines/SidebarOpHelpers';\nimport {Loading} from '../ui/Loading';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface UsedSolidDetailsProps {\n  name: string;\n  onClickInvocation: (arg: SidebarOpInvocationInfo) => void;\n  repoAddress: RepoAddress;\n}\n\nexport const UsedSolidDetails = (props: UsedSolidDetailsProps) => {\n  const {name, onClickInvocation, repoAddress} = props;\n  const repositorySelector = repoAddressToSelector(repoAddress);\n\n  const queryResult = useQuery<UsedSolidDetailsQuery, UsedSolidDetailsQueryVariables>(\n    USED_SOLID_DETAILS_QUERY,\n    {\n      variables: {\n        name,\n        repositorySelector,\n      },\n    },\n  );\n\n  return (\n    <Loading queryResult={queryResult}>\n      {({repositoryOrError}) => {\n        if (!(repositoryOrError?.__typename === 'Repository' && repositoryOrError.usedSolid)) {\n          return null;\n        }\n        const usedSolid = repositoryOrError.usedSolid;\n        return (\n          <>\n            <OpCard definition={usedSolid.definition} />\n            <SidebarOpDefinition\n              definition={usedSolid.definition}\n              showingSubgraph={false}\n              onClickInvocation={onClickInvocation}\n              getInvocations={() => {\n                return usedSolid.invocations.map((i) => ({\n                  handleID: i.solidHandle.handleID,\n                  pipelineName: i.pipeline.name,\n                }));\n              }}\n            />\n          </>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst USED_SOLID_DETAILS_QUERY = gql`\n  query UsedSolidDetailsQuery($name: String!, $repositorySelector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      ... on Repository {\n        id\n        usedSolid(name: $name) {\n          definition {\n            ...OpCardSolidDefinitionFragment\n            ...SidebarOpDefinitionFragment\n          }\n          invocations {\n            pipeline {\n              id\n              name\n            }\n            solidHandle {\n              handleID\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ${OP_CARD_SOLID_DEFINITION_FRAGMENT}\n  ${SIDEBAR_OP_DEFINITION_FRAGMENT}\n`;\n\nexport const OpDetailScrollContainer = styled.div`\n  overflow-y: scroll;\n  flex: 1;\n`;\n","import {\n  Box,\n  Colors,\n  MiddleTruncate,\n  NonIdealState,\n  SplitPanelContainer,\n  SuggestionProvider,\n  TokenizingField,\n  TokenizingFieldValue,\n  stringFromValue,\n  tokenizedValuesFromString,\n} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {useMemo, useRef} from 'react';\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {OpDetailScrollContainer, UsedSolidDetails} from './OpDetailsRoot';\nimport {OP_TYPE_SIGNATURE_FRAGMENT} from './OpTypeSignature';\nimport {gql, useQuery} from '../apollo-client';\nimport {OpsRootQuery, OpsRootQueryVariables, OpsRootUsedSolidFragment} from './types/OpsRoot.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {Loading} from '../ui/Loading';\nimport {Container, Inner, Row} from '../ui/VirtualizedTable';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nfunction flatUniq(arrs: string[][]) {\n  const results: {[key: string]: boolean} = {};\n  for (const arr of arrs) {\n    for (const item of arr) {\n      results[item] = true;\n    }\n  }\n  return Object.keys(results).sort((a, b) => a.localeCompare(b));\n}\n\ntype Solid = OpsRootUsedSolidFragment;\n\nfunction searchSuggestionsForOps(solids: Solid[]): SuggestionProvider[] {\n  return [\n    {\n      token: 'name',\n      values: () => solids.map((s) => s.definition.name),\n    },\n    {\n      token: 'job',\n      values: () =>\n        flatUniq(\n          solids.map((s) =>\n            s.invocations.filter((i) => !i.pipeline.isJob).map((i) => i.pipeline.name),\n          ),\n        ),\n    },\n    {\n      token: 'pipeline',\n      values: () =>\n        flatUniq(\n          solids.map((s) =>\n            s.invocations.filter((i) => i.pipeline.isJob).map((i) => i.pipeline.name),\n          ),\n        ),\n    },\n    {\n      token: 'input',\n      values: () =>\n        flatUniq(solids.map((s) => s.definition.inputDefinitions.map((d) => d.type.displayName))),\n    },\n    {\n      token: 'output',\n      values: () =>\n        flatUniq(solids.map((s) => s.definition.outputDefinitions.map((d) => d.type.displayName))),\n    },\n  ];\n}\n\nfunction filterSolidsWithSearch(solids: Solid[], search: TokenizingFieldValue[]) {\n  return solids.filter((s) => {\n    for (const item of search) {\n      if (\n        (item.token === 'name' || item.token === undefined) &&\n        !s.definition.name.startsWith(item.value)\n      ) {\n        return false;\n      }\n      if (\n        (item.token === 'pipeline' || item.token === 'job') &&\n        !s.invocations.some((i) => i.pipeline.name === item.value)\n      ) {\n        return false;\n      }\n      if (\n        item.token === 'input' &&\n        !s.definition.inputDefinitions.some((i) => i.type.displayName.startsWith(item.value))\n      ) {\n        return false;\n      }\n      if (\n        item.token === 'output' &&\n        !s.definition.outputDefinitions.some((i) => i.type.displayName.startsWith(item.value))\n      ) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const OpsRoot = (props: Props) => {\n  useTrackPageView();\n  useDocumentTitle('Ops');\n\n  const {name} = useParams<{name?: string}>();\n  const {repoAddress} = props;\n\n  const repositorySelector = repoAddressToSelector(repoAddress);\n\n  const queryResult = useQuery<OpsRootQuery, OpsRootQueryVariables>(OPS_ROOT_QUERY, {\n    variables: {repositorySelector},\n  });\n\n  return (\n    <div style={{flex: 1, minHeight: 0}}>\n      <Loading queryResult={queryResult}>\n        {({repositoryOrError}) => {\n          if (repositoryOrError?.__typename === 'Repository' && repositoryOrError.usedSolids) {\n            return (\n              <OpsRootWithData\n                {...props}\n                name={name}\n                repoAddress={repoAddress}\n                usedSolids={repositoryOrError.usedSolids}\n              />\n            );\n          }\n          return null;\n        }}\n      </Loading>\n    </div>\n  );\n};\n\ninterface OpsRootWithDataProps extends Props {\n  name?: string;\n  usedSolids: Solid[];\n}\n\nexport const OpsRootWithData = (props: OpsRootWithDataProps) => {\n  const {name, repoAddress, usedSolids} = props;\n  const history = useHistory();\n  const location = useLocation();\n\n  const {q, typeExplorer} = qs.parse(location.search, {ignoreQueryPrefix: true});\n  const suggestions = searchSuggestionsForOps(usedSolids);\n  const search = tokenizedValuesFromString((q as string) || '', suggestions);\n  const filtered = filterSolidsWithSearch(usedSolids, search);\n\n  const sorted = useMemo(() => {\n    return [...filtered].sort((a, b) =>\n      COMMON_COLLATOR.compare(a.definition.name, b.definition.name),\n    );\n  }, [filtered]);\n\n  const selected = usedSolids.find((s) => s.definition.name === name);\n\n  const onSearch = (search: TokenizingFieldValue[]) => {\n    history.replace({\n      search: `?${qs.stringify({q: stringFromValue(search)})}`,\n    });\n  };\n\n  const onClickOp = (defName: string) => {\n    history.replace(workspacePathFromAddress(repoAddress, `/ops/${defName}?${qs.stringify({q})}`));\n  };\n\n  React.useEffect(() => {\n    // If the user has typed in a search that brings us to a single result, autoselect it\n    if (sorted.length === 1 && (!selected || sorted[0] !== selected)) {\n      onClickOp(sorted[0]!.definition.name);\n    }\n\n    // If the user has clicked a type, translate it into a search\n    if (typeof typeExplorer === 'string') {\n      onSearch([...search, {token: 'input', value: typeExplorer}]);\n    }\n  });\n\n  const onClickInvocation: React.ComponentProps<typeof UsedSolidDetails>['onClickInvocation'] =\n    React.useCallback(\n      ({pipelineName, handleID}) => {\n        history.push(\n          workspacePathFromAddress(\n            repoAddress,\n            `/pipeline_or_job/${pipelineName}/${handleID.split('.').join('/')}`,\n          ),\n        );\n      },\n      [history, repoAddress],\n    );\n\n  return (\n    <div style={{height: '100%', display: 'flex'}}>\n      <SplitPanelContainer\n        identifier=\"ops\"\n        firstInitialPercent={40}\n        firstMinSize={448}\n        first={\n          <OpListColumnContainer>\n            <Box padding={{vertical: 12, horizontal: 24}} border=\"bottom\">\n              <TokenizingField\n                values={search}\n                onChange={(search) => onSearch(search)}\n                suggestionProviders={suggestions}\n                placeholder=\"Filter by name or input/output type...\"\n              />\n            </Box>\n            <div style={{flex: 1, overflow: 'hidden'}}>\n              <OpList selected={selected} onClickOp={onClickOp} items={sorted} />\n            </div>\n          </OpListColumnContainer>\n        }\n        second={\n          selected ? (\n            <OpDetailScrollContainer>\n              <UsedSolidDetails\n                name={selected.definition.name}\n                onClickInvocation={onClickInvocation}\n                repoAddress={repoAddress}\n              />\n            </OpDetailScrollContainer>\n          ) : (\n            <Box padding={{vertical: 64}}>\n              <NonIdealState\n                icon=\"no-results\"\n                title=\"No op selected\"\n                description=\"Select an op to see its definition and invocations\"\n              />\n            </Box>\n          )\n        }\n      />\n    </div>\n  );\n};\n\ninterface OpListProps {\n  items: Solid[];\n  selected: Solid | undefined;\n  onClickOp: (name: string) => void;\n}\n\nconst OpList = (props: OpListProps) => {\n  const {items, selected} = props;\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: items.length,\n    getScrollElement: () => containerRef.current,\n    estimateSize: () => 42,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const virtualItems = rowVirtualizer.getVirtualItems();\n\n  const selectedIndex = selected ? items.findIndex((item) => item === selected) : undefined;\n\n  return (\n    <Container ref={containerRef}>\n      <Inner $totalHeight={totalHeight}>\n        {virtualItems.map(({index, size, start}) => {\n          const solid = items[index]!;\n          return (\n            <Row key={solid.definition.name} $height={size} $start={start}>\n              <OpListItem\n                $selected={selectedIndex === index}\n                onClick={() => props.onClickOp(solid.definition.name)}\n              >\n                <MiddleTruncate text={solid.definition.name} />\n              </OpListItem>\n            </Row>\n          );\n        })}\n      </Inner>\n    </Container>\n  );\n};\n\nexport const OPS_ROOT_QUERY = gql`\n  query OpsRootQuery($repositorySelector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      ... on Repository {\n        id\n        usedSolids {\n          ...OpsRootUsedSolid\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment OpsRootUsedSolid on UsedSolid {\n    definition {\n      name\n      ...OpTypeSignatureFragment\n    }\n    invocations {\n      pipeline {\n        id\n        isJob\n        name\n      }\n    }\n  }\n\n  ${OP_TYPE_SIGNATURE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst OpListItem = styled.div<{$selected: boolean}>`\n  background: ${({$selected}) =>\n    $selected ? Colors.backgroundLight() : Colors.backgroundDefault()};\n  box-shadow:\n    ${({$selected}) => ($selected ? Colors.accentBlue() : 'transparent')} 4px 0 0 inset,\n    ${Colors.keylineDefault()} 0 -1px 0 inset;\n  color: ${({$selected}) => ($selected ? Colors.textDefault() : Colors.textLight())};\n  cursor: pointer;\n  font-size: 14px;\n  gap: 8px;\n  padding: 12px 24px;\n  user-select: none;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst OpListColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n","import {Box, NonIdealState, SpinnerWithText} from '@dagster-io/ui-components';\nimport {useParams} from 'react-router-dom';\n\nimport {useQuery} from '../apollo-client';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {OPS_ROOT_QUERY, OpsRootWithData} from '../ops/OpsRoot';\nimport {OpsRootQuery, OpsRootQueryVariables} from '../ops/types/OpsRoot.types';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationOpsView = ({repoAddress}: Props) => {\n  const {name} = useParams<{name?: string}>();\n  const repositorySelector = repoAddressToSelector(repoAddress);\n\n  const queryResult = useQuery<OpsRootQuery, OpsRootQueryVariables>(OPS_ROOT_QUERY, {\n    variables: {repositorySelector},\n  });\n\n  const {data, loading} = queryResult;\n\n  const repoString = repoAddressAsHumanString(repoAddress);\n\n  if (loading) {\n    return (\n      <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n        <SpinnerWithText label=\"Loading ops…\" />\n      </Box>\n    );\n  }\n\n  if (!data || !data.repositoryOrError) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"op\"\n          title=\"An unexpected error occurred\"\n          description={`An error occurred while loading ops for ${repoString}`}\n        />\n      </Box>\n    );\n  }\n\n  if (data.repositoryOrError.__typename === 'PythonError') {\n    return (\n      <Box padding={64}>\n        <PythonErrorInfo error={data.repositoryOrError} />\n      </Box>\n    );\n  }\n\n  if (data.repositoryOrError.__typename === 'RepositoryNotFoundError') {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"op\"\n          title=\"Repository not found\"\n          description={`The repository ${repoString} could not be found in this workspace.`}\n        />\n      </Box>\n    );\n  }\n\n  const {repositoryOrError} = data;\n  const {usedSolids} = repositoryOrError;\n\n  if (!usedSolids.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"op\"\n          title=\"No ops found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any ops.`}\n        />\n      </Box>\n    );\n  }\n\n  return <OpsRootWithData name={name} repoAddress={repoAddress} usedSolids={usedSolids} />;\n};\n","import {Box, NonIdealState} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\nimport {Switch} from 'react-router-dom';\n\nimport {CodeLocationAssetsList} from './CodeLocationAssetsList';\nimport {CodeLocationGraphsList} from './CodeLocationGraphsList';\nimport {CodeLocationOpsView} from './CodeLocationOpsView';\nimport {CodeLocationSearchableList, SearchableListRow} from './CodeLocationSearchableList';\nimport {Route} from '../app/Route';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {WorkspaceRepositoryFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  repository: WorkspaceRepositoryFragment;\n}\n\nexport const CodeLocationDefinitionsMain = ({repoAddress, repository}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'stretch'}} style={{flex: 1, overflow: 'hidden'}}>\n      <Switch>\n        <Route path=\"/locations/:repoPath/assets\">\n          <CodeLocationAssetsList repoAddress={repoAddress} />\n        </Route>\n        <Route path=\"/locations/:repoPath/jobs\">\n          <CodeLocationJobsList repoAddress={repoAddress} repository={repository} />\n        </Route>\n        <Route path=\"/locations/:repoPath/sensors\">\n          <CodeLocationSensorsList repoAddress={repoAddress} repository={repository} />\n        </Route>\n        <Route path=\"/locations/:repoPath/schedules\">\n          <CodeLocationSchedulesList repoAddress={repoAddress} repository={repository} />\n        </Route>\n        <Route path=\"/locations/:repoPath/resources\">\n          <CodeLocationResourcesList repoAddress={repoAddress} repository={repository} />\n        </Route>\n        <Route path=\"/locations/:repoPath/graphs\">\n          <CodeLocationGraphsList repoAddress={repoAddress} />\n        </Route>\n        <Route path=\"/locations/:repoPath/ops/:name?\">\n          <CodeLocationOpsView repoAddress={repoAddress} />\n        </Route>\n      </Switch>\n    </Box>\n  );\n};\n\nconst CodeLocationJobsList = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const jobs = useMemo(\n    () =>\n      repository.pipelines\n        .filter(({name}) => !isHiddenAssetGroupJob(name))\n        .sort((a, b) => COMMON_COLLATOR.compare(a.name, b.name)),\n    [repository],\n  );\n\n  if (!jobs.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"job\"\n          title=\"No jobs found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any jobs.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={jobs}\n      placeholder=\"Search jobs by name…\"\n      nameFilter={(job, value) => job.name.toLowerCase().includes(value)}\n      renderRow={(job) => (\n        <SearchableListRow\n          iconName=\"job\"\n          label={job.name}\n          path={workspacePathFromAddress(repoAddress, `/jobs/${job.name}`)}\n        />\n      )}\n    />\n  );\n};\n\nconst CodeLocationSensorsList = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const sensors = useMemo(\n    () => [...repository.sensors].sort((a, b) => COMMON_COLLATOR.compare(a.name, b.name)),\n    [repository],\n  );\n\n  if (!sensors.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"sensors\"\n          title=\"No sensors found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any sensors.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={sensors}\n      placeholder=\"Search sensors by name…\"\n      nameFilter={(sensor, value) => sensor.name.toLowerCase().includes(value)}\n      renderRow={(sensor) => (\n        <SearchableListRow\n          iconName=\"sensors\"\n          label={sensor.name}\n          path={workspacePathFromAddress(repoAddress, `/sensors/${sensor.name}`)}\n        />\n      )}\n    />\n  );\n};\n\nconst CodeLocationSchedulesList = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const schedules = useMemo(\n    () => [...repository.schedules].sort((a, b) => COMMON_COLLATOR.compare(a.name, b.name)),\n    [repository],\n  );\n\n  if (!schedules.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"schedule\"\n          title=\"No schedules found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any schedules.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={schedules}\n      placeholder=\"Search schedules by name…\"\n      nameFilter={(schedule, value) => schedule.name.toLowerCase().includes(value)}\n      renderRow={(schedule) => (\n        <SearchableListRow\n          iconName=\"schedule\"\n          label={schedule.name}\n          path={workspacePathFromAddress(repoAddress, `/schedules/${schedule.name}`)}\n        />\n      )}\n    />\n  );\n};\n\nconst CodeLocationResourcesList = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const resources = useMemo(\n    () =>\n      [...repository.allTopLevelResourceDetails].sort((a, b) =>\n        COMMON_COLLATOR.compare(a.name, b.name),\n      ),\n    [repository],\n  );\n\n  if (!resources.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"resource\"\n          title=\"No resources found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any resources.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={resources}\n      placeholder=\"Search resources by name…\"\n      nameFilter={(resource, value) => resource.name.toLowerCase().includes(value)}\n      renderRow={(resource) => (\n        <SearchableListRow\n          iconName=\"resource\"\n          label={resource.name}\n          path={workspacePathFromAddress(repoAddress, `/resources/${resource.name}`)}\n        />\n      )}\n    />\n  );\n};\n","import {Box, Colors, IconWrapper, Tooltip, UnstyledButton} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled, {css} from 'styled-components';\n\ninterface SideNavItemInterface {\n  key: string;\n  icon: React.ReactNode;\n  label: React.ReactNode;\n  disabled?: boolean;\n  rightElement?: React.ReactNode;\n  tooltip?: string;\n  onClick?: () => void;\n}\n\nexport interface SideNavItemLinkConfig extends SideNavItemInterface {\n  type: 'link';\n  path: string;\n}\n\nexport interface SideNavItemButtonConfig extends SideNavItemInterface {\n  type: 'button';\n  onClick: () => void;\n}\n\nexport type SideNavItemConfig = SideNavItemLinkConfig | SideNavItemButtonConfig;\n\ninterface Props {\n  active?: boolean;\n  item: SideNavItemConfig;\n}\n\nexport const SideNavItem = (props: Props) => {\n  const {active = false, item} = props;\n  const {type, icon, label, rightElement, tooltip = '', disabled = false} = item;\n  const content = (\n    <Box\n      padding={{vertical: 4, left: 12, right: 8}}\n      flex={{direction: 'row', gap: 8, alignItems: 'center', justifyContent: 'space-between'}}\n    >\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}} className=\"iconAndLabel\">\n        {icon}\n        {label}\n      </Box>\n      <div>{rightElement}</div>\n    </Box>\n  );\n\n  if (type === 'link' && !disabled) {\n    return (\n      <Tooltip canShow={!!tooltip} content={tooltip} placement=\"right\" display=\"block\">\n        <StyledSideNavLink to={item.path} $active={active}>\n          {content}\n        </StyledSideNavLink>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip canShow={!!tooltip} content={tooltip} placement=\"right\" display=\"block\">\n      <StyledSideNavButton $active={active} disabled={disabled} onClick={item.onClick}>\n        {content}\n      </StyledSideNavButton>\n    </Tooltip>\n  );\n};\n\nconst sharedSideNavItemStyle = css<{$active: boolean}>`\n  background-color: ${({$active}) => ($active ? Colors.backgroundBlue() : 'transparent')};\n  border-radius: 8px;\n  color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n  display: block;\n  font-size: 14px;\n  line-height: 20px;\n  text-decoration: none;\n  transition: 100ms background-color linear;\n  user-select: none;\n  width: 100%;\n\n  :focus {\n    outline: none;\n    background-color: ${({$active}) =>\n      $active ? Colors.backgroundBlue() : Colors.backgroundLight()};\n  }\n\n  :hover,\n  :active {\n    background-color: ${({$active}) =>\n      $active ? Colors.backgroundBlue() : Colors.backgroundLightHover()};\n    color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n    text-decoration: none;\n  }\n\n  .iconAndLabel {\n    ${IconWrapper} {\n      background-color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n    }\n  }\n`;\n\nconst StyledSideNavLink = styled(Link)<{$active: boolean}>`\n  ${sharedSideNavItemStyle}\n`;\n\nconst StyledSideNavButton = styled(UnstyledButton)<{$active: boolean}>`\n  ${sharedSideNavItemStyle}\n`;\n","import {Box, Icon, Tag} from '@dagster-io/ui-components';\nimport {useLocation} from 'react-router-dom';\n\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {SideNavItem, SideNavItemConfig} from '../ui/SideNavItem';\nimport {numberFormatter} from '../ui/formatters';\nimport {WorkspaceRepositoryFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  repository: WorkspaceRepositoryFragment;\n}\n\nexport const CodeLocationDefinitionsNav = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const {pathname} = useLocation();\n  const assetGroupCount = repository.assetGroups.length;\n  const jobCount = repository.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repository.schedules.length;\n  const sensorCount = repository.sensors.length;\n  const resourceCount = repository.allTopLevelResourceDetails.length;\n\n  const items: SideNavItemConfig[] = [\n    {\n      key: 'assets',\n      type: 'link',\n      icon: <Icon name=\"asset\" />,\n      label: 'Assets',\n      path: workspacePathFromAddress(repoAddress, '/assets'),\n      rightElement: assetGroupCount ? (\n        <Tag icon=\"asset_group\">{numberFormatter.format(assetGroupCount)}</Tag>\n      ) : null,\n    },\n    {\n      key: 'jobs',\n      type: 'link',\n      icon: <Icon name=\"job\" />,\n      label: 'Jobs',\n      path: workspacePathFromAddress(repoAddress, '/jobs'),\n      rightElement: jobCount ? <Tag>{numberFormatter.format(jobCount)}</Tag> : null,\n    },\n    {\n      key: 'sensors',\n      type: 'link',\n      icon: <Icon name=\"sensors\" />,\n      label: 'Sensors',\n      path: workspacePathFromAddress(repoAddress, '/sensors'),\n      rightElement: sensorCount ? <Tag>{numberFormatter.format(sensorCount)}</Tag> : null,\n    },\n    {\n      key: 'schedules',\n      type: 'link',\n      icon: <Icon name=\"schedule\" />,\n      label: 'Schedules',\n      path: workspacePathFromAddress(repoAddress, '/schedules'),\n      rightElement: scheduleCount ? <Tag>{numberFormatter.format(scheduleCount)}</Tag> : null,\n    },\n    {\n      key: 'resources',\n      type: 'link',\n      icon: <Icon name=\"resource\" />,\n      label: 'Resources',\n      path: workspacePathFromAddress(repoAddress, '/resources'),\n      rightElement: resourceCount ? <Tag>{numberFormatter.format(resourceCount)}</Tag> : null,\n    },\n    {\n      key: 'graphs',\n      type: 'link',\n      icon: <Icon name=\"graph\" />,\n      label: 'Graphs',\n      path: workspacePathFromAddress(repoAddress, '/graphs'),\n    },\n    {\n      key: 'ops',\n      type: 'link',\n      icon: <Icon name=\"op\" />,\n      label: 'Ops',\n      path: workspacePathFromAddress(repoAddress, '/ops'),\n    },\n  ];\n\n  return (\n    <>\n      <Box padding={{bottom: 12}}>\n        {items.map((item) => {\n          return (\n            <SideNavItem\n              key={item.key}\n              item={item}\n              active={item.type === 'link' && pathname === item.path}\n            />\n          );\n        })}\n      </Box>\n    </>\n  );\n};\n","import {Box} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {CodeLocationPageHeader} from 'shared/code-location/CodeLocationPageHeader.oss';\nimport {CodeLocationTabs} from 'shared/code-location/CodeLocationTabs.oss';\n\nimport {CodeLocationDefinitionsMain} from './CodeLocationDefinitionsMain';\nimport {CodeLocationDefinitionsNav} from './CodeLocationDefinitionsNav';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {WorkspaceRepositoryFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  repository: WorkspaceRepositoryFragment;\n}\n\nexport const CodeLocationDefinitionsRoot = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const {locationEntries, loading} = useContext(WorkspaceContext);\n  const locationEntry = locationEntries.find((entry) => entry.name === repoAddress.location);\n\n  if (!locationEntry) {\n    if (!loading) {\n      return <Redirect to=\"/deployment/locations\" />;\n    }\n    return <div />;\n  }\n\n  return (\n    <Box style={{height: '100%', overflow: 'hidden'}} flex={{direction: 'column'}}>\n      <CodeLocationPageHeader repoAddress={repoAddress} />\n      <Box padding={{horizontal: 24}} border=\"bottom\">\n        <CodeLocationTabs\n          selectedTab=\"definitions\"\n          repoAddress={repoAddress}\n          locationEntry={locationEntry}\n        />\n      </Box>\n      <Box style={{overflow: 'hidden'}} flex={{direction: 'row', grow: 1}}>\n        <Box\n          style={{flex: '0 0 292px', overflowY: 'auto'}}\n          padding={{vertical: 16, horizontal: 12}}\n          border=\"right\"\n        >\n          <CodeLocationDefinitionsNav repoAddress={repoAddress} repository={repository} />\n        </Box>\n        <Box\n          flex={{direction: 'column', alignItems: 'stretch'}}\n          style={{flex: 1, overflow: 'hidden'}}\n        >\n          <CodeLocationDefinitionsMain repoAddress={repoAddress} repository={repository} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","'use client';\n\nimport {useState} from 'react';\n\nimport styles from './css/CopyButton.module.css';\n\ninterface Props {\n  content: string;\n}\n\nexport default function CopyButton({content}: Props) {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(content);\n      setCopied(true);\n      setTimeout(() => {\n        setCopied(false);\n      }, 2000);\n    } catch (e) {\n      console.error('Failed to copy text:', e);\n    }\n  };\n\n  const icon = copied ? (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.49967 13.5L3.99967 10L2.83301 11.1667L7.49967 15.8334L17.4997 5.83335L16.333 4.66669L7.49967 13.5Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ) : (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.5 15C7.04167 15 6.64931 14.8368 6.32292 14.5104C5.99653 14.184 5.83333 13.7917 5.83333 13.3334V3.33335C5.83333 2.87502 5.99653 2.48266 6.32292 2.15627C6.64931 1.82988 7.04167 1.66669 7.5 1.66669H15C15.4583 1.66669 15.8507 1.82988 16.1771 2.15627C16.5035 2.48266 16.6667 2.87502 16.6667 3.33335V13.3334C16.6667 13.7917 16.5035 14.184 16.1771 14.5104C15.8507 14.8368 15.4583 15 15 15H7.5ZM7.5 13.3334H15V3.33335H7.5V13.3334ZM4.16667 18.3334C3.70833 18.3334 3.31597 18.1702 2.98958 17.8438C2.66319 17.5174 2.5 17.125 2.5 16.6667V5.00002H4.16667V16.6667H13.3333V18.3334H4.16667Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n\n  return (\n    <button className={styles.button} onClick={handleCopy}>\n      {icon}\n    </button>\n  );\n}\n","import hljs from 'highlight.js/lib/core';\nimport hljsYaml from 'highlight.js/lib/languages/yaml';\n\nimport CopyButton from './CopyButton';\nimport styles from './css/ComponentExample.module.css';\n\nimport './css/yaml.css';\n\nhljs.registerLanguage('yaml', hljsYaml);\n\ninterface Props {\n  yaml: string;\n}\n\nexport default function ComponentExample({yaml}: Props) {\n  const highlightedYaml = hljs.highlight(yaml, {language: 'yaml'}).value;\n  return (\n    <div className={styles.container}>\n      <pre dangerouslySetInnerHTML={{__html: highlightedYaml}} className={styles.code} />\n      <div className={styles.buttonContainer}>\n        <CopyButton content={yaml} />\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport styles from './css/ComponentTags.module.css';\n\nexport default function ComponentTags({owners, tags}: {owners: string[]; tags: string[]}) {\n  return (\n    <div className={styles.tags}>\n      {owners.map((owner) => (\n        <div key={owner} className={clsx(styles.tag, styles.authorTag)}>\n         owner: {owner}\n        </div>\n      ))}\n      {tags.map((tag) => (\n        <div key={tag} className={styles.tag}>\n          tag: {tag}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import {HTMLProps, useMemo} from 'react';\nimport Markdown, {Components} from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport {remark} from 'remark';\nimport styles from './css/ComponentHeader.module.css';\nimport strip from 'strip-markdown';\n\nimport ComponentTags from './ComponentTags';\nimport {ComponentType} from './types';\n\ninterface Props {\n  config: ComponentType;\n  descriptionStyle: 'truncated' | 'full';\n}\n\nexport default function ComponentHeader({config, descriptionStyle}: Props) {\n  const {description, name} = config;\n\n  // For truncated display, use only the first text block in the description.\n  const displayedDescription = useMemo(\n    () =>\n      descriptionStyle === 'truncated'\n        ? (markdownToPlaintext(description || '')\n            .split('\\n\\n')\n            .find((str) => str.trim().length > 0) ?? '')\n        : description,\n    [descriptionStyle, description],\n  );\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.heading}>\n        <svg\n          className={styles.icon}\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M9.16667 16.1875V10.4791L4.16667 7.58329V13.2916L9.16667 16.1875ZM10.8333 16.1875L15.8333 13.2916V7.58329L10.8333 10.4791V16.1875ZM10 9.04163L14.9375 6.18746L10 3.33329L5.0625 6.18746L10 9.04163ZM3.33333 14.75C3.06944 14.5972 2.86458 14.3958 2.71875 14.1458C2.57292 13.8958 2.5 13.618 2.5 13.3125V6.68746C2.5 6.3819 2.57292 6.10413 2.71875 5.85413C2.86458 5.60413 3.06944 5.40274 3.33333 5.24996L9.16667 1.89579C9.43056 1.74301 9.70833 1.66663 10 1.66663C10.2917 1.66663 10.5694 1.74301 10.8333 1.89579L16.6667 5.24996C16.9306 5.40274 17.1354 5.60413 17.2812 5.85413C17.4271 6.10413 17.5 6.3819 17.5 6.68746V13.3125C17.5 13.618 17.4271 13.8958 17.2812 14.1458C17.1354 14.3958 16.9306 14.5972 16.6667 14.75L10.8333 18.1041C10.5694 18.2569 10.2917 18.3333 10 18.3333C9.70833 18.3333 9.43056 18.2569 9.16667 18.1041L3.33333 14.75Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n        <div className={styles.headingContent}>\n          <h1>{name}</h1>\n          <div className={styles.description}>\n            <Markdown\n              remarkPlugins={[remarkGfm]}\n              components={descriptionStyle === 'truncated' ? componentsMinusLinks : undefined}\n            >\n              {displayedDescription}\n            </Markdown>\n          </div>\n        </div>\n      </div>\n      {config.tags && config.tags.length > 0 ? (\n        <ComponentTags owners={config.owners} tags={config.tags} />\n      ) : null}\n    </div>\n  );\n}\n\nconst componentsMinusLinks: Components = {\n  a: ({children}: HTMLProps<HTMLAnchorElement>) => <span>{children}</span>,\n};\n\nconst Remark = remark().use(strip);\n\nexport const markdownToPlaintext = (md: string) => {\n  return Remark.processSync(md).toString().replace(/\\\\/g, '').trim();\n};\n","import CopyButton from './CopyButton';\nimport styles from './css/ComponentScaffolding.module.css';\n\nexport default function ComponentScaffolding({componentName}: {componentName: string}) {\n  const command = `dg scaffold ${componentName} {component_name}`;\n  return (\n    <div className={styles.container}>\n      <div>\n        Use the scaffolding command to generate the necessary files and configuration for your\n        component.\n      </div>\n      <div className={styles.commandContainer}>\n        <pre>{command}</pre>\n        <div className={styles.buttonContainer}>\n          <CopyButton content={command} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {JSONSchema7, JSONSchema7Definition} from 'json-schema';\n\nimport styles from './css/ArrayTag.module.css';\n\ninterface Props {\n  items: JSONSchema7['items'];\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}\n\nexport default function ArrayTag({items, defs}: Props) {\n  const itemName = getItemName(items, defs);\n  return <div className={styles.tag}>Array&lt;{itemName}&gt;</div>;\n}\n\nfunction getItemName(\n  items: JSONSchema7['items'],\n  defs: Record<string, JSONSchema7Definition> | undefined,\n): string {\n  if (items === undefined) {\n    return 'undefined';\n  }\n\n  if (items === true) {\n    return 'true';\n  }\n\n  if (items === false) {\n    return 'false';\n  }\n\n  if (Array.isArray(items)) {\n    return items\n      .map((item) => getItemName(item, defs))\n      .flat()\n      .join(' | ');\n  }\n\n  if (items.$ref) {\n    const refName = items.$ref.split('/').pop();\n    if (refName) {\n      return refName;\n    }\n    return 'unknown';\n  }\n\n  const type = items.type;\n  if (type && typeof type === 'string') {\n    return type;\n  }\n\n  return 'Array';\n}\n","import clsx from 'clsx';\nimport {JSONSchema7TypeName} from 'json-schema';\n\nimport styles from './css/TypeTag.module.css';\n\nconst basicTypes = new Set<JSONSchema7TypeName>([\n  'string',\n  'number',\n  'boolean',\n  'object',\n  'array',\n  'null',\n]);\n\ninterface Props {\n  name: string;\n}\n\nexport default function TypeTag({name}: Props) {\n  return (\n    <span\n      className={clsx(\n        styles.tag,\n        !basicTypes.has(name as JSONSchema7TypeName) ? styles.objectType : null,\n      )}\n    >\n      {name}\n    </span>\n  );\n}\n","'use client';\n\nimport clsx from 'clsx';\nimport {JSONSchema7, JSONSchema7Definition, JSONSchema7TypeName} from 'json-schema';\nimport {useState} from 'react';\n\nimport styles from './css/ComponentSchema.module.css';\nimport ArrayTag from './schema/ArrayTag';\nimport TypeTag from './schema/TypeTag';\n\ninterface Props {\n  schema: string;\n}\n\nexport default function ComponentSchema({schema}: Props) {\n  let json;\n  try {\n    json = JSON.parse(schema);\n  } catch (error) {\n    console.error(error);\n  }\n\n  if (!json) {\n    return <div>Invalid schema</div>;\n  }\n\n  const jsonSchema: JSONSchema7 = json;\n  return <SchemaRoot schema={jsonSchema} defs={jsonSchema.$defs} />;\n}\n\nfunction SchemaRoot({\n  schema,\n  defs,\n}: {\n  schema: JSONSchema7;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  const title = schema.title;\n  const properties = schema.properties ?? {};\n\n  return (\n    <div className={styles.schemaContainer}>\n      {title ? <div className={styles.schemaTitle}>{title}</div> : null}\n      {Object.entries(properties).map(([key, property]) => (\n        <Property key={key} name={key} property={property} defs={defs} />\n      ))}\n    </div>\n  );\n}\n\nfunction Property({\n  name,\n  property,\n  defs,\n}: {\n  name: string;\n  property: JSONSchema7Definition;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  const [expanded, setExpanded] = useState(false);\n\n  const onToggleExpansion = () => {\n    setExpanded((current) => !current);\n  };\n\n  if (property === true || property === false) {\n    return null;\n  }\n\n  const {anyOf, type, description, $ref, required, examples} = property;\n\n  const expandable = isExpandableProperty(property);\n\n  const firstExample = examples ? (Array.isArray(examples) ? examples[0] : examples) : null;\n\n  const defaultValue =\n    property.default && property.default !== '__DAGSTER_UNSET_DEFAULT__' ? property.default : null;\n\n  return (\n    <div className={styles.propertyContainer}>\n      <button\n        disabled={!expandable}\n        className={clsx(styles.expandButton, expanded && styles.expanded)}\n        onClick={onToggleExpansion}\n      >\n        <div className={styles.property}>\n          <div className={styles.propertyNameAndTypes}>\n            <div className={styles.propertyName}>{name}</div>\n            {$ref ? <PropertyRef $ref={$ref} defs={defs} /> : null}\n            {type ? <PropertyType property={property} defs={defs} /> : null}\n            {anyOf ? <PropertyAnyOf anyOf={anyOf} defs={defs} /> : null}\n            {required ? <div className={styles.required}>required</div> : null}\n          </div>\n          {expandable ? (\n            <div className={styles.chevronContainer}>\n              <Chevron />\n            </div>\n          ) : null}\n        </div>\n        {description || defaultValue || examples ? (\n          <div className={styles.propertyDescriptionContainer}>\n            <div className={styles.propertyDescription}>{description}</div>\n            {defaultValue ? (\n              <div className={styles.propertyDefault}>\n                default:{' '}\n                <div className={styles.propertyDefaultValue}>{JSON.stringify(defaultValue)}</div>\n              </div>\n            ) : null}\n            {firstExample ? (\n              <div className={styles.propertyExamples}>\n                example:{' '}\n                <div className={styles.propertyExamplesValue}>{JSON.stringify(firstExample)}</div>\n              </div>\n            ) : null}\n          </div>\n        ) : null}\n      </button>\n      {expanded ? (\n        <div className={styles.expansionContainer}>\n          <ExpandedRoot property={property} defs={defs} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction isExpandableProperty(property: JSONSchema7): boolean {\n  const {type, anyOf, $ref} = property;\n\n  if ($ref) {\n    return true;\n  }\n\n  if (type === 'array') {\n    const {items} = property;\n    if (items === undefined || items === true || items === false) {\n      return false;\n    }\n\n    if (Array.isArray(items)) {\n      return items\n        .filter((item): item is JSONSchema7 => filterSchema(item))\n        .some((item) => isExpandableProperty(item));\n    }\n\n    return isExpandableProperty(items);\n  }\n\n  if (anyOf) {\n    return anyOf\n      .filter((item): item is JSONSchema7 => filterSchema(item))\n      .some((item) => isExpandableProperty(item));\n  }\n\n  return false;\n}\n\nfunction filterSchema(property: JSONSchema7Definition) {\n  return property !== undefined && property !== true && property !== false;\n}\n\nfunction ExpandedRoot({\n  property,\n  defs,\n}: {\n  property: JSONSchema7Definition;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  if (property === true || property === false || !property) {\n    return null;\n  }\n\n  const {properties, anyOf, $ref, type} = property;\n\n  if (properties) {\n    return (\n      <div className={styles.expansion}>\n        <SchemaRoot schema={property} defs={defs} />\n      </div>\n    );\n  }\n\n  if (type === 'array') {\n    const items = Array.isArray(property.items)\n      ? property.items\n      : property.items\n        ? [property.items]\n        : [];\n\n    return (\n      <div className={styles.expansion}>\n        {items\n          .filter((item) => typeof item !== 'boolean' && typeof item !== 'undefined')\n          .map((item, ii) => {\n            return <ExpandedRoot key={ii} property={item} defs={defs} />;\n          })}\n      </div>\n    );\n  }\n\n  if (anyOf) {\n    return (\n      <div className={styles.expansion}>\n        {anyOf\n          .filter((item) => typeof item !== 'boolean' && typeof item !== 'undefined')\n          .map((item, ii) => {\n            return <ExpandedRoot key={ii} property={item} defs={defs} />;\n          })}\n      </div>\n    );\n  }\n\n  if ($ref) {\n    const refName = $ref.split('/').pop();\n    if (refName) {\n      const definition = defs?.[refName];\n      if (typeof definition !== 'boolean' && typeof definition !== 'undefined') {\n        return (\n          <div className={styles.expansion}>\n            <SchemaRoot schema={definition} defs={defs} />\n          </div>\n        );\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction propertyTypeToString(typeName: JSONSchema7TypeName) {\n  switch (typeName) {\n    case 'object':\n      return 'object';\n    case 'array':\n      return 'array';\n    case 'string':\n      return 'string';\n    case 'number':\n      return 'number';\n    case 'integer':\n      return 'integer';\n    case 'boolean':\n      return 'boolean';\n    case 'null':\n      return 'null';\n    default:\n      return typeName;\n  }\n}\n\nfunction PropertyRef({\n  $ref,\n  defs,\n}: {\n  $ref: string;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  const refName = $ref.split('/').pop();\n  if (refName) {\n    const definition = defs?.[refName];\n    if (definition) {\n      return <PropertyType title={refName} property={definition} defs={defs} />;\n    }\n  }\n  return null;\n}\n\nfunction PropertyType({\n  title,\n  property,\n  defs,\n}: {\n  title?: string;\n  property: JSONSchema7Definition;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  if (property === true || property === false) {\n    return <TypeTag name={String(property)} />;\n  }\n\n  if (!property) {\n    return null;\n  }\n\n  const type = property.type;\n  if (Array.isArray(type)) {\n    const items = Array.isArray(type) ? type : type === undefined ? [] : [type];\n    return (\n      <div>\n        {items.map((item) => (\n          <TypeTag key={item} name={propertyTypeToString(item)} />\n        ))}\n      </div>\n    );\n  }\n\n  if (type === 'array') {\n    return (\n      <div>\n        <ArrayTag items={property.items} defs={defs} />\n      </div>\n    );\n  }\n\n  const ref = property.$ref;\n  if (ref) {\n    const refName = ref.split('/').pop();\n    if (refName) {\n      const definition = defs?.[refName];\n      if (definition !== undefined) {\n        return <PropertyType title={refName} property={definition} defs={defs} />;\n      }\n    }\n    return null;\n  }\n\n  if (title) {\n    return <TypeTag name={title} />;\n  }\n\n  switch (type) {\n    case 'object':\n      return <TypeTag name={propertyTypeToString(type)} />;\n    case 'string':\n    case 'number':\n    case 'boolean':\n    case 'integer':\n    case 'null':\n      return <TypeTag name={propertyTypeToString(type)} />;\n    default:\n      return <div>none</div>;\n  }\n}\n\nfunction PropertyAnyOf({\n  anyOf,\n  defs,\n}: {\n  anyOf: JSONSchema7['anyOf'];\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  return (\n    <div className={styles.anyOf}>\n      <div className={styles.anyOfLabel}>Any of:</div>\n      {(anyOf ?? []).map((definition, ii) => {\n        return <PropertyType key={ii} property={definition} defs={defs} />;\n      })}\n    </div>\n  );\n}\n\nconst Chevron = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={styles.chevron}\n  >\n    <path\n      d=\"M6.175 7.15837L5 8.33337L10 13.3334L15 8.33337L13.825 7.15837L10 10.975L6.175 7.15837Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import styles from './css/ComponentDetails.module.css';\n\nimport ComponentExample from './ComponentExample';\nimport ComponentHeader from './ComponentHeader';\nimport ComponentScaffolding from './ComponentScaffolding';\nimport ComponentSchema from './ComponentSchema';\nimport {ComponentType} from './types';\n\ninterface Props {\n  config: ComponentType;\n}\n\nexport default function ComponentDetails({config}: Props) {\n  return (\n    <div>\n      <ComponentHeader config={config} descriptionStyle=\"full\" />\n      <div className={styles.sectionHeader} id=\"scaffolding\">\n        <h2>Scaffolding</h2>\n        <a href=\"#scaffolding\">#</a>\n      </div>\n      <ComponentScaffolding componentName={config.name} />\n      <div className={styles.sectionHeader} id=\"schema\">\n        <h2>Schema</h2>\n        <a href=\"#schema\">#</a>\n      </div>\n      <ComponentSchema schema={config.schema} />\n      <div className={styles.sectionHeader} id=\"example\">\n        <h2>\n          Example <code>defs.yaml</code>\n        </h2>\n        <a href=\"#example\">#</a>\n      </div>\n      <ComponentExample yaml={config.example} />\n    </div>\n  );\n}\n","import ComponentDetails from './ComponentDetails';\nimport {ComponentType} from './types';\n\nimport styles from './css/ComponentPageContents.module.css';\n\ninterface Props {\n  componentConfig: ComponentType;\n}\nexport default function ComponentPageContents({componentConfig}: Props) {\n  return (\n    <div className={styles.outer}>\n      <div className={styles.container}>\n        <div className={styles.main}>\n          <ComponentDetails config={componentConfig} />\n        </div>\n      </div>\n      <div className={styles.tableOfContents}>\n        <ol>\n          <li>\n            <a href=\"#scaffolding\">Scaffolding</a>\n          </li>\n          <li>\n            <a href=\"#schema\">Schema</a>\n          </li>\n          <li>\n            <a href=\"#example\">\n              Example <code>defs.yaml</code>\n            </a>\n          </li>\n        </ol>\n      </div>\n    </div>\n  );\n}\n","import {HTMLProps, ReactNode} from 'react';\nimport {Contents} from './types';\nimport ComponentHeader from './ComponentHeader';\nimport styles from './css/ListView.module.css';\n\ninterface Props {\n  contents: Contents | null;\n  loading: boolean;\n  renderLink: (props: HTMLProps<HTMLAnchorElement>) => ReactNode;\n}\n\nexport default function ListView({contents, renderLink, loading}: Props) {\n  if (loading) {\n    return <div className={styles.emptyState}>Loading…</div>;\n  }\n\n  if (!contents) {\n    return <div className={styles.emptyState}>No components found.</div>;\n  }\n\n  const allComponents = contents\n    .map((pkg) => {\n      return pkg.componentTypes.map((component) => ({\n        component,\n        packageName: pkg.name,\n      }));\n    })\n    .flat();\n\n  return (\n    <div className={styles.container}>\n      {allComponents.map(({component, packageName}) =>\n        renderLink({\n          key: component.name,\n          href: `/packages/${packageName}/${component.name}`,\n          className: styles.componentItem,\n          children: <ComponentHeader config={component} descriptionStyle=\"truncated\" />,\n        }),\n      )}\n    </div>\n  );\n}\n","'use client';\n\nimport {Fragment, ReactNode} from 'react';\n\nimport styles from './css/PackageDetails.module.css';\n\nimport ComponentHeader from './ComponentHeader';\nimport {DocsLinkProps, Package} from './types';\n\ninterface Props {\n  pkg: Package;\n  renderLink: (props: DocsLinkProps) => ReactNode;\n}\n\nexport default function PackageDetails({pkg, renderLink}: Props) {\n  return (\n    <div className={styles.container}>\n      {pkg.componentTypes.map((component) => (\n        <Fragment key={component.name}>\n          {renderLink({\n            key: component.name,\n            href: `/packages/${pkg.name}/${component.name}`,\n            className: styles.componentItem,\n            children: <ComponentHeader config={component} descriptionStyle=\"truncated\" />,\n          })}\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n","'use client';\n\nimport {DocsLinkProps, Package} from './types';\nimport PackageDetails from './PackageDetails';\nimport styles from './css/PackagePageDetails.module.css';\nimport {ReactNode} from 'react';\n\nexport default function PackagePageDetails({\n  pkg,\n  renderLink,\n}: {\n  pkg: Package;\n  renderLink: (props: DocsLinkProps) => ReactNode;\n}) {\n  return (\n    <div className={styles.container}>\n      <PackageDetails pkg={pkg} renderLink={renderLink} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport {Fragment, HTMLProps, ReactNode, useLayoutEffect, useState} from 'react';\n\nimport styles from './css/PackageTree.module.css';\n\nimport {Contents} from './types';\n\nfunction extractFromPathname(pathname: string) {\n  const [selectedPkg, selectedComponent] = pathname.split('/').slice(2);\n  return {selectedPkg, selectedComponent};\n}\ninterface Props {\n  contents: Contents | null;\n  loading?: boolean;\n  pathname: string;\n  renderLink: (props: HTMLProps<HTMLAnchorElement>) => ReactNode;\n}\n\nexport default function PackageTree({contents, loading, pathname, renderLink}: Props) {\n  const {selectedPkg, selectedComponent} = extractFromPathname(pathname);\n  const [expandedPkgs, setExpandedPkgs] = useState<Set<string>>(\n    () => new Set(selectedPkg ? [selectedPkg] : []),\n  );\n\n  useLayoutEffect(() => {\n    setExpandedPkgs((current) => {\n      const {selectedPkg} = extractFromPathname(pathname);\n      const copy = new Set(current);\n      if (selectedPkg) {\n        copy.add(selectedPkg);\n      }\n      return copy;\n    });\n  }, [pathname]);\n\n  const [search, setSearch] = useState('');\n\n  const onTogglePkg = (pkg: string) => {\n    setExpandedPkgs((prev) => {\n      const copy = new Set(prev);\n      if (copy.has(pkg)) {\n        copy.delete(pkg);\n      } else {\n        copy.add(pkg);\n      }\n      return copy;\n    });\n  };\n\n  const listContent = () => {\n    if (contents === null && loading) {\n      return <div className={styles.loading}>Loading…</div>;\n    }\n\n    return (\n      <>\n        {contents?.map((pkg) => (\n          <div key={pkg.name}>\n            <div className={styles.pkgItem}>\n              <button\n                className={clsx(\n                  styles.expandButton,\n                  expandedPkgs.has(pkg.name) ? styles.expanded : null,\n                )}\n                onClick={() => onTogglePkg(pkg.name)}\n              >\n                <svg\n                  className={styles.chevron}\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M5.83301 8.33337L9.99967 12.5L14.1663 8.33337H5.83301Z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              </button>\n              {renderLink({\n                key: pkg.name,\n                href: `/packages/${pkg.name}`,\n                className: clsx(\n                  styles.pkgLink,\n                  expandedPkgs.has(pkg.name) ? styles.expanded : null,\n                  selectedPkg === pkg.name && !selectedComponent ? styles.selected : null,\n                ),\n                children: (\n                  <>\n                    <TempFolderIcon />\n                    <div className={styles.pkgName}>{pkg.name}</div>\n                  </>\n                ),\n              })}\n            </div>\n            {expandedPkgs.has(pkg.name) ? (\n              <div className={styles.componentList}>\n                {pkg.componentTypes.map((componentType) => {\n                  const isSelected =\n                    selectedPkg === pkg.name && selectedComponent === componentType.name;\n                  return (\n                    <Fragment key={componentType.name}>\n                      {renderLink({\n                        key: componentType.name,\n                        href: `/packages/${pkg.name}/${componentType.name}`,\n                        className: clsx(styles.componentLink, isSelected ? styles.selected : null),\n                        children: (\n                          <>\n                            <TempIcon />\n                            <span className={styles.componentName}>{componentType.name}</span>\n                          </>\n                        ),\n                      })}\n                    </Fragment>\n                  );\n                })}\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.searchOuter}>\n        <div className={styles.searchContainer}>\n          <svg\n            className={styles.icon}\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M12.9167 11.6667H12.2583L12.025 11.4417C12.8699 10.4617 13.3343 9.21058 13.3333 7.91667C13.3333 6.84535 13.0157 5.7981 12.4205 4.90733C11.8253 4.01656 10.9793 3.3223 9.98954 2.91232C8.99977 2.50235 7.91066 2.39508 6.85993 2.60408C5.8092 2.81309 4.84404 3.32897 4.08651 4.08651C3.32897 4.84404 2.81309 5.8092 2.60408 6.85993C2.39508 7.91066 2.50235 8.99977 2.91232 9.98954C3.3223 10.9793 4.01656 11.8253 4.90733 12.4205C5.7981 13.0157 6.84535 13.3333 7.91667 13.3333C9.25834 13.3333 10.4917 12.8417 11.4417 12.025L11.6667 12.2583V12.9167L15.8333 17.075L17.075 15.8333L12.9167 11.6667ZM7.91667 11.6667C5.84167 11.6667 4.16667 9.99167 4.16667 7.91667C4.16667 5.84167 5.84167 4.16667 7.91667 4.16667C9.99167 4.16667 11.6667 5.84167 11.6667 7.91667C11.6667 9.99167 9.99167 11.6667 7.91667 11.6667Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n          <input\n            type=\"text\"\n            placeholder=\"Jump to…\"\n            value={search}\n            className={styles.search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className={styles.treeContainer}>{listContent()}</div>\n    </div>\n  );\n}\n\nconst TempFolderIcon = () => {\n  return (\n    <svg\n      className={styles.icon}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.667 5.00004H10.0003L8.33366 3.33337H3.33366C2.41699 3.33337 1.67533 4.08337 1.67533 5.00004L1.66699 15C1.66699 15.9167 2.41699 16.6667 3.33366 16.6667H16.667C17.5837 16.6667 18.3337 15.9167 18.3337 15V6.66671C18.3337 5.75004 17.5837 5.00004 16.667 5.00004ZM16.667 15H3.33366V6.66671H16.667V15Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nconst TempIcon = () => {\n  return (\n    <svg\n      className={styles.icon}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M9.16667 16.1875V10.4791L4.16667 7.58329V13.2916L9.16667 16.1875ZM10.8333 16.1875L15.8333 13.2916V7.58329L10.8333 10.4791V16.1875ZM10 9.04163L14.9375 6.18746L10 3.33329L5.0625 6.18746L10 9.04163ZM3.33333 14.75C3.06944 14.5972 2.86458 14.3958 2.71875 14.1458C2.57292 13.8958 2.5 13.618 2.5 13.3125V6.68746C2.5 6.3819 2.57292 6.10413 2.71875 5.85413C2.86458 5.60413 3.06944 5.40274 3.33333 5.24996L9.16667 1.89579C9.43056 1.74301 9.70833 1.66663 10 1.66663C10.2917 1.66663 10.5694 1.74301 10.8333 1.89579L16.6667 5.24996C16.9306 5.40274 17.1354 5.60413 17.2812 5.85413C17.4271 6.10413 17.5 6.3819 17.5 6.68746V13.3125C17.5 13.618 17.4271 13.8958 17.2812 14.1458C17.1354 14.3958 16.9306 14.5972 16.6667 14.75L10.8333 18.1041C10.5694 18.2569 10.2917 18.3333 10 18.3333C9.70833 18.3333 9.43056 18.2569 9.16667 18.1041L3.33333 14.75Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n","import PackageTree from '@dagster-io/dg-docs-components/PackageTree';\nimport {Contents} from '@dagster-io/dg-docs-components/types';\nimport clsx from 'clsx';\nimport {Link} from 'react-router-dom';\n\nimport {repoAddressAsURLString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport styles from './css/CodeLocationDocsPackageTree.module.css';\n\ninterface Props {\n  loading?: boolean;\n  contents: Contents | null;\n  repoAddress: RepoAddress;\n  pathname: string;\n}\n\nexport const CodeLocationDocsPackageTree = ({loading, contents, repoAddress, pathname}: Props) => {\n  return (\n    <PackageTree\n      contents={contents}\n      pathname={pathname}\n      loading={loading}\n      renderLink={({key, href, children, className, ...rest}) => {\n        const url = href ? `/locations/${repoAddressAsURLString(repoAddress)}/docs${href}` : '#';\n        return (\n          <Link key={key} to={url} {...rest} className={clsx(styles.link, className)}>\n            {children}\n          </Link>\n        );\n      }}\n    />\n  );\n};\n","import {gql} from '../apollo-client';\n\nexport const CODE_LOCATION_DOCS_QUERY = gql`\n  query CodeLocationDocsQuery($repositorySelector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      ... on Repository {\n        id\n        locationDocsJsonOrError {\n          ... on LocationDocsJson {\n            json\n          }\n          ... on PythonError {\n            message\n          }\n        }\n      }\n    }\n  }\n`;\n","import ComponentPageContents from '@dagster-io/dg-docs-components/ComponentPageContents';\nimport ListView from '@dagster-io/dg-docs-components/ListView';\nimport PackagePageDetails from '@dagster-io/dg-docs-components/PackagePageDetails';\nimport {Contents} from '@dagster-io/dg-docs-components/types';\nimport {Box} from '@dagster-io/ui-components';\nimport {memo, useContext, useMemo} from 'react';\nimport {Link, Redirect, useParams} from 'react-router-dom';\nimport {CodeLocationPageHeader} from 'shared/code-location/CodeLocationPageHeader.oss';\nimport {CodeLocationTabs} from 'shared/code-location/CodeLocationTabs.oss';\n\nimport {useQuery} from '../apollo-client';\nimport {CodeLocationDocsPackageTree} from './CodeLocationDocsPackageTree';\nimport {CODE_LOCATION_DOCS_QUERY} from './CodeLocationDocsQuery';\nimport styles from './css/CodeLocationDocsRoot.module.css';\nimport {\n  CodeLocationDocsQuery,\n  CodeLocationDocsQueryVariables,\n} from './types/CodeLocationDocsQuery.types';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {repoAddressAsURLString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationDocsRoot = (props: Props) => {\n  const params = useParams<{\n    repoPath: string;\n    packageName?: string;\n    componentName?: string;\n  }>();\n\n  const {repoAddress} = props;\n  const {locationEntries, loading} = useContext(WorkspaceContext);\n  const locationEntry = locationEntries.find((entry) => entry.name === repoAddress.location);\n\n  if (!locationEntry) {\n    if (!loading) {\n      return <Redirect to=\"/deployment/locations\" />;\n    }\n    return <div />;\n  }\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <CodeLocationPageHeader repoAddress={repoAddress} />\n      <Box padding={{horizontal: 24}} border=\"bottom\">\n        <CodeLocationTabs\n          repoAddress={repoAddress}\n          selectedTab=\"docs\"\n          locationEntry={locationEntry}\n        />\n      </Box>\n      <div className={styles.contentContainer}>\n        <QueryfulCodeLocationDocs\n          repoAddress={repoAddress}\n          packageName={params.packageName}\n          componentName={params.componentName}\n        />\n      </div>\n    </Box>\n  );\n};\n\ninterface QueryfulCodeLocationDocsProps {\n  repoAddress: RepoAddress;\n  packageName?: string;\n  componentName?: string;\n}\nconst QueryfulCodeLocationDocs = memo(\n  ({repoAddress, packageName, componentName}: QueryfulCodeLocationDocsProps) => {\n    const {data, loading} = useQuery<CodeLocationDocsQuery, CodeLocationDocsQueryVariables>(\n      CODE_LOCATION_DOCS_QUERY,\n      {\n        variables: {\n          repositorySelector: {\n            repositoryName: repoAddress.name,\n            repositoryLocationName: repoAddress.location,\n          },\n        },\n      },\n    );\n\n    const contents = useMemo(() => {\n      const repo = data?.repositoryOrError;\n      if (repo?.__typename !== 'Repository') {\n        return null;\n      }\n\n      const json =\n        repo.locationDocsJsonOrError.__typename === 'LocationDocsJson'\n          ? repo.locationDocsJsonOrError.json\n          : null;\n\n      if (typeof json === 'string') {\n        try {\n          return JSON.parse(json) as Contents;\n        } catch (e) {\n          console.error(e);\n          return null;\n        }\n      }\n\n      return null;\n    }, [data]);\n\n    const mainContent = () => {\n      if (packageName) {\n        if (componentName) {\n          const componentConfig = contents\n            ?.find((pkg) => pkg.name === packageName)\n            ?.componentTypes.find((component) => component.name === componentName);\n          if (!componentConfig) {\n            return <div className={styles.error}>Component not found</div>;\n          }\n          return <ComponentPageContents componentConfig={componentConfig} />;\n        }\n\n        const matchingPackage = contents?.find((pkg) => pkg.name === packageName);\n        if (!matchingPackage) {\n          return <div className={styles.error}>Package not found</div>;\n        }\n\n        return (\n          <PackagePageDetails\n            pkg={matchingPackage}\n            renderLink={({key, href, children, ...rest}) => {\n              return (\n                <Link\n                  key={key}\n                  to={`/locations/${repoAddressAsURLString(repoAddress)}/docs${href || '#'}`}\n                  {...rest}\n                >\n                  {children}\n                </Link>\n              );\n            }}\n          />\n        );\n      }\n\n      return (\n        <ListView\n          loading={loading}\n          contents={contents}\n          renderLink={({key, href, children, ...rest}) => {\n            return (\n              <Link\n                key={key}\n                to={`/locations/${repoAddressAsURLString(repoAddress)}/docs${href || '#'}`}\n                {...rest}\n              >\n                {children}\n              </Link>\n            );\n          }}\n        />\n      );\n    };\n\n    const pathname = packageName\n      ? `/packages/${packageName}${componentName ? `/${componentName}` : ''}`\n      : '';\n\n    return (\n      <>\n        <div className={styles.sidebar}>\n          <CodeLocationDocsPackageTree\n            loading={loading}\n            contents={contents}\n            repoAddress={repoAddress}\n            pathname={pathname}\n          />\n        </div>\n        <div className={styles.main}>{mainContent()}</div>\n      </>\n    );\n  },\n);\n\nQueryfulCodeLocationDocs.displayName = 'QueryfulCodeLocationDocs';\n","export const CodeLocationAlertsSection = ({locationName: _}: {locationName: string}) => null;\n","export const CodeLocationServerSection = ({locationName: _}: {locationName: string}) => null;\n","import {Box, Colors, Subheading} from '@dagster-io/ui-components';\nimport {ComponentProps, ReactNode} from 'react';\n\nexport const CodeLocationOverviewSectionHeader = ({\n  label,\n  border = null,\n}: {\n  label: ReactNode;\n  border?: ComponentProps<typeof Box>['border'];\n}) => (\n  <Box\n    background={Colors.backgroundLight()}\n    border={border}\n    padding={{horizontal: 24, vertical: 8}}\n  >\n    <Subheading>{label}</Subheading>\n  </Box>\n);\n","import {Box, Button, Icon, NonIdealState} from '@dagster-io/ui-components';\nimport {useMemo, useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceLocationNodeFragment} from './WorkspaceContext/types/WorkspaceQueries.types';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {RepoAddress} from './types';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  locationEntry: WorkspaceLocationNodeFragment | null;\n}\n\nexport const CodeLocationNotFound = ({repoAddress, locationEntry}: Props) => {\n  const displayName = repoAddressAsHumanString(repoAddress);\n  const locationName = repoAddress.location;\n\n  const [showDialog, setShowDialog] = useState(false);\n\n  const reloadFn = useMemo(() => buildReloadFnForLocation(locationName), [locationName]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationEntry?.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <NonIdealState\n          icon=\"error_outline\"\n          title=\"Error loading code location\"\n          description={\n            <Box flex={{direction: 'column', gap: 12}} style={{wordBreak: 'break-word'}}>\n              <div>\n                Code location <strong>{displayName}</strong> failed to load due to errors.\n              </div>\n              <div>\n                <Button icon={<Icon name=\"error_outline\" />} onClick={() => setShowDialog(true)}>\n                  View errors\n                </Button>\n              </div>\n            </Box>\n          }\n        />\n        <RepositoryLocationNonBlockingErrorDialog\n          location={locationName}\n          isOpen={showDialog}\n          error={locationEntry.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <NonIdealState\n      icon=\"code_location\"\n      title=\"Code location not found\"\n      description={\n        <Box flex={{direction: 'column', gap: 12}} style={{wordBreak: 'break-word'}}>\n          <div>\n            Code location <strong>{displayName}</strong> is not available in this workspace.\n          </div>\n          <div>\n            Check your <Link to=\"/deployment\">deployment settings</Link> for errors.\n          </div>\n        </Box>\n      }\n    />\n  );\n};\n","import {\n  Box,\n  Colors,\n  FontFamily,\n  Icon,\n  Mono,\n  SpinnerWithText,\n  Table,\n  Tooltip,\n  UnstyledButton,\n} from '@dagster-io/ui-components';\nimport {StyledRawCodeMirror} from '@dagster-io/ui-components/editor';\nimport {useCallback, useContext, useMemo, useState} from 'react';\nimport {CodeLocationAlertsSection} from 'shared/code-location/CodeLocationAlertsSection.oss';\nimport {CodeLocationPageHeader} from 'shared/code-location/CodeLocationPageHeader.oss';\nimport {CodeLocationServerSection} from 'shared/code-location/CodeLocationServerSection.oss';\nimport {CodeLocationTabs} from 'shared/code-location/CodeLocationTabs.oss';\nimport {createGlobalStyle} from 'styled-components';\nimport * as yaml from 'yaml';\n\nimport {CodeLocationOverviewSectionHeader} from './CodeLocationOverviewSectionHeader';\nimport {useCopyToClipboard} from '../app/browser';\nimport {TimeFromNow} from '../ui/TimeFromNow';\nimport {CodeLocationNotFound} from '../workspace/CodeLocationNotFound';\nimport {LocationStatus} from '../workspace/CodeLocationRowSet';\nimport {\n  WorkspaceContext,\n  WorkspaceRepositoryLocationNode,\n} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {LocationStatusEntryFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport styles from './css/CodeLocationOverviewRoot.module.css';\n\nconst RIGHT_COLUMN_WIDTH = '280px';\n\ntype MetadataRowKey = 'image';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  locationEntry: WorkspaceRepositoryLocationNode | null;\n  locationStatus: LocationStatusEntryFragment | null;\n}\n\nexport const CodeLocationOverviewRoot = (props: Props) => {\n  const {repoAddress, locationStatus, locationEntry} = props;\n\n  const {displayMetadata} = locationEntry || {};\n  const metadataForDetails: Record<MetadataRowKey, {key: string; value: string} | null> =\n    useMemo(() => {\n      return {\n        image: displayMetadata?.find(({key}) => key === 'image') || null,\n      };\n    }, [displayMetadata]);\n\n  const metadataAsYaml = useMemo(() => {\n    return yaml.stringify(\n      Object.fromEntries((displayMetadata || []).map(({key, value}) => [key, value])),\n    );\n  }, [displayMetadata]);\n\n  const libraryVersions = useMemo(() => {\n    return locationEntry?.locationOrLoadError?.__typename === 'RepositoryLocation'\n      ? locationEntry?.locationOrLoadError.dagsterLibraryVersions\n      : null;\n  }, [locationEntry]);\n\n  const copy = useCopyToClipboard();\n  const [didCopy, setDidCopy] = useState(false);\n\n  const onClickCopy = useCallback(() => {\n    let timer: NodeJS.Timeout | null = null;\n    if (metadataForDetails.image) {\n      copy(metadataForDetails.image.value);\n      setDidCopy(true);\n      timer = setTimeout(() => {\n        setDidCopy(false);\n      }, 3000);\n    }\n\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [copy, metadataForDetails.image]);\n\n  return (\n    <>\n      <Box padding={{horizontal: 24}} border=\"bottom\">\n        <CodeLocationTabs\n          selectedTab=\"overview\"\n          repoAddress={repoAddress}\n          locationEntry={locationEntry}\n        />\n      </Box>\n      <CodeLocationOverviewSectionHeader label=\"Details\" />\n      {/* Fixed table layout to contain overflowing strings in right column */}\n      <Table style={{width: '100%', tableLayout: 'fixed'}}>\n        <tbody>\n          <tr>\n            <td\n              style={{\n                width: RIGHT_COLUMN_WIDTH,\n                minWidth: RIGHT_COLUMN_WIDTH,\n                verticalAlign: 'middle',\n              }}\n            >\n              Status\n            </td>\n            <td>\n              <LocationStatus locationStatus={locationStatus} locationOrError={locationEntry} />\n            </td>\n          </tr>\n          <tr>\n            <td>Updated</td>\n            <td>\n              {locationStatus ? (\n                <div style={{whiteSpace: 'nowrap'}}>\n                  <TimeFromNow unixTimestamp={locationStatus.updateTimestamp} />\n                </div>\n              ) : null}\n            </td>\n          </tr>\n          {metadataForDetails.image ? (\n            <tr>\n              <td>Image</td>\n              <td style={{fontFamily: FontFamily.monospace}}>\n                <div className={styles.imageName}>\n                  <span style={{marginRight: '4px'}}>{metadataForDetails.image.value}</span>\n                  <Tooltip\n                    content={didCopy ? 'Copied!' : 'Click to copy image string'}\n                    placement=\"top\"\n                  >\n                    <UnstyledButton onClick={onClickCopy}>\n                      <Icon name={didCopy ? 'done' : 'copy'} size={16} />\n                    </UnstyledButton>\n                  </Tooltip>\n                </div>\n              </td>\n            </tr>\n          ) : null}\n        </tbody>\n      </Table>\n      <CodeLocationServerSection locationName={repoAddress.location} />\n      {libraryVersions?.length ? (\n        <>\n          <CodeLocationOverviewSectionHeader label=\"Libraries\" />\n          <Table>\n            <tbody>\n              {libraryVersions.map((version) => (\n                <tr key={version.name}>\n                  <td style={{width: RIGHT_COLUMN_WIDTH}}>\n                    <Mono>{version.name}</Mono>\n                  </td>\n                  <td>\n                    <Mono>{version.version}</Mono>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      ) : null}\n      <CodeLocationAlertsSection locationName={repoAddress.location} />\n      <CodeLocationOverviewSectionHeader label=\"Metadata\" border=\"bottom\" />\n      <CodeLocationMetadataStyle />\n      <div style={{height: '320px'}}>\n        <StyledRawCodeMirror\n          options={{readOnly: true, lineNumbers: false}}\n          theme={['code-location-metadata']}\n          value={metadataAsYaml}\n        />\n      </div>\n    </>\n  );\n};\n\nconst QueryfulCodeLocationOverviewRoot = ({repoAddress}: {repoAddress: RepoAddress}) => {\n  const {locationEntries, locationStatuses, loading} = useContext(WorkspaceContext);\n  const locationEntry = locationEntries.find((entry) => entry.name === repoAddress.location);\n  const locationStatus = locationStatuses[repoAddress.location];\n\n  const content = () => {\n    if (!locationEntry || !locationStatus) {\n      const displayName = repoAddressAsHumanString(repoAddress);\n      if (loading) {\n        return (\n          <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n            <SpinnerWithText label={`Loading ${displayName}…`} />\n          </Box>\n        );\n      }\n\n      if (!locationEntry && !locationStatus) {\n        return (\n          <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n            <CodeLocationNotFound repoAddress={repoAddress} locationEntry={locationEntry || null} />\n          </Box>\n        );\n      }\n    }\n\n    return (\n      <CodeLocationOverviewRoot\n        repoAddress={repoAddress}\n        locationEntry={locationEntry || null}\n        locationStatus={locationStatus || null}\n      />\n    );\n  };\n\n  return (\n    <>\n      <CodeLocationPageHeader repoAddress={repoAddress} />\n      {content()}\n    </>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default QueryfulCodeLocationOverviewRoot;\n\nconst CodeLocationMetadataStyle = createGlobalStyle`\n  .CodeMirror.cm-s-code-location-metadata.cm-s-code-location-metadata {\n    background-color: ${Colors.backgroundDefault()};\n    padding: 12px 20px;\n    height: 300px;\n  }\n`;\n","import {useCallback, useMemo} from 'react';\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\nimport {PipelineExplorerContainer} from 'shared/pipelines/PipelineExplorerRoot.oss';\n\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n  useStripSnapshotFromPath,\n} from './PipelinePathUtils';\nimport {useJobTitle} from './useJobTitle';\nimport {useTrackPageView} from '../app/analytics';\nimport {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {useOpenInNewTab} from '../hooks/useOpenInNewTab';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelineOverviewRoot = (props: Props) => {\n  useTrackPageView();\n\n  const {repoAddress} = props;\n  const history = useHistory();\n  const location = useLocation();\n  const params = useParams();\n  const pathStr = (params as any)['0'];\n  const explorerPath = useMemo(() => explorerPathFromString(pathStr), [pathStr]);\n\n  const openInNewTab = useOpenInNewTab();\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, explorerPath.pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n  useStripSnapshotFromPath({pipelinePath: explorerPathToString(explorerPath)});\n\n  const onChangeExplorerPath = useCallback(\n    (path: ExplorerPath, action: 'push' | 'replace') => {\n      history[action]({\n        search: location.search,\n        pathname: workspacePathFromAddress(\n          repoAddress,\n          `/${isJob ? 'jobs' : 'pipelines'}/${explorerPathToString(path)}`,\n        ),\n      });\n    },\n    [history, location.search, repoAddress, isJob],\n  );\n\n  const onNavigateToSourceAssetNode = useCallback(\n    (e: Pick<React.MouseEvent<any>, 'metaKey'>, node: AssetLocation) => {\n      if (!node.jobName || !node.opNames.length || !node.repoAddress) {\n        // This op has no definition in any loaded repository (source asset).\n        // The best we can do is show the asset page. This will still be mostly empty,\n        // but there can be a description.\n        const path = assetDetailsPathForKey(node.assetKey, {view: 'definition'});\n        if (e.metaKey) {\n          openInNewTab(path);\n        } else {\n          history.push(path);\n        }\n        return;\n      }\n\n      // Note: asset location can be in another job AND in another repo! Need\n      // to build a full job URL using the `node` info here.\n      history.replace({\n        search: location.search,\n        pathname: workspacePathFromAddress(\n          node.repoAddress,\n          `/jobs/${explorerPathToString({\n            ...explorerPath,\n            opNames: [tokenForAssetKey(node.assetKey)],\n            opsQuery: '',\n            pipelineName: node.jobName!,\n          })}`,\n        ),\n      });\n    },\n    [explorerPath, history, location.search, openInNewTab],\n  );\n\n  return (\n    <PipelineExplorerContainer\n      repoAddress={repoAddress}\n      explorerPath={explorerPath}\n      onChangeExplorerPath={onChangeExplorerPath}\n      onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n    />\n  );\n};\n","import {PipelineOverviewRoot} from './PipelineOverviewRoot';\nimport {RepoAddress} from '../workspace/types';\n\nexport const JobFallthroughRoot = ({repoAddress}: {repoAddress: RepoAddress}) => {\n  return <PipelineOverviewRoot repoAddress={repoAddress} />;\n};\n","import {useContext} from 'react';\nimport {Redirect, useLocation, useParams} from 'react-router-dom';\n\nimport {explorerPathFromString} from './PipelinePathUtils';\nimport {PermissionsContext} from '../app/Permissions';\nimport {useBlockTraceUntilTrue} from '../performance/TraceContext';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelineOrJobDisambiguationRoot = (props: Props) => {\n  const {repoAddress} = props;\n  const location = useLocation();\n  const {pipelinePath} = useParams<{pipelinePath: string}>();\n\n  const {loading} = useContext(WorkspaceContext);\n  const {loading: permissionsLoading} = useContext(PermissionsContext);\n  const repo = useRepository(repoAddress);\n\n  useBlockTraceUntilTrue('Workspace', loading);\n  useBlockTraceUntilTrue('Permissions', permissionsLoading);\n  if (loading || permissionsLoading) {\n    return null;\n  }\n\n  const {pipelineName: pipelineOrJobName} = explorerPathFromString(pipelinePath);\n  const isJob = isThisThingAJob(repo, pipelineOrJobName);\n  const {pathname, search} = location;\n\n  const replacedPath = pathname.replace('/pipeline_or_job/', isJob ? '/jobs/' : '/pipelines/');\n\n  return <Redirect to={`${replacedPath}${search}`} />;\n};\n","import {Redirect, useParams} from 'react-router-dom';\n\nimport {LaunchpadSessionError} from './LaunchpadSessionError';\nimport {LaunchpadSessionLoading} from './LaunchpadSessionLoading';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  ConfigForRunQuery,\n  ConfigForRunQueryVariables,\n} from './types/LaunchpadSetupFromRunRoot.types';\nimport {\n  IExecutionSession,\n  applyCreateSession,\n  useExecutionSessionStorage,\n} from '../app/ExecutionSessionStorage';\nimport {usePermissionsForLocation} from '../app/Permissions';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useBlockTraceUntilTrue} from '../performance/TraceContext';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {useJobTitle} from '../pipelines/useJobTitle';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nexport const LaunchpadSetupFromRunRoot = (props: {repoAddress: RepoAddress}) => {\n  const {repoAddress} = props;\n  const {\n    permissions: {canLaunchPipelineExecution},\n    loading,\n  } = usePermissionsForLocation(repoAddress.location);\n  const {repoPath, pipelinePath, runId} = useParams<{\n    repoPath: string;\n    pipelinePath: string;\n    runId: string;\n  }>();\n\n  useBlockTraceUntilTrue('Permissions', loading);\n  if (loading) {\n    return null;\n  }\n  if (!canLaunchPipelineExecution) {\n    return <Redirect to={`/locations/${repoPath}/pipeline_or_job/${pipelinePath}`} />;\n  }\n  return (\n    <LaunchpadSetupFromRunAllowedRoot\n      pipelinePath={pipelinePath}\n      repoAddress={repoAddress}\n      runId={runId}\n    />\n  );\n};\n\ninterface Props {\n  pipelinePath: string;\n  repoAddress: RepoAddress;\n  runId: string;\n}\n\n/**\n * For a given run ID, retrieve the run config and populate a new Launchpad session with its\n * values, then redirect to the launchpad. The newly created session will be the open launchpad\n * config tab.\n */\nconst LaunchpadSetupFromRunAllowedRoot = (props: Props) => {\n  const {pipelinePath, repoAddress, runId} = props;\n\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const [_, onSave] = useExecutionSessionStorage(repoAddress, pipelineName);\n\n  const queryResult = useQuery<ConfigForRunQuery, ConfigForRunQueryVariables>(\n    CONFIG_FOR_RUN_QUERY,\n    {\n      variables: {runId},\n      onCompleted: (data: ConfigForRunQuery) => {\n        const runOrError = data?.runOrError;\n        const run = runOrError?.__typename === 'Run' ? runOrError : null;\n        if (!run) {\n          return;\n        }\n\n        const {runConfigYaml, mode, solidSelection} = run;\n        if (!runConfigYaml && !mode && !solidSelection) {\n          return;\n        }\n\n        // Name the session after this run ID.\n        const newSession: Partial<IExecutionSession> = {name: `From run ${run.id.slice(0, 8)}`};\n\n        if (typeof runConfigYaml === 'string') {\n          newSession.runConfigYaml = runConfigYaml;\n        }\n        if (typeof mode === 'string') {\n          newSession.mode = mode;\n        }\n\n        let solidSelectionValue = null;\n        if (solidSelection instanceof Array && solidSelection.length > 0) {\n          solidSelectionValue = solidSelection as string[];\n        } else if (typeof solidSelection === 'string' && solidSelection) {\n          solidSelectionValue = [solidSelection];\n        }\n\n        newSession.solidSelection = solidSelectionValue;\n        newSession.solidSelectionQuery = solidSelectionValue ? solidSelectionValue.join(',') : '*';\n\n        onSave((storageData) => applyCreateSession(storageData, newSession));\n      },\n    },\n  );\n  const {data, loading} = queryResult;\n\n  const runOrError = data?.runOrError;\n\n  if (loading) {\n    return <LaunchpadSessionLoading />;\n  }\n\n  if (!runOrError || runOrError.__typename === 'RunNotFoundError') {\n    return (\n      <LaunchpadSessionError\n        icon=\"error\"\n        title=\"No run found\"\n        description=\"The run with this ID does not exist or has been cleaned up.\"\n      />\n    );\n  }\n\n  if (runOrError.__typename === 'PythonError') {\n    return (\n      <LaunchpadSessionError icon=\"error\" title=\"Python error\" description={runOrError.message} />\n    );\n  }\n\n  return (\n    <Redirect\n      to={{\n        pathname: workspacePathFromAddress(\n          repoAddress,\n          `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/playground`,\n        ),\n      }}\n    />\n  );\n};\n\nconst CONFIG_FOR_RUN_QUERY = gql`\n  query ConfigForRunQuery($runId: ID!) {\n    runOrError(runId: $runId) {\n      ... on Run {\n        id\n        mode\n        runConfigYaml\n        solidSelection\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import qs from 'qs';\nimport {useEffect} from 'react';\nimport {Redirect, useParams} from 'react-router-dom';\n\nimport {\n  IExecutionSession,\n  applyCreateSession,\n  useExecutionSessionStorage,\n} from '../app/ExecutionSessionStorage';\nimport {usePermissionsForLocation} from '../app/Permissions';\nimport {useBlockTraceUntilTrue} from '../performance/TraceContext';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {useJobTitle} from '../pipelines/useJobTitle';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nexport const LaunchpadSetupRoot = (props: {repoAddress: RepoAddress}) => {\n  const {repoAddress} = props;\n  const {\n    permissions: {canLaunchPipelineExecution},\n    loading,\n  } = usePermissionsForLocation(repoAddress.location);\n\n  useBlockTraceUntilTrue('Permissions', loading);\n\n  const {repoPath, pipelinePath} = useParams<{repoPath: string; pipelinePath: string}>();\n  if (loading) {\n    return null;\n  }\n\n  if (!canLaunchPipelineExecution) {\n    return <Redirect to={`/locations/${repoPath}/pipeline_or_job/${pipelinePath}`} />;\n  }\n  return <LaunchpadSetupAllowedRoot pipelinePath={pipelinePath} repoAddress={repoAddress} />;\n};\n\ninterface Props {\n  pipelinePath: string;\n  repoAddress: RepoAddress;\n}\n\nconst LaunchpadSetupAllowedRoot = (props: Props) => {\n  const {pipelinePath, repoAddress} = props;\n\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const [_, onSave] = useExecutionSessionStorage(repoAddress, pipelineName);\n  const queryString = qs.parse(window.location.search, {ignoreQueryPrefix: true});\n\n  useEffect(() => {\n    if (\n      queryString.config ||\n      queryString.mode ||\n      queryString.solidSelection ||\n      queryString.tags ||\n      queryString.assetSelection\n    ) {\n      const newSession: Partial<IExecutionSession> = {};\n      if (typeof queryString.config === 'string') {\n        newSession.runConfigYaml = queryString.config;\n      }\n      if (typeof queryString.mode === 'string') {\n        newSession.mode = queryString.mode;\n      }\n      if (queryString.solidSelection instanceof Array && queryString.solidSelection.length > 0) {\n        newSession.solidSelection = queryString.solidSelection as string[];\n      } else if (typeof queryString.solidSelection === 'string' && queryString.solidSelection) {\n        newSession.solidSelection = [queryString.solidSelection];\n      }\n      if (typeof queryString.solidSelectionQuery === 'string') {\n        newSession.solidSelectionQuery = queryString.solidSelectionQuery;\n      }\n\n      if (Array.isArray(queryString.tags)) {\n        newSession.tags = queryString.tags as any;\n      }\n\n      if (Array.isArray(queryString.assetSelection)) {\n        newSession.assetSelection = queryString.assetSelection as any;\n      }\n\n      onSave((data) => applyCreateSession(data, newSession));\n    }\n  });\n\n  return (\n    <Redirect\n      to={{\n        pathname: workspacePathFromAddress(\n          repoAddress,\n          `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/playground`,\n        ),\n      }}\n    />\n  );\n};\n","import {Tab, Tabs, Tooltip} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\n\nimport {ExplorerPath, explorerPathToString} from './PipelinePathUtils';\nimport {PermissionResult, PermissionsState, permissionResultForKey} from '../app/Permissions';\nimport {TabLink} from '../ui/TabLink';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nexport const DEFAULT_JOB_TAB_ORDER = ['overview', 'playground', 'runs', 'partitions'];\n\ninterface Props {\n  repoAddress: RepoAddress;\n  isJob: boolean;\n  explorerPath: ExplorerPath;\n  matchingTab?: string;\n  permissions: PermissionsState;\n  tabs: JobTabConfig[];\n}\n\nexport const JobTabs = (props: Props) => {\n  const {repoAddress, isJob, explorerPath, matchingTab = '', permissions, tabs} = props;\n\n  const explorerPathForTab = explorerPathToString({\n    ...explorerPath,\n    opNames: [],\n  });\n\n  const selectedTab = useMemo(() => {\n    return (\n      tabs.find((tab) => tab.pathComponent === matchingTab) ||\n      tabs.find((tab) => tab.pathComponent === '')\n    );\n  }, [matchingTab, tabs]);\n\n  return (\n    <Tabs size=\"large\" selectedTabId={selectedTab!.id}>\n      {tabs\n        .filter((tab) => !tab.isHidden)\n        .map((tab) => {\n          const {id, title: text, getPermissionsResult} = tab;\n          const permissionsResult = getPermissionsResult ? getPermissionsResult(permissions) : null;\n          const disabled = !!(permissionsResult && !permissionsResult.enabled);\n          const title =\n            permissionsResult && disabled ? (\n              <Tooltip content={permissionsResult.disabledReason} placement=\"top\">\n                {text}\n              </Tooltip>\n            ) : (\n              text\n            );\n\n          const href = workspacePathFromAddress(\n            repoAddress,\n            `/${isJob ? 'jobs' : 'pipelines'}/${explorerPathForTab}${tab.pathComponent}`,\n          );\n\n          if (disabled) {\n            return <Tab disabled key={id} id={id} title={title} />;\n          }\n\n          return <TabLink key={id} id={id} title={title} disabled={disabled} to={href} />;\n        })}\n    </Tabs>\n  );\n};\n\nexport type JobTabConfigInput = {\n  hasLaunchpad: boolean;\n  hasPartitionSet: boolean;\n};\n\nexport interface JobTabConfig {\n  id: string;\n  title: string;\n  pathComponent: string;\n  getPermissionsResult?: (permissionsState: PermissionsState) => PermissionResult;\n  isHidden?: boolean;\n}\n\n/**\n * Define the default set of job tabs.\n */\nexport const buildJobTabMap = (input: JobTabConfigInput): Record<string, JobTabConfig> => {\n  const {hasLaunchpad, hasPartitionSet} = input;\n  return {\n    overview: {\n      id: 'overview',\n      title: 'Overview',\n      pathComponent: '',\n    },\n    playground: {\n      id: 'launchpad',\n      title: 'Launchpad',\n      pathComponent: 'playground',\n      getPermissionsResult: (permissionsState: PermissionsState) =>\n        permissionResultForKey(permissionsState, 'canLaunchPipelineExecution'),\n      isHidden: !hasLaunchpad,\n    },\n    runs: {\n      id: 'runs',\n      title: 'Runs',\n      pathComponent: 'runs',\n    },\n    partitions: {\n      id: 'partitions',\n      title: 'Partitions',\n      pathComponent: 'partitions',\n      isHidden: !hasPartitionSet,\n    },\n  };\n};\n","import {DEFAULT_JOB_TAB_ORDER, JobTabConfig, JobTabConfigInput, buildJobTabMap} from './JobTabs';\n\nexport const buildJobTabs = (input: JobTabConfigInput): JobTabConfig[] => {\n  const tabConfigs = buildJobTabMap(input);\n  return DEFAULT_JOB_TAB_ORDER.map((tabId) => tabConfigs[tabId]).filter(\n    (tab): tab is JobTabConfig => !!tab && !tab.isHidden,\n  );\n};\n","import {Box, Colors, StyledTable, Tag, Tooltip} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {gql, useQuery} from '../apollo-client';\nimport {LatestRunTagQuery, LatestRunTagQueryVariables} from './types/LatestRunTag.types';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {RunStatus} from '../graphql/types';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {DagsterTag} from '../runs/RunTag';\nimport {timingStringForStatus} from '../runs/RunTimingDetails';\nimport {RUN_TIME_FRAGMENT, RunTime} from '../runs/RunUtils';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: false};\n\nexport const LatestRunTag = ({\n  pipelineName,\n  repoAddress,\n}: {\n  pipelineName: string;\n  repoAddress: RepoAddress;\n}) => {\n  const lastRunQuery = useQuery<LatestRunTagQuery, LatestRunTagQueryVariables>(\n    LATEST_RUN_TAG_QUERY,\n    {\n      variables: {\n        runsFilter: {\n          pipelineName,\n          tags: [\n            {\n              key: DagsterTag.RepositoryLabelTag,\n              value: repoAddressAsTag(repoAddress),\n            },\n          ],\n        },\n      },\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  useQueryRefreshAtInterval(lastRunQuery, FIFTEEN_SECONDS);\n\n  const run = useMemo(() => {\n    const runsOrError = lastRunQuery.data?.pipelineRunsOrError;\n    if (runsOrError && runsOrError.__typename === 'Runs') {\n      return runsOrError.results[0] || null;\n    }\n    return null;\n  }, [lastRunQuery]);\n\n  if (!run) {\n    return null;\n  }\n\n  const stats = {start: run.startTime, end: run.endTime, status: run.status};\n  const intent = () => {\n    switch (run.status) {\n      case RunStatus.SUCCESS:\n        return 'success';\n      case RunStatus.CANCELED:\n      case RunStatus.CANCELING:\n      case RunStatus.FAILURE:\n        return 'danger';\n      default:\n        return 'none';\n    }\n  };\n\n  return (\n    <Tag intent={intent()}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={run.status} size={10} />\n        Latest run:\n        {stats ? (\n          <Tooltip\n            placement=\"bottom\"\n            content={\n              <StyledTable>\n                <tbody>\n                  <tr>\n                    <td style={{color: Colors.textLighter()}}>\n                      <Box padding={{right: 16}}>Started</Box>\n                    </td>\n                    <td>\n                      {stats.start ? (\n                        <TimestampDisplay timestamp={stats.start} timeFormat={TIME_FORMAT} />\n                      ) : (\n                        timingStringForStatus(stats.status)\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{color: Colors.textLighter()}}>Ended</td>\n                    <td>\n                      {stats.end ? (\n                        <TimestampDisplay timestamp={stats.end} timeFormat={TIME_FORMAT} />\n                      ) : (\n                        timingStringForStatus(stats.status)\n                      )}\n                    </td>\n                  </tr>\n                </tbody>\n              </StyledTable>\n            }\n          >\n            <Link to={`/runs/${run.id}`}>\n              <RunTime run={run} />\n            </Link>\n          </Tooltip>\n        ) : null}\n      </Box>\n    </Tag>\n  );\n};\n\nexport const LATEST_RUN_TAG_QUERY = gql`\n  query LatestRunTagQuery($runsFilter: RunsFilter) {\n    pipelineRunsOrError(filter: $runsFilter, limit: 1) {\n      ... on Runs {\n        results {\n          id\n          status\n          ...RunTimeFragment\n        }\n      }\n    }\n  }\n\n  ${RUN_TIME_FRAGMENT}\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Tag,\n} from '@dagster-io/ui-components';\nimport uniq from 'lodash/uniq';\nimport {useMemo, useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LatestRunTag} from './LatestRunTag';\nimport {ScheduleOrSensorTag} from './ScheduleOrSensorTag';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  JobMetadataAssetNodeFragment,\n  JobMetadataFragment,\n  JobMetadataQuery,\n  JobMetadataQueryVariables,\n  RunMetadataFragment,\n} from './types/JobMetadata.types';\nimport {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AutomaterializeDaemonStatusTag} from '../assets/AutomaterializeDaemonStatusTag';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RUN_TIME_FRAGMENT} from '../runs/RunUtils';\nimport {SCHEDULE_SWITCH_FRAGMENT} from '../schedules/ScheduleSwitchFragment';\nimport {SENSOR_SWITCH_FRAGMENT} from '../sensors/SensorSwitchFragment';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\ntype JobMetadata = {\n  assetNodes: JobMetadataAssetNodeFragment[] | null;\n  job: JobMetadataFragment | null;\n  runsForAssetScan: RunMetadataFragment[];\n};\n\nfunction useJobNavMetadata(repoAddress: RepoAddress, pipelineName: string) {\n  const queryResult = useQuery<JobMetadataQuery, JobMetadataQueryVariables>(JOB_METADATA_QUERY, {\n    variables: {\n      runsFilter: {\n        pipelineName,\n        tags: [\n          {\n            key: DagsterTag.RepositoryLabelTag,\n            value: repoAddressAsTag(repoAddress),\n          },\n        ],\n      },\n      params: {\n        pipelineName,\n        repositoryName: repoAddress.name,\n        repositoryLocationName: repoAddress.location,\n      },\n    },\n  });\n  const data = queryResult.data;\n\n  return useMemo<JobMetadata>(() => {\n    return {\n      assetNodes: data?.assetNodes || null,\n      job:\n        data?.pipelineOrError && data.pipelineOrError.__typename === 'Pipeline'\n          ? data.pipelineOrError\n          : null,\n      runsForAssetScan:\n        data?.pipelineRunsOrError && data.pipelineRunsOrError.__typename === 'Runs'\n          ? data.pipelineRunsOrError.results\n          : [],\n    };\n  }, [data]);\n}\n\ninterface Props {\n  pipelineName: string;\n  repoAddress: RepoAddress;\n}\n\nexport const JobMetadata = (props: Props) => {\n  const {pipelineName, repoAddress} = props;\n  const metadata = useJobNavMetadata(repoAddress, pipelineName);\n\n  return (\n    <>\n      {metadata.job ? (\n        <JobScheduleOrSensorTag job={metadata.job} repoAddress={repoAddress} />\n      ) : null}\n      <LatestRunTag pipelineName={pipelineName} repoAddress={repoAddress} />\n      {metadata.assetNodes && metadata.assetNodes.some((a) => !!a.automationCondition) && (\n        <AutomaterializeDaemonStatusTag />\n      )}\n      {metadata.runsForAssetScan ? (\n        <RelatedAssetsTag relatedAssets={getRelatedAssets(metadata)} />\n      ) : null}\n    </>\n  );\n};\n\nconst JobScheduleOrSensorTag = ({\n  job,\n  repoAddress,\n}: {\n  job: JobMetadataFragment;\n  repoAddress: RepoAddress;\n}) => {\n  const matchingSchedules = useMemo(() => {\n    if (job?.__typename === 'Pipeline' && job.schedules.length) {\n      return job.schedules;\n    }\n    return [];\n  }, [job]);\n\n  const matchingSensors = useMemo(() => {\n    if (job?.__typename === 'Pipeline' && job.sensors.length) {\n      return job.sensors;\n    }\n    return [];\n  }, [job]);\n\n  return (\n    <ScheduleOrSensorTag\n      schedules={matchingSchedules}\n      sensors={matchingSensors}\n      repoAddress={repoAddress}\n    />\n  );\n};\n\nfunction getRelatedAssets(metadata: JobMetadata) {\n  if (metadata.assetNodes) {\n    return metadata.assetNodes.map((node) => tokenForAssetKey(node.assetKey));\n  }\n\n  return uniq(\n    metadata.runsForAssetScan.flatMap((r) => r.assets.map((a) => tokenForAssetKey(a.key))),\n  );\n}\n\nconst RelatedAssetsTag = ({relatedAssets}: {relatedAssets: string[]}) => {\n  const [open, setOpen] = useState(false);\n\n  if (relatedAssets.length === 0) {\n    return null;\n  }\n\n  if (relatedAssets.length === 1) {\n    const key = relatedAssets[0];\n    return (\n      <Tag icon=\"asset\">\n        Asset: <Link to={`/assets/${key}`}>{key}</Link>\n      </Tag>\n    );\n  }\n\n  return (\n    <>\n      <Tag icon=\"asset\">\n        <ButtonLink\n          color={Colors.linkDefault()}\n          onClick={() => setOpen(true)}\n        >{`View ${relatedAssets.length} assets`}</ButtonLink>\n      </Tag>\n      <Dialog\n        title=\"Related assets\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        isOpen={open}\n        onClose={() => setOpen(false)}\n        style={{maxWidth: '80%', minWidth: '500px', width: 'auto'}}\n      >\n        {relatedAssets.map((key, ii) => (\n          <Box\n            key={key}\n            padding={{vertical: 12, horizontal: 20}}\n            border={ii < relatedAssets.length - 1 ? 'bottom' : null}\n          >\n            <Link key={key} to={`/assets/${key}`} style={{wordBreak: 'break-word'}}>\n              {key}\n            </Link>\n          </Box>\n        ))}\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={() => setOpen(false)}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n};\n\nexport const JOB_METADATA_QUERY = gql`\n  query JobMetadataQuery($params: PipelineSelector!, $runsFilter: RunsFilter!) {\n    pipelineOrError(params: $params) {\n      ... on Pipeline {\n        id\n        ...JobMetadataFragment\n      }\n    }\n    assetNodes(pipeline: $params) {\n      id\n      ...JobMetadataAssetNode\n    }\n    pipelineRunsOrError(filter: $runsFilter, limit: 5) {\n      ... on PipelineRuns {\n        results {\n          id\n          ...RunMetadataFragment\n        }\n      }\n    }\n  }\n\n  fragment JobMetadataAssetNode on AssetNode {\n    id\n    automationCondition {\n      __typename\n    }\n    assetKey {\n      path\n    }\n  }\n\n  fragment JobMetadataFragment on Pipeline {\n    id\n    isJob\n    name\n    schedules {\n      id\n      mode\n      ...ScheduleSwitchFragment\n    }\n    sensors {\n      id\n      targets {\n        pipelineName\n        mode\n      }\n      ...SensorSwitchFragment\n    }\n  }\n\n  fragment RunMetadataFragment on PipelineRun {\n    id\n    status\n    assets {\n      id\n      key {\n        path\n      }\n    }\n    ...RunTimeFragment\n  }\n\n  ${SCHEDULE_SWITCH_FRAGMENT}\n  ${SENSOR_SWITCH_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n","import {Box, PageHeader, Subtitle1, Tag} from '@dagster-io/ui-components';\nimport {Link, useRouteMatch} from 'react-router-dom';\nimport {buildJobTabs} from 'shared/pipelines/buildJobTabs.oss';\n\nimport {JobMetadata} from './JobMetadata';\nimport {RepositoryLink} from './RepositoryLink';\nimport {usePermissionsForLocation} from '../app/Permissions';\nimport {JobTabs} from '../pipelines/JobTabs';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelineNav = (props: Props) => {\n  const {repoAddress} = props;\n  const permissions = usePermissionsForLocation(repoAddress.location);\n\n  const match = useRouteMatch<{tab?: string; selector: string}>([\n    '/locations/:repoPath/pipelines/:selector/:tab?',\n    '/locations/:repoPath/jobs/:selector/:tab?',\n    '/locations/:repoPath/pipeline_or_job/:selector/:tab?',\n  ]);\n\n  const explorerPath = explorerPathFromString(match!.params.selector);\n  const {pipelineName, snapshotId} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const repoJobEntry = repo?.repository.pipelines.find(\n    (pipelineOrJob) => pipelineOrJob.name === pipelineName,\n  );\n  const isJob = !!repoJobEntry?.isJob;\n  const isAssetJob = !!repoJobEntry?.isAssetJob;\n\n  // If using pipeline:mode tuple (crag flag), check for partition sets that are for this specific\n  // pipeline:mode tuple. Otherwise, just check for a pipeline name match.\n  const partitionSets = repo?.repository.partitionSets || [];\n  const hasLaunchpad = !isAssetJob && !repoJobEntry?.externalJobSource;\n  const hasPartitionSet = partitionSets.some(\n    (partitionSet) => partitionSet.pipelineName === pipelineName,\n  );\n\n  const tabs = buildJobTabs({hasLaunchpad, hasPartitionSet});\n\n  return (\n    <>\n      <PageHeader\n        title={\n          <Subtitle1 style={{display: 'flex', flexDirection: 'row', gap: 4}}>\n            <Link to=\"/jobs\">Jobs</Link>\n            <span>/</span>\n            {pipelineName}\n          </Subtitle1>\n        }\n        tags={\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 8, wrap: 'wrap'}}>\n            <Tag icon=\"job\">\n              {isJob ? 'Job in ' : 'Pipeline in '}\n              <RepositoryLink repoAddress={repoAddress} />\n            </Tag>\n            {snapshotId ? null : (\n              <JobMetadata pipelineName={pipelineName} repoAddress={repoAddress} />\n            )}\n          </Box>\n        }\n        tabs={\n          <JobTabs\n            repoAddress={repoAddress}\n            isJob={isJob}\n            explorerPath={explorerPath}\n            permissions={permissions}\n            matchingTab={match!.params.tab}\n            tabs={tabs}\n          />\n        }\n      />\n    </>\n  );\n};\n","import {Table} from '@dagster-io/ui-components';\nimport {useState} from 'react';\n\nimport {\n  BACKFILL_ACTIONS_BACKFILL_FRAGMENT,\n  PARTITION_SET_FOR_BACKFILL_TABLE_FRAGMENT,\n} from './BackfillFragments';\nimport {BackfillPartitionsRequestedDialog} from './BackfillPartitionsRequestedDialog';\nimport {BackfillRow} from './BackfillRow';\nimport {BackfillTableFragment} from './types/BackfillTable.types';\nimport {gql} from '../../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../../app/PythonErrorFragment';\n\nexport const BackfillTable = ({\n  showBackfillTarget = true,\n  allPartitions,\n  backfills,\n  refetch,\n}: {\n  allPartitions?: string[];\n  backfills: BackfillTableFragment[];\n  refetch: () => void;\n  showBackfillTarget?: boolean;\n}) => {\n  const [partitionsRequestedBackfill, setPartitionsRequestedBackfill] = useState<string>();\n\n  return (\n    <>\n      <Table>\n        <thead>\n          <tr>\n            <th>Backfill ID</th>\n            <th>Created</th>\n            {showBackfillTarget ? <th>Backfill target</th> : null}\n            <th>Requested</th>\n            <th>Launched by</th>\n            <th>Backfill status</th>\n            <th style={{width: 80}} />\n          </tr>\n        </thead>\n        <tbody>\n          {backfills.map((backfill) => (\n            <BackfillRow\n              key={backfill.id}\n              showBackfillTarget={showBackfillTarget}\n              backfill={backfill}\n              allPartitions={allPartitions}\n              onShowPartitionsRequested={setPartitionsRequestedBackfill}\n              refetch={refetch}\n            />\n          ))}\n        </tbody>\n      </Table>\n\n      <BackfillPartitionsRequestedDialog\n        backfillId={partitionsRequestedBackfill}\n        onClose={() => setPartitionsRequestedBackfill(undefined)}\n      />\n    </>\n  );\n};\n\nexport const BACKFILL_TABLE_FRAGMENT = gql`\n  fragment BackfillTableFragment on PartitionBackfill {\n    id\n    status\n    isAssetBackfill\n    isValidSerialization\n    numPartitions\n    timestamp\n    partitionSetName\n    partitionSet {\n      id\n      ...PartitionSetForBackfillTableFragment\n    }\n    assetSelection {\n      path\n    }\n    tags {\n      key\n      value\n    }\n    error {\n      ...PythonErrorFragment\n    }\n    ...BackfillActionsBackfillFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${BACKFILL_ACTIONS_BACKFILL_FRAGMENT}\n  ${PARTITION_SET_FOR_BACKFILL_TABLE_FRAGMENT}\n`;\n","import {\n  Box,\n  CursorPaginationControls,\n  CursorPaginationProps,\n  NonIdealState,\n} from '@dagster-io/ui-components';\nimport {useEffect, useState} from 'react';\n\nimport {gql, useQuery} from '../apollo-client';\nimport {JobBackfillsQuery, JobBackfillsQueryVariables} from './types/JobBackfillsTable.types';\nimport {RepositorySelector} from '../graphql/types';\nimport {BACKFILL_TABLE_FRAGMENT, BackfillTable} from '../instance/backfill/BackfillTable';\nimport {Loading} from '../ui/Loading';\n\nconst BACKFILL_PAGE_SIZE = 10;\n\nexport const JobBackfillsTable = ({\n  partitionSetName,\n  partitionNames,\n  repositorySelector,\n  refetchCounter,\n}: {\n  partitionSetName: string;\n  partitionNames: string[];\n  repositorySelector: RepositorySelector;\n  refetchCounter: number;\n}) => {\n  const [cursorStack, setCursorStack] = useState<string[]>(() => []);\n  const [cursor, setCursor] = useState<string | undefined>();\n  const queryResult = useQuery<JobBackfillsQuery, JobBackfillsQueryVariables>(JOB_BACKFILLS_QUERY, {\n    variables: {\n      partitionSetName,\n      repositorySelector,\n      cursor,\n      limit: BACKFILL_PAGE_SIZE,\n    },\n  });\n\n  const refetch = queryResult.refetch;\n  useEffect(() => {\n    if (refetchCounter) {\n      refetch();\n    }\n  }, [refetch, refetchCounter]);\n\n  return (\n    <Loading queryResult={queryResult}>\n      {({partitionSetOrError}) => {\n        if (partitionSetOrError.__typename === 'PartitionSetNotFoundError') {\n          return (\n            <Box margin={{vertical: 20}}>\n              <NonIdealState title=\"Partition set not found.\" icon=\"no-results\" />\n            </Box>\n          );\n        }\n\n        if (partitionSetOrError.__typename === 'PythonError') {\n          return (\n            <Box margin={{vertical: 20}}>\n              <NonIdealState title=\"An error occurred.\" icon=\"no-results\" />\n            </Box>\n          );\n        }\n\n        const {backfills, pipelineName} = partitionSetOrError;\n\n        if (!backfills.length) {\n          return (\n            <Box margin={{vertical: 20}}>\n              <NonIdealState title={`No backfills for ${pipelineName}`} icon=\"no-results\" />\n            </Box>\n          );\n        }\n\n        const paginationProps: CursorPaginationProps = {\n          hasPrevCursor: !!cursor,\n          hasNextCursor: backfills && backfills.length === BACKFILL_PAGE_SIZE,\n          popCursor: () => {\n            const nextStack = [...cursorStack];\n            setCursor(nextStack.pop());\n            setCursorStack(nextStack);\n          },\n          advanceCursor: () => {\n            if (cursor) {\n              setCursorStack((current) => [...current, cursor]);\n            }\n            const nextCursor = backfills && backfills[backfills.length - 1]!.id;\n            if (!nextCursor) {\n              return;\n            }\n            setCursor(nextCursor);\n          },\n          reset: () => {\n            setCursorStack([]);\n            setCursor(undefined);\n          },\n        };\n        return (\n          <>\n            <BackfillTable\n              backfills={backfills}\n              refetch={refetch}\n              showBackfillTarget={false}\n              allPartitions={partitionNames}\n            />\n            <CursorPaginationControls {...paginationProps} />\n          </>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst JOB_BACKFILLS_QUERY = gql`\n  query JobBackfillsQuery(\n    $partitionSetName: String!\n    $repositorySelector: RepositorySelector!\n    $cursor: String\n    $limit: Int\n  ) {\n    partitionSetOrError(\n      repositorySelector: $repositorySelector\n      partitionSetName: $partitionSetName\n    ) {\n      ... on PartitionSet {\n        id\n        pipelineName\n        backfills(cursor: $cursor, limit: $limit) {\n          id\n          ...BackfillTableFragment\n        }\n      }\n    }\n  }\n\n  ${BACKFILL_TABLE_FRAGMENT}\n`;\n","import {Box, Checkbox} from '@dagster-io/ui-components';\n\nimport {RunStatus} from '../graphql/types';\nimport {runStatusToBackfillStateString} from '../runs/RunStatusTag';\nimport {testId} from '../testing/testId';\n\nexport function countsByState(partitionKeysForCounts: {partitionKey: string; state: RunStatus}[]) {\n  const result: {[status: string]: number} = {\n    [RunStatus.SUCCESS]: 0,\n    [RunStatus.NOT_STARTED]: 0,\n    [RunStatus.FAILURE]: 0,\n    [RunStatus.QUEUED]: 0,\n    [RunStatus.STARTED]: 0,\n  };\n  for (const key of partitionKeysForCounts) {\n    result[key.state] = (result[key.state] || 0) + 1;\n  }\n  return result;\n}\n\nexport const PartitionRunStatusCheckboxes = ({\n  counts,\n  value,\n  onChange,\n  allowed,\n  disabled,\n}: {\n  counts: {[status: string]: number};\n  value: RunStatus[];\n  allowed: RunStatus[];\n  onChange: (selected: RunStatus[]) => void;\n  disabled?: boolean;\n}) => {\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 12}} style={{overflow: 'hidden'}}>\n      {allowed.map((status) => (\n        <Checkbox\n          key={status}\n          data-testid={testId(`run-status-${status}-checkbox`)}\n          disabled={disabled}\n          style={{marginBottom: 0, marginLeft: 10, minWidth: 200}}\n          checked={value.includes(status) && !disabled}\n          label={`${runStatusToBackfillStateString(status)} (${counts[status]})`}\n          onChange={() =>\n            onChange(\n              value.includes(status) ? value.filter((v) => v !== status) : [...value, status],\n            )\n          }\n        />\n      ))}\n    </Box>\n  );\n};\n","import {\n  Body2,\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Subheading,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {\n  DAEMON_NOT_RUNNING_ALERT_INSTANCE_FRAGMENT,\n  DaemonNotRunningAlert,\n  USING_DEFAULT_LAUNCHER_ALERT_INSTANCE_FRAGMENT,\n  UsingDefaultLauncherAlert,\n  isBackfillDaemonHealthy,\n  showBackfillErrorToast,\n  showBackfillSuccessToast,\n} from './BackfillMessaging';\nimport {DimensionRangeWizard} from './DimensionRangeWizard';\nimport {PartitionRunStatusCheckboxes, countsByState} from './PartitionRunStatusCheckboxes';\nimport {gql, useMutation, useQuery} from '../apollo-client';\nimport {\n  BackfillSelectorQuery,\n  BackfillSelectorQueryVariables,\n} from './types/BackfillSelector.types';\nimport {PipelineRunTag} from '../app/ExecutionSessionStorage';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {isTimeseriesPartition} from '../assets/MultipartitioningSupport';\nimport {GanttChartMode} from '../gantt/GanttChart';\nimport {buildLayout} from '../gantt/GanttChartLayout';\nimport {PartitionDefinitionType, RunStatus} from '../graphql/types';\nimport {LAUNCH_PARTITION_BACKFILL_MUTATION} from '../instance/backfill/BackfillUtils';\nimport {\n  LaunchPartitionBackfillMutation,\n  LaunchPartitionBackfillMutationVariables,\n} from '../instance/backfill/types/BackfillUtils.types';\nimport {LaunchButton} from '../launchpad/LaunchButton';\nimport {TagContainer, TagEditor} from '../launchpad/TagEditor';\nimport {tagsWithUIExecutionTags} from '../launchpad/uiExecutionTags';\nimport {explodeCompositesInHandleGraph} from '../pipelines/CompositeSupport';\nimport {GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT} from '../pipelines/GraphExplorer';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface BackfillOptions {\n  reexecute: boolean;\n  fromFailure: boolean;\n}\n\nexport const BackfillPartitionSelector = ({\n  partitionSetName,\n  onLaunch,\n  onCancel,\n  onSubmit,\n  repoAddress,\n  runStatusData,\n  refreshing,\n  pipelineName,\n  partitionNames,\n}: {\n  partitionSetName: string;\n  partitionNames: string[];\n  runStatusData: {[partitionName: string]: RunStatus};\n  refreshing: boolean;\n  pipelineName: string;\n  onLaunch?: (backfillId: string, stepQuery: string) => void;\n  onCancel?: () => void;\n  onSubmit: () => void;\n  repoAddress: RepoAddress;\n}) => {\n  const [range, _setRange] = React.useState<string[]>(\n    Object.keys(runStatusData).filter(\n      (k) => !runStatusData[k] || runStatusData[k] === RunStatus.FAILURE,\n    ),\n  );\n  const [stateFilters, setStateFilters] = React.useState<RunStatus[]>([\n    RunStatus.NOT_STARTED,\n    RunStatus.FAILURE,\n  ]);\n\n  const selected = React.useMemo(() => {\n    return range.filter((r) => stateFilters.includes(runStatusData[r]!));\n  }, [range, stateFilters, runStatusData]);\n\n  const [tagEditorOpen, setTagEditorOpen] = React.useState<boolean>(false);\n  const [tags, setTags] = React.useState<PipelineRunTag[]>([]);\n  const [query, setQuery] = React.useState<string>('');\n  const [options, setOptions] = React.useState<BackfillOptions>({\n    reexecute: false,\n    fromFailure: false,\n  });\n  const repositorySelector = repoAddressToSelector(repoAddress);\n\n  const {data} = useQuery<BackfillSelectorQuery, BackfillSelectorQueryVariables>(\n    BACKFILL_SELECTOR_QUERY,\n    {\n      variables: {\n        pipelineSelector: {\n          ...repositorySelector,\n          pipelineName,\n        },\n      },\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const mounted = React.useRef(true);\n  React.useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, [onLaunch]);\n\n  const onSuccess = (backfillId: string) => {\n    showBackfillSuccessToast(backfillId, false);\n    onLaunch?.(backfillId, query);\n  };\n\n  const onError = (data: LaunchPartitionBackfillMutation | null | undefined) => {\n    showBackfillErrorToast(data);\n  };\n\n  if (!data) {\n    return (\n      <Box margin={{vertical: 32}} flex={{justifyContent: 'center'}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  if (data.pipelineSnapshotOrError.__typename !== 'PipelineSnapshot') {\n    return (\n      <Box margin={20}>\n        <NonIdealState icon=\"error\" title=\"Could not fetch job details\" />\n      </Box>\n    );\n  }\n\n  const {pipelineSnapshotOrError: pipelineSnapshot, instance} = data;\n  const solids = explodeCompositesInHandleGraph(pipelineSnapshot.solidHandles).map(\n    (h: any) => h.solid,\n  );\n  const solidsFiltered = filterByQuery(solids, query);\n  const layout = buildLayout({nodes: solidsFiltered.all, mode: GanttChartMode.FLAT});\n  const stepRows = layout.boxes.map((box) => ({\n    x: box.x,\n    name: box.node.name,\n  }));\n\n  const isFailed = (name: string) => runStatusData[name] === RunStatus.FAILURE;\n  const failedPartitions = partitionNames.filter(isFailed);\n\n  const setRange = (selection: string[]) => {\n    const selectionSet = new Set(selection);\n    // first order the partition names, according to the order given by partition names, which\n    // is the order determined from the partition definition set in user code\n    _setRange(partitionNames.filter((name) => selectionSet.has(name)));\n    if (options.fromFailure && selection.filter((x) => !isFailed(x)).length > 0) {\n      setOptions({...options, fromFailure: false});\n    }\n  };\n\n  const counts = countsByState(\n    range.map((key) => ({\n      partitionKey: key,\n      state: runStatusData[key]!,\n    })),\n  );\n\n  return (\n    <>\n      <DialogBody>\n        <Box flex={{direction: 'column', gap: 24}}>\n          <Section\n            title={\n              <Box flex={{justifyContent: 'space-between'}}>\n                <div>Partitions</div>\n                {refreshing && (\n                  <Box flex={{gap: 4, alignItems: 'center'}}>\n                    <Spinner purpose=\"body-text\" />\n                    <Body2 color={Colors.textLight()}>Refreshing...</Body2>\n                  </Box>\n                )}\n              </Box>\n            }\n          >\n            <Box>\n              Select partitions to materialize. Click and drag to select a range on the timeline.\n            </Box>\n\n            <DimensionRangeWizard\n              selected={range}\n              setSelected={setRange}\n              health={{runStatusForPartitionKey: (key) => runStatusData[key]}}\n              partitionKeys={partitionNames}\n              dimensionType={\n                isTimeseriesPartition(partitionNames[0])\n                  ? PartitionDefinitionType.TIME_WINDOW\n                  : PartitionDefinitionType.STATIC\n              }\n            />\n\n            <PartitionRunStatusCheckboxes\n              value={stateFilters}\n              onChange={setStateFilters}\n              counts={counts}\n              allowed={\n                options.fromFailure\n                  ? [RunStatus.FAILURE]\n                  : [\n                      RunStatus.NOT_STARTED,\n                      RunStatus.FAILURE,\n                      RunStatus.QUEUED,\n                      RunStatus.STARTED,\n                      RunStatus.SUCCESS,\n                    ]\n              }\n            />\n          </Section>\n\n          {failedPartitions.length ? (\n            <Section title=\"Reexecution\">\n              <Checkbox\n                checked={options.fromFailure}\n                disabled={!selected.every(isFailed)}\n                onChange={() => {\n                  const next = {\n                    ...options,\n                    fromFailure: !options.fromFailure,\n                    reexecute: !options.reexecute,\n                  };\n\n                  if (next.fromFailure) {\n                    setStateFilters([RunStatus.FAILURE]);\n                  }\n                  setQuery('');\n                  setOptions(next);\n                }}\n                label={\n                  <Box flex={{display: 'inline-flex', alignItems: 'center'}}>\n                    <Box margin={{right: 4}}>Re-execute from failures</Box>\n                    <Tooltip\n                      placement=\"top\"\n                      content=\"For each partition, if the most recent run failed, launch a re-execution starting from the steps that failed. Only applies for selections of failed partitions.\"\n                    >\n                      <Icon name=\"info\" color={Colors.accentGray()} />\n                    </Tooltip>\n                  </Box>\n                }\n              />\n            </Section>\n          ) : null}\n\n          <Section\n            title={\n              <Box flex={{display: 'inline-flex', alignItems: 'center'}}>\n                <Box margin={{right: 4}}>Step subset</Box>\n                <Tooltip\n                  placement=\"top\"\n                  content=\"Applies a step-selection to each run for the requested partitions.\"\n                >\n                  <Icon name=\"info\" color={Colors.accentGray()} />\n                </Tooltip>\n              </Box>\n            }\n          >\n            <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n              <GraphQueryInput\n                disabled={options.fromFailure}\n                width={520}\n                items={solids}\n                value={query}\n                placeholder=\"Type a step subset\"\n                onChange={setQuery}\n                autoApplyChanges={true}\n              />\n              {query ? (\n                <div style={{color: Colors.textLight()}}>\n                  {stepRows.length} step{stepRows.length === 1 ? '' : 's'} selected\n                </div>\n              ) : null}\n            </Box>\n          </Section>\n\n          <Section title=\"Tags\">\n            <TagEditor\n              tagsFromSession={tags}\n              onChange={setTags}\n              open={tagEditorOpen}\n              onRequestClose={() => setTagEditorOpen(false)}\n            />\n            {tags.length ? (\n              <div\n                style={{border: `1px solid ${Colors.borderDefault()}`, borderRadius: 8, padding: 3}}\n              >\n                <TagContainer tagsFromSession={tags} onRequestEdit={() => setTagEditorOpen(true)} />\n              </div>\n            ) : (\n              <div>\n                <Button onClick={() => setTagEditorOpen(true)}>Add tags to backfill runs</Button>\n              </div>\n            )}\n          </Section>\n\n          <Box flex={{direction: 'column', gap: 16}}>\n            {!isBackfillDaemonHealthy(instance) ? <DaemonNotRunningAlert /> : null}\n\n            <UsingDefaultLauncherAlert instance={instance} />\n          </Box>\n        </Box>\n      </DialogBody>\n      <DialogFooter>\n        <Button intent=\"none\" onClick={onCancel}>\n          Cancel\n        </Button>\n        <LaunchBackfillButton\n          partitionNames={selected}\n          partitionSetName={partitionSetName}\n          reexecutionSteps={\n            !options.fromFailure && solidsFiltered.all.length < solids.length\n              ? stepRows.map((step) => step.name)\n              : undefined\n          }\n          fromFailure={options.fromFailure}\n          tags={tags}\n          onSubmit={onSubmit}\n          onSuccess={onSuccess}\n          onError={onError}\n          repoAddress={repoAddress}\n        />\n      </DialogFooter>\n    </>\n  );\n};\n\nconst LaunchBackfillButton = ({\n  partitionSetName,\n  partitionNames,\n  reexecutionSteps,\n  fromFailure,\n  tags,\n  onSuccess,\n  onError,\n  onSubmit,\n  repoAddress,\n}: {\n  partitionSetName: string;\n  partitionNames: string[];\n  reexecutionSteps?: string[];\n  fromFailure?: boolean;\n  tags?: PipelineRunTag[];\n  onSuccess?: (backfillId: string, isPureAssetBackfill: boolean) => void;\n  onError: (data: LaunchPartitionBackfillMutation | null | undefined) => void;\n  onSubmit: () => void;\n  repoAddress: RepoAddress;\n}) => {\n  const repositorySelector = repoAddressToSelector(repoAddress);\n  const mounted = React.useRef(true);\n  const [launchBackfill, {loading}] = useMutation<\n    LaunchPartitionBackfillMutation,\n    LaunchPartitionBackfillMutationVariables\n  >(LAUNCH_PARTITION_BACKFILL_MUTATION);\n\n  React.useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, [onSuccess]);\n\n  const onLaunch = async () => {\n    onSubmit();\n    const {data} = await launchBackfill({\n      variables: {\n        backfillParams: {\n          selector: {\n            partitionSetName,\n            repositorySelector,\n          },\n          partitionNames,\n          reexecutionSteps,\n          fromFailure,\n          tags: tagsWithUIExecutionTags(tags),\n        },\n      },\n    });\n\n    if (!mounted.current) {\n      return;\n    }\n\n    if (data && data.launchPartitionBackfill.__typename === 'LaunchBackfillSuccess') {\n      onSuccess?.(data.launchPartitionBackfill.backfillId, false);\n    } else {\n      onError?.(data);\n    }\n  };\n\n  const count = partitionNames.length;\n  const reexecutionCount = reexecutionSteps?.length;\n\n  const title = () => {\n    if (loading) {\n      return `Submitting ${count} ${count === 1 ? 'run' : 'runs'}…`;\n    }\n\n    if (count) {\n      return `Submit ${count} ${count === 1 ? 'run' : 'runs'}`;\n    }\n\n    return 'Select partitions to submit';\n  };\n\n  const subtitle = () => {\n    return !loading && reexecutionCount\n      ? `(${reexecutionCount} selected ${reexecutionCount === 1 ? 'step' : 'steps'})`\n      : '';\n  };\n\n  const buttonTitle = [title(), subtitle()].join(' ');\n\n  return (\n    <LaunchButton\n      runCount={count}\n      config={{\n        title: buttonTitle,\n        icon: 'open_in_new',\n        disabled: !count || loading,\n        onClick: onLaunch,\n      }}\n    />\n  );\n};\n\nconst BACKFILL_SELECTOR_QUERY = gql`\n  query BackfillSelectorQuery($pipelineSelector: PipelineSelector!) {\n    pipelineSnapshotOrError(activePipelineSelector: $pipelineSelector) {\n      ... on PipelineSnapshot {\n        id\n        name\n        solidHandles {\n          handleID\n          solid {\n            name\n            definition {\n              name\n            }\n            inputs {\n              dependsOn {\n                solid {\n                  name\n                }\n              }\n            }\n            outputs {\n              dependedBy {\n                solid {\n                  name\n                }\n              }\n            }\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n      }\n    }\n    instance {\n      id\n      ...UsingDefaultLauncherAlertInstanceFragment\n      ...DaemonNotRunningAlertInstanceFragment\n    }\n  }\n\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${DAEMON_NOT_RUNNING_ALERT_INSTANCE_FRAGMENT}\n  ${USING_DEFAULT_LAUNCHER_ALERT_INSTANCE_FRAGMENT}\n`;\n\nconst Section = ({\n  title,\n  children,\n}: {\n  title: string | React.ReactNode;\n  children: React.ReactNode;\n}) => (\n  <Box flex={{direction: 'column', gap: 4}}>\n    <Subheading>{title}</Subheading>\n    <Box flex={{direction: 'column', gap: 8}} padding={{top: 16}} border=\"top\">\n      {children}\n    </Box>\n  </Box>\n);\n","import {Box, Button, Colors, FontFamily, NonIdealState} from '@dagster-io/ui-components';\nimport React, {useCallback, useMemo, useRef, useState} from 'react';\nimport {Line} from 'react-chartjs-2';\nimport styled from 'styled-components';\n\nimport {colorHash} from '../app/Util';\nimport {useRGBColorsForTheme} from '../app/useRGBColorsForTheme';\nimport {numberFormatter} from '../ui/formatters';\n\ntype PointValue = number | null | undefined;\ntype Point = {x: string; y: PointValue};\n\ninterface PartitionGraphProps {\n  partitionNames: string[];\n  jobDataByPartition?: {[partitionName: string]: PointValue};\n  stepDataByPartition?: {[partitionName: string]: {[key: string]: PointValue[]}};\n  title?: string;\n  yLabel?: string;\n  isJob: boolean;\n  hiddenStepKeys?: string[];\n}\n\nexport const PartitionGraph = React.memo(\n  ({\n    partitionNames,\n    jobDataByPartition,\n    stepDataByPartition,\n    title,\n    yLabel,\n    isJob,\n    hiddenStepKeys,\n  }: PartitionGraphProps) => {\n    const [hiddenPartitions, setHiddenPartitions] = useState<{[name: string]: boolean}>(() => ({}));\n    const chart = useRef<any>(null);\n\n    const rgbColors = useRGBColorsForTheme();\n\n    const [_showLargeGraphMessage, setShowLargeGraphMessage] = useState(\n      partitionNames.length > 1000,\n    );\n    const showLargeGraphMessage = _showLargeGraphMessage && partitionNames.length > 1000;\n\n    const onGraphClick = useCallback((event: MouseEvent) => {\n      const instance = chart.current;\n      if (!instance) {\n        return;\n      }\n      const xAxis = instance.scales['x-axis-0'];\n      if (!xAxis) {\n        return;\n      }\n      const {offsetX, offsetY} = event;\n\n      const isChartClick =\n        event.type === 'click' &&\n        offsetX <= instance.chartArea.right &&\n        offsetX >= instance.chartArea.left &&\n        offsetY <= instance.chartArea.bottom &&\n        offsetY >= instance.chartArea.top;\n\n      if (!isChartClick || !event.shiftKey) {\n        return;\n      }\n\n      // category scale returns index here for some reason\n      const labelIndex = xAxis.getValueForPixel(offsetX);\n      const partitionName = instance.data.labels[labelIndex];\n      setHiddenPartitions((current) => ({\n        ...current,\n        [partitionName]: !current[partitionName],\n      }));\n    }, []);\n\n    const defaultOptions = useMemo(() => {\n      if (showLargeGraphMessage) {\n        return null;\n      }\n      const titleOptions = title ? {display: true, text: title} : undefined;\n      const scales = yLabel\n        ? {\n            y: {\n              id: 'y',\n              title: {display: true, text: yLabel, color: rgbColors[Colors.textLighter()]},\n              grid: {\n                color: rgbColors[Colors.keylineDefault()],\n              },\n              ticks: {\n                color: rgbColors[Colors.textLighter()],\n                font: {\n                  size: 12,\n                  family: FontFamily.monospace,\n                },\n              },\n            },\n            x: {\n              id: 'x',\n              title: {display: true, text: title, color: rgbColors[Colors.textLighter()]},\n              grid: {\n                color: rgbColors[Colors.keylineDefault()],\n              },\n              ticks: {\n                color: rgbColors[Colors.textLighter()],\n                font: {\n                  size: 12,\n                  family: FontFamily.monospace,\n                },\n              },\n            },\n          }\n        : undefined;\n\n      return {\n        title: titleOptions,\n        animation: false,\n        scales,\n        plugins: {\n          legend: {\n            display: false,\n            onClick: (_e: MouseEvent, _legendItem: any) => {},\n          },\n        },\n        onClick: onGraphClick,\n        maintainAspectRatio: false,\n      };\n    }, [onGraphClick, rgbColors, showLargeGraphMessage, title, yLabel]);\n\n    const {jobData, stepData} = useMemo(() => {\n      if (showLargeGraphMessage) {\n        return {jobData: [], stepData: {}};\n      }\n      const jobData: Point[] = [];\n      const stepData = {};\n\n      partitionNames.forEach((partitionName) => {\n        const hidden = !!hiddenPartitions[partitionName];\n        if (jobDataByPartition) {\n          jobData.push({\n            x: partitionName,\n            y: !hidden ? jobDataByPartition[partitionName] : undefined,\n          });\n        }\n\n        if (stepDataByPartition) {\n          const stepDataByKey = stepDataByPartition[partitionName];\n          Object.entries(stepDataByKey || {}).forEach(([stepKey, step]) => {\n            if (hiddenStepKeys?.includes(stepKey) || !step) {\n              return;\n            }\n            (stepData as any)[stepKey] = [\n              ...((stepData as any)[stepKey] || []),\n              {\n                x: partitionName,\n                y: !hidden ? step : undefined,\n              },\n            ];\n          });\n        }\n      });\n\n      // stepData may have holes due to missing runs or missing steps.  For these to\n      // render properly, fill in the holes with `undefined` values.\n      Object.keys(stepData).forEach((stepKey) => {\n        (stepData as any)[stepKey] = _fillPartitions(partitionNames, (stepData as any)[stepKey]);\n      });\n\n      return {jobData, stepData};\n    }, [\n      hiddenPartitions,\n      hiddenStepKeys,\n      jobDataByPartition,\n      partitionNames,\n      showLargeGraphMessage,\n      stepDataByPartition,\n    ]);\n\n    const allLabel = isJob ? 'Total job' : 'Total pipeline';\n    const graphData = useMemo(\n      () =>\n        showLargeGraphMessage\n          ? null\n          : {\n              labels: partitionNames,\n              datasets: [\n                ...(!jobDataByPartition || (hiddenStepKeys && hiddenStepKeys.includes(allLabel))\n                  ? []\n                  : [\n                      {\n                        label: allLabel,\n                        data: jobData,\n                        borderColor: rgbColors[Colors.borderDefault()],\n                        backgroundColor: rgbColors[Colors.dataVizBlurple()],\n                      },\n                    ]),\n                ...Object.keys(stepData).map((stepKey) => ({\n                  label: stepKey,\n                  data: stepData[stepKey as keyof typeof stepData],\n                  borderColor: colorHash(stepKey),\n                  backgroundColor: rgbColors[Colors.dataVizBlurple()],\n                })),\n              ],\n            },\n      [\n        allLabel,\n        hiddenStepKeys,\n        jobData,\n        jobDataByPartition,\n        partitionNames,\n        rgbColors,\n        showLargeGraphMessage,\n        stepData,\n      ],\n    );\n\n    if (graphData && defaultOptions) {\n      // Passing graphData as a closure prevents ChartJS from trying to isEqual, which is fairly\n      // unlikely to save a render and is time consuming given the size of the data structure.\n      // We have a useMemo around the entire <PartitionGraphSet /> and there aren't many extra renders.\n      return (\n        <PartitionGraphContainer>\n          <Line data={() => graphData} height={300} options={defaultOptions as any} ref={chart} />\n        </PartitionGraphContainer>\n      );\n    }\n    return (\n      <NonIdealState\n        icon=\"warning\"\n        title=\"Large number of data points\"\n        description={\n          <Box flex={{direction: 'column', gap: 8}}>\n            There are {numberFormatter.format(partitionNames.length)} datapoints in this graph. This\n            might crash the browser.\n            <div>\n              <Button\n                intent=\"primary\"\n                onClick={() => {\n                  setShowLargeGraphMessage(false);\n                }}\n              >\n                Show anyway\n              </Button>\n            </div>\n          </Box>\n        }\n      />\n    );\n  },\n);\n\nconst _fillPartitions = (partitionNames: string[], points: Point[]) => {\n  const pointData = {};\n  points.forEach((point) => {\n    (pointData as any)[point.x] = point.y;\n  });\n\n  return partitionNames.map((partitionName) => ({\n    x: partitionName,\n    y: (pointData as any)[partitionName],\n  }));\n};\n\nconst PartitionGraphContainer = styled.div`\n  display: flex;\n  color: ${Colors.textLight()};\n  padding: 24px 12px;\n  text-decoration: none;\n`;\n","import {\n  Box,\n  Button,\n  Dialog,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Subheading,\n  Tooltip,\n  useViewport,\n} from '@dagster-io/ui-components';\nimport React, {useCallback, useEffect, useLayoutEffect, useMemo, useState} from 'react';\n\nimport {BackfillPartitionSelector} from './BackfillSelector';\nimport {JobBackfillsTable} from './JobBackfillsTable';\nimport {PartitionGraph} from './PartitionGraph';\nimport {PartitionStatus} from './PartitionStatus';\nimport {PartitionPerOpStatus, getVisibleItemCount} from './PartitionStepStatus';\nimport {GRID_FLOATING_CONTAINER_WIDTH} from './RunMatrixUtils';\nimport {\n  OpJobPartitionSetFragment,\n  OpJobPartitionStatusFragment,\n  PartitionsStatusQuery,\n  PartitionsStatusQueryVariables,\n} from './types/OpJobPartitionsView.types';\nimport {PartitionRuns} from './useMatrixData';\nimport {usePartitionStepQuery} from './usePartitionStepQuery';\nimport {QueryResult, gql, useQuery} from '../apollo-client';\nimport {usePermissionsForLocation} from '../app/Permissions';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {RunStatus} from '../graphql/types';\nimport {DagsterTag} from '../runs/RunTag';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ntype PartitionStatus = OpJobPartitionStatusFragment;\n\nconst simpleCache = new Map<\n  string,\n  QueryResult<PartitionsStatusQuery, PartitionsStatusQueryVariables>\n>();\n\nexport const OpJobPartitionsView = React.memo(\n  ({partitionSetName, repoAddress}: {partitionSetName: string; repoAddress: RepoAddress}) => {\n    const repositorySelector = repoAddressToSelector(repoAddress);\n    const variables = useMemo(\n      () => ({partitionSetName, repositorySelector}),\n      [partitionSetName, repositorySelector],\n    );\n    const cacheKey = useMemo(() => JSON.stringify(variables), [variables]);\n    const cachedResult = useMemo(() => simpleCache.get(cacheKey), [cacheKey]);\n    const currentQueryResult = useQuery<PartitionsStatusQuery, PartitionsStatusQueryVariables>(\n      PARTITIONS_STATUS_QUERY,\n      {\n        variables: {partitionSetName, repositorySelector},\n        notifyOnNetworkStatusChange: true,\n        fetchPolicy: 'no-cache',\n      },\n    );\n\n    useLayoutEffect(() => {\n      if (currentQueryResult) {\n        simpleCache.set(cacheKey, currentQueryResult);\n      }\n    }, [cacheKey, currentQueryResult]);\n    const queryResult = currentQueryResult.data\n      ? currentQueryResult\n      : (cachedResult ?? currentQueryResult);\n    const {data, loading} = queryResult;\n\n    if (!data) {\n      if (loading) {\n        return (\n          <Box padding={32} flex={{direction: 'column', alignItems: 'center'}}>\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <Spinner purpose=\"body-text\" />\n              <div>Loading partitions…</div>\n            </Box>\n          </Box>\n        );\n      }\n\n      return (\n        <Box padding={32}>\n          <NonIdealState\n            icon=\"error\"\n            title=\"An error occurred\"\n            description=\"An unexpected error occurred.\"\n          />\n        </Box>\n      );\n    }\n\n    const {partitionSetOrError} = data;\n    if (partitionSetOrError.__typename === 'PartitionSetNotFoundError') {\n      return (\n        <Box padding={32}>\n          <NonIdealState\n            icon=\"search\"\n            title=\"Partition set not found\"\n            description={partitionSetOrError.message}\n          />\n        </Box>\n      );\n    }\n\n    if (partitionSetOrError.__typename === 'PythonError') {\n      return (\n        <Box padding={32}>\n          <PythonErrorInfo error={partitionSetOrError} />\n        </Box>\n      );\n    }\n\n    if (partitionSetOrError.partitionsOrError.__typename === 'PythonError') {\n      return (\n        <Box padding={32}>\n          <PythonErrorInfo error={partitionSetOrError.partitionsOrError} />\n        </Box>\n      );\n    }\n\n    const partitionNames = partitionSetOrError.partitionsOrError.results.map(({name}) => name);\n\n    return (\n      <OpJobPartitionsViewContent\n        partitionNames={partitionNames}\n        partitionSet={partitionSetOrError}\n        repoAddress={repoAddress}\n        partitionsQueryResult={currentQueryResult}\n      />\n    );\n  },\n);\n\nexport function usePartitionDurations(partitions: PartitionRuns[]) {\n  return useMemo(() => {\n    const stepDurationData: {[name: string]: {[key: string]: (number | undefined)[]}} = {};\n    const runDurationData: {[name: string]: number | undefined} = {};\n\n    partitions.forEach((p) => {\n      if (!p.runsLoaded || p.runs.length === 0) {\n        return;\n      }\n      const sortedRuns = p.runs.sort((a, b) => a.startTime || 0 - (b.startTime || 0));\n      const lastRun = sortedRuns[sortedRuns.length - 1]!;\n      stepDurationData[p.name] = {};\n      runDurationData[p.name] =\n        lastRun?.endTime && lastRun?.startTime ? lastRun.endTime - lastRun.startTime : undefined;\n\n      lastRun.stepStats.forEach((s) => {\n        stepDurationData[p.name]![s.stepKey] = [\n          s.endTime && s.startTime ? s.endTime - s.startTime : undefined,\n        ];\n      });\n    });\n\n    return {runDurationData, stepDurationData};\n  }, [partitions]);\n}\n\nexport const OpJobPartitionsViewContent = React.memo(\n  ({\n    partitionSet,\n    partitionNames,\n    repoAddress,\n    partitionsQueryResult,\n  }: {\n    partitionNames: string[];\n    partitionSet: OpJobPartitionSetFragment;\n    repoAddress: RepoAddress;\n    partitionsQueryResult: QueryResult<PartitionsStatusQuery, PartitionsStatusQueryVariables>;\n  }) => {\n    const {\n      permissions: {canLaunchPartitionBackfill},\n      disabledReasons,\n    } = usePermissionsForLocation(repoAddress.location);\n    const {viewport, containerProps} = useViewport();\n\n    const [pageSize, setPageSize] = useState(60);\n    const [offset, setOffset] = useState<number>(0);\n    const [showSteps, setShowSteps] = useState(false);\n    const [showBackfillSetup, setShowBackfillSetup] = useState(false);\n    const [blockDialog, setBlockDialog] = useState(false);\n    const repositorySelector = repoAddressToSelector(repoAddress);\n    const [backfillRefetchCounter, setBackfillRefetchCounter] = useState(0);\n\n    const partitions = usePartitionStepQuery({\n      partitionSetName: partitionSet.name,\n      partitionTagName: DagsterTag.Partition,\n      partitionNames,\n      pageSize,\n      runsFilter: [],\n      repositorySelector,\n      jobName: partitionSet.pipelineName,\n      offset,\n      skipQuery: !showSteps,\n    });\n\n    useEffect(() => {\n      if (viewport.width && !showSteps) {\n        // magical numbers to approximate the size of the window, which is calculated in the step\n        // status component.  This approximation is to make sure that the window does not jump as\n        // the pageSize gets recalculated\n        const approxPageSize = getVisibleItemCount(viewport.width - GRID_FLOATING_CONTAINER_WIDTH);\n        setPageSize(approxPageSize);\n      }\n    }, [viewport.width, showSteps, setPageSize]);\n\n    const selectedPartitions = useMemo(() => {\n      return showSteps\n        ? partitionNames.slice(\n            Math.max(0, partitionNames.length - 1 - offset - pageSize),\n            partitionNames.length - offset,\n          )\n        : partitionNames;\n    }, [offset, pageSize, partitionNames, showSteps]);\n\n    const stepDurationData = usePartitionDurations(partitions).stepDurationData;\n\n    const onSubmit = useCallback(() => setBlockDialog(true), []);\n\n    const selectPartitionNamesSet = useMemo(\n      () => new Set(selectedPartitions),\n      [selectedPartitions],\n    );\n\n    const {partitionStatusesOrError} = partitionSet;\n    const partitionStatuses = useMemo(() => {\n      return partitionStatusesOrError.__typename === 'PartitionStatuses'\n        ? partitionStatusesOrError.results\n        : [];\n    }, [partitionStatusesOrError]);\n\n    const {runStatusData, runDurationData} = useMemo(() => {\n      // Note: This view reads \"run duration\" from the `partitionStatusesOrError` GraphQL API,\n      // rather than looking at the duration of the most recent run returned in `partitions` above\n      // so that the latter can be loaded when you click \"Show per-step status\" only.\n      const runStatusData: {[name: string]: RunStatus} = {};\n      const runDurationData: {[name: string]: number | undefined} = {};\n\n      partitionStatuses.forEach((p) => {\n        runStatusData[p.partitionName] = p.runStatus || RunStatus.NOT_STARTED;\n        if (selectPartitionNamesSet.has(p.partitionName)) {\n          runDurationData[p.partitionName] = p.runDuration || undefined;\n        }\n      });\n      return {runStatusData, runDurationData};\n    }, [partitionStatuses, selectPartitionNamesSet]);\n\n    const health = useMemo(() => {\n      return {runStatusForPartitionKey: (name: string) => runStatusData[name]};\n    }, [runStatusData]);\n\n    return (\n      <div>\n        <Dialog\n          canEscapeKeyClose={!blockDialog}\n          canOutsideClickClose={!blockDialog}\n          onClose={() => setShowBackfillSetup(false)}\n          style={{width: 800, zIndex: 1000}}\n          title={`Launch ${partitionSet.pipelineName} backfill`}\n          isOpen={showBackfillSetup}\n        >\n          {showBackfillSetup && (\n            <BackfillPartitionSelector\n              partitionSetName={partitionSet.name}\n              partitionNames={partitionNames}\n              runStatusData={runStatusData}\n              refreshing={partitionsQueryResult.loading}\n              pipelineName={partitionSet.pipelineName}\n              onCancel={() => setShowBackfillSetup(false)}\n              onLaunch={(_backfillId, _stepQuery) => {\n                setBackfillRefetchCounter(backfillRefetchCounter + 1);\n                setShowBackfillSetup(false);\n              }}\n              onSubmit={onSubmit}\n              repoAddress={repoAddress}\n            />\n          )}\n        </Dialog>\n\n        <Box\n          flex={{justifyContent: 'space-between', direction: 'row', alignItems: 'center'}}\n          border=\"bottom\"\n          padding={{vertical: 16, horizontal: 24}}\n        >\n          <Subheading>Status</Subheading>\n          <Box flex={{gap: 8}}>\n            <Button onClick={() => setShowSteps(!showSteps)} active={showBackfillSetup}>\n              {showSteps ? 'Hide per-step status' : 'Show per-step status'}\n            </Button>\n            <Button\n              onClick={() => partitionsQueryResult.refetch()}\n              loading={partitionsQueryResult.loading}\n              disabled={partitionsQueryResult.loading}\n            >\n              Refresh\n            </Button>\n            {canLaunchPartitionBackfill ? (\n              <Button\n                onClick={() => {\n                  void partitionsQueryResult.refetch();\n                  setShowBackfillSetup(!showBackfillSetup);\n                }}\n                icon={<Icon name=\"add_circle\" />}\n                active={showBackfillSetup}\n              >\n                Launch backfill…\n              </Button>\n            ) : (\n              <Tooltip content={disabledReasons.canLaunchPartitionBackfill}>\n                <Button icon={<Icon name=\"add_circle\" />} disabled>\n                  Launch backfill…\n                </Button>\n              </Tooltip>\n            )}\n          </Box>\n        </Box>\n        <Box flex={{direction: 'row', alignItems: 'center'}} border=\"bottom\" padding={{left: 8}}>\n          <CountBox count={partitionNames.length} label=\"Total partitions\" />\n          <CountBox\n            count={useMemo(\n              () => partitionNames.filter((x) => runStatusData[x] === RunStatus.FAILURE).length,\n              [partitionNames, runStatusData],\n            )}\n            label=\"Failed partitions\"\n          />\n          <CountBox\n            count={useMemo(\n              () =>\n                partitionNames.filter(\n                  (x) => !runStatusData[x] || runStatusData[x] === RunStatus.NOT_STARTED,\n                ).length,\n              [partitionNames, runStatusData],\n            )}\n            label=\"Missing partitions\"\n          />\n        </Box>\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <div {...containerProps}>\n            <PartitionStatus\n              partitionNames={partitionNames}\n              health={health}\n              selected={showSteps ? selectedPartitions : undefined}\n              selectionWindowSize={pageSize}\n              onClick={useCallback(\n                (partitionName: string) => {\n                  const maxIdx = partitionNames.length - 1;\n                  const selectedIdx = partitionNames.indexOf(partitionName);\n                  const nextOffset = Math.min(\n                    maxIdx,\n                    Math.max(0, maxIdx - selectedIdx - 0.5 * pageSize),\n                  );\n                  setOffset(nextOffset);\n                  if (!showSteps) {\n                    setShowSteps(true);\n                  }\n                },\n                [pageSize, partitionNames, showSteps],\n              )}\n              tooltipMessage=\"Click to view per-step status\"\n            />\n          </div>\n          {showSteps ? (\n            <Box margin={{top: 16}}>\n              <PartitionPerOpStatus\n                partitionNames={partitionNames}\n                partitions={partitions}\n                pipelineName={partitionSet.pipelineName}\n                repoAddress={repoAddress}\n                setPageSize={setPageSize}\n                offset={offset}\n                setOffset={setOffset}\n              />\n            </Box>\n          ) : null}\n        </Box>\n        <Box padding={{horizontal: 24, vertical: 16}} border=\"top-and-bottom\">\n          <Subheading>Run duration</Subheading>\n        </Box>\n        <Box margin={24}>\n          <PartitionGraph\n            isJob={true}\n            title=\"Execution time by partition\"\n            yLabel=\"Execution time (secs)\"\n            partitionNames={showSteps ? selectedPartitions : partitionNames}\n            jobDataByPartition={runDurationData}\n          />\n        </Box>\n        {showSteps ? (\n          <>\n            <Box padding={{horizontal: 24, vertical: 16}}>\n              <Subheading>Step duration</Subheading>\n            </Box>\n            <Box margin={24}>\n              <PartitionGraph\n                isJob={true}\n                title=\"Execution time by partition\"\n                yLabel=\"Execution time (secs)\"\n                partitionNames={selectedPartitions}\n                stepDataByPartition={stepDurationData}\n              />\n            </Box>\n          </>\n        ) : null}\n        <Box\n          padding={{horizontal: 24, vertical: 16}}\n          border=\"top-and-bottom\"\n          style={{marginBottom: -1}}\n        >\n          <Subheading>Backfill history</Subheading>\n        </Box>\n        <Box margin={{bottom: 20}}>\n          <JobBackfillsTable\n            partitionSetName={partitionSet.name}\n            repositorySelector={repositorySelector}\n            partitionNames={partitionNames}\n            refetchCounter={backfillRefetchCounter}\n          />\n        </Box>\n      </div>\n    );\n  },\n);\n\nexport const CountBox = ({count, label}: {count: number; label: string}) => (\n  <Box padding={16} style={{flex: 1}} border=\"right\">\n    <div style={{fontSize: 18, marginBottom: 4}}>\n      <strong>{count}</strong>\n    </div>\n    <div>{label}</div>\n  </Box>\n);\n\nconst PARTITIONS_STATUS_QUERY = gql`\n  query PartitionsStatusQuery(\n    $partitionSetName: String!\n    $repositorySelector: RepositorySelector!\n  ) {\n    partitionSetOrError(\n      repositorySelector: $repositorySelector\n      partitionSetName: $partitionSetName\n    ) {\n      ... on PartitionSet {\n        id\n        ...OpJobPartitionSet\n      }\n      ... on PartitionSetNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment OpJobPartitionSet on PartitionSet {\n    id\n    name\n    pipelineName\n    partitionsOrError {\n      ... on Partitions {\n        results {\n          name\n        }\n      }\n      ...PythonErrorFragment\n    }\n    partitionStatusesOrError {\n      ... on PartitionStatuses {\n        results {\n          id\n          ...OpJobPartitionStatus\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment OpJobPartitionStatus on PartitionStatus {\n    id\n    partitionName\n    runStatus\n    runDuration\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Box, Button, Subheading, useViewport} from '@dagster-io/ui-components';\nimport React, {useEffect, useMemo, useState} from 'react';\n\nimport {JobBackfillsTable} from './JobBackfillsTable';\nimport {CountBox, usePartitionDurations} from './OpJobPartitionsView';\nimport {PartitionGraph} from './PartitionGraph';\nimport {PartitionStatus} from './PartitionStatus';\nimport {PartitionPerAssetStatus, getVisibleItemCount} from './PartitionStepStatus';\nimport {GRID_FLOATING_CONTAINER_WIDTH} from './RunMatrixUtils';\nimport {allPartitionsRange} from './SpanRepresentation';\nimport {usePartitionStepQuery} from './usePartitionStepQuery';\nimport {toGraphId} from '../asset-graph/Utils';\nimport {useAssetGraphData} from '../asset-graph/useAssetGraphData';\nimport {AssetPartitionStatus} from '../assets/AssetPartitionStatus';\nimport {LaunchAssetExecutionButton} from '../assets/LaunchAssetExecutionButton';\nimport {\n  explodePartitionKeysInSelectionMatching,\n  isTimeseriesDimension,\n  mergedAssetHealth,\n} from '../assets/MultipartitioningSupport';\nimport {keyCountInSelections, usePartitionHealthData} from '../assets/usePartitionHealthData';\nimport {RepositorySelector} from '../graphql/types';\nimport {DagsterTag} from '../runs/RunTag';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nexport const AssetJobPartitionsView = React.memo(\n  ({\n    partitionSetName,\n    repoAddress,\n    pipelineName,\n  }: {\n    pipelineName: string;\n    partitionSetName: string;\n    repoAddress: RepoAddress;\n  }) => {\n    const {viewport, containerProps} = useViewport();\n    const repositorySelector = repoAddressToSelector(repoAddress);\n\n    const pipelineSelector = useMemo(\n      () => ({\n        pipelineName,\n        repositoryName: repoAddress.name,\n        repositoryLocationName: repoAddress.location,\n      }),\n      [pipelineName, repoAddress.location, repoAddress.name],\n    );\n\n    const assetGraph = useAssetGraphData('*', {pipelineSelector});\n\n    const assetKeysWithPartitions = useMemo(() => {\n      return assetGraph.graphAssetKeys.filter((key) => {\n        return assetGraph.assetGraphData?.nodes[toGraphId(key)]?.definition.isPartitioned;\n      });\n    }, [assetGraph]);\n\n    const assetHealth = usePartitionHealthData(\n      assetKeysWithPartitions.length\n        ? assetKeysWithPartitions\n        : assetGraph.graphAssetKeys[0]\n          ? [assetGraph.graphAssetKeys[0]]\n          : [],\n    );\n\n    const {total, missing, merged} = useMemo(() => {\n      const merged = mergedAssetHealth(assetHealth.filter((h) => h.dimensions.length > 0));\n      const selection = merged.dimensions.map((d) => ({\n        selectedKeys: d.partitionKeys,\n        selectedRanges: [allPartitionsRange(d)],\n        dimension: d,\n      }));\n      const missing = explodePartitionKeysInSelectionMatching(selection, (dIdxs) =>\n        merged.stateForKeyIdx(dIdxs).includes(AssetPartitionStatus.MISSING),\n      );\n\n      return {\n        merged,\n        total: keyCountInSelections(selection),\n        missing: missing.length,\n      };\n    }, [assetHealth]);\n\n    const [pageSize, setPageSize] = useState(60);\n    const [offset, setOffset] = useState<number>(0);\n    const [showAssets, setShowAssets] = useState(false);\n\n    useEffect(() => {\n      if (viewport.width) {\n        // magical numbers to approximate the size of the window, which is calculated in the step\n        // status component.  This approximation is to make sure that the window does not jump as\n        // the pageSize gets recalculated\n        const approxPageSize = getVisibleItemCount(viewport.width - GRID_FLOATING_CONTAINER_WIDTH);\n        setPageSize(approxPageSize);\n      }\n    }, [viewport.width, setPageSize]);\n\n    const {selectedDimensionKeys, dimensionIdx, dimension, dimensionKeys} = useMemo(() => {\n      let dimensionIdx = merged.dimensions.findIndex(isTimeseriesDimension);\n      if (dimensionIdx === -1) {\n        dimensionIdx = 0; // may as well show something\n      }\n      const dimension = merged.dimensions[dimensionIdx] ? merged.dimensions[dimensionIdx] : null;\n      const dimensionKeys = dimension?.partitionKeys || [];\n      return {\n        selectedDimensionKeys: dimensionKeys.slice(\n          Math.max(0, dimensionKeys.length - 1 - offset - pageSize),\n          dimensionKeys.length - offset,\n        ),\n        dimensionIdx,\n        dimension,\n        dimensionKeys,\n      };\n    }, [merged.dimensions, offset, pageSize]);\n\n    return (\n      <div>\n        <Box\n          flex={{justifyContent: 'space-between', direction: 'row', alignItems: 'center'}}\n          border=\"bottom\"\n          padding={{vertical: 16, horizontal: 24}}\n        >\n          <Subheading>Status</Subheading>\n          <Box flex={{gap: 8}}>\n            <Button onClick={() => setShowAssets(!showAssets)}>\n              {showAssets ? 'Hide per-asset status' : 'Show per-asset status'}\n            </Button>\n            <LaunchAssetExecutionButton\n              scope={{all: assetGraph.graphQueryItems.map((g) => g.node), skipAllTerm: true}}\n              preferredJobName={pipelineName}\n            />\n          </Box>\n        </Box>\n        <Box flex={{direction: 'row', alignItems: 'center'}} border=\"bottom\" padding={{left: 8}}>\n          <CountBox count={total} label=\"Total partitions\" />\n          <CountBox count={missing} label=\"Missing partitions\" />\n        </Box>\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <div {...containerProps}>\n            <PartitionStatus\n              partitionNames={dimensionKeys}\n              splitPartitions={dimension ? !isTimeseriesDimension(dimension) : false}\n              health={{ranges: merged.rangesForSingleDimension(dimensionIdx)}}\n              selected={selectedDimensionKeys}\n              selectionWindowSize={pageSize}\n              tooltipMessage=\"Click to view per-asset status\"\n              onClick={(partitionName) => {\n                const maxIdx = dimensionKeys.length - 1;\n                const selectedIdx = dimensionKeys.indexOf(partitionName);\n                const nextOffset = Math.min(\n                  maxIdx,\n                  Math.max(0, maxIdx - selectedIdx - 0.5 * pageSize),\n                );\n                setOffset(nextOffset);\n              }}\n            />\n          </div>\n          {showAssets && dimension && (\n            <Box margin={{top: 16}}>\n              <PartitionPerAssetStatus\n                rangeDimensionIdx={dimensionIdx}\n                rangeDimension={dimension}\n                assetHealth={assetHealth}\n                assetQueryItems={assetGraph.graphQueryItems}\n                pipelineName={pipelineName}\n                setPageSize={setPageSize}\n                offset={offset}\n                setOffset={setOffset}\n              />\n            </Box>\n          )}\n        </Box>\n        {showAssets && (\n          <AssetJobPartitionGraphs\n            repositorySelector={repositorySelector}\n            pipelineName={pipelineName}\n            partitionSetName={partitionSetName}\n            multidimensional={(merged?.dimensions.length || 0) > 1}\n            dimensionName={dimension ? dimension.name : null}\n            dimensionKeys={dimensionKeys}\n            selected={selectedDimensionKeys}\n            offset={offset}\n            pageSize={pageSize}\n          />\n        )}\n        <Box\n          padding={{horizontal: 24, vertical: 16}}\n          border=\"top-and-bottom\"\n          style={{marginBottom: -1}}\n        >\n          <Subheading>Backfill history</Subheading>\n        </Box>\n        <Box margin={{bottom: 20}}>\n          <JobBackfillsTable\n            partitionSetName={partitionSetName}\n            repositorySelector={repositorySelector}\n            partitionNames={dimensionKeys}\n            refetchCounter={1}\n          />\n        </Box>\n      </div>\n    );\n  },\n);\n\nconst AssetJobPartitionGraphs = React.memo(\n  ({\n    repositorySelector,\n    dimensionKeys,\n    dimensionName,\n    selected,\n    pageSize,\n    partitionSetName,\n    multidimensional,\n    pipelineName,\n    offset,\n  }: {\n    repositorySelector: RepositorySelector;\n    pipelineName: string;\n    partitionSetName: string;\n    multidimensional: boolean;\n    dimensionName: string | null;\n    dimensionKeys: string[];\n    selected: string[];\n    pageSize: number;\n    offset: number;\n  }) => {\n    const partitions = usePartitionStepQuery({\n      partitionSetName,\n      partitionTagName: multidimensional\n        ? `${DagsterTag.Partition}/${dimensionName}`\n        : DagsterTag.Partition,\n      partitionNames: dimensionKeys,\n      repositorySelector,\n      pageSize,\n      runsFilter: [],\n      jobName: pipelineName,\n      offset,\n      skipQuery: !dimensionName,\n    });\n\n    const {stepDurationData, runDurationData} = usePartitionDurations(partitions);\n\n    return (\n      <>\n        <Box padding={{horizontal: 24, vertical: 16}} border=\"top-and-bottom\">\n          <Subheading>Run duration</Subheading>\n        </Box>\n\n        <Box margin={24}>\n          <PartitionGraph\n            isJob={true}\n            title=\"Execution time by partition\"\n            yLabel=\"Execution time (secs)\"\n            partitionNames={selected}\n            jobDataByPartition={runDurationData}\n          />\n        </Box>\n        <Box padding={{horizontal: 24, vertical: 16}} border=\"top-and-bottom\">\n          <Subheading>Step durations</Subheading>\n        </Box>\n        <Box margin={24}>\n          <PartitionGraph\n            isJob={true}\n            title=\"Execution time by partition\"\n            yLabel=\"Execution time (secs)\"\n            partitionNames={selected}\n            stepDataByPartition={stepDurationData}\n          />\n        </Box>\n      </>\n    );\n  },\n);\n","import {useMemo} from 'react';\n\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  AssetJobPartitionSetsQuery,\n  AssetJobPartitionSetsQueryVariables,\n} from './types/usePartitionNameForPipeline.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {RepoAddress} from '../workspace/types';\n\nexport function usePartitionNameForPipeline(repoAddress: RepoAddress, pipelineName: string) {\n  const queryResult = useQuery<AssetJobPartitionSetsQuery, AssetJobPartitionSetsQueryVariables>(\n    ASSET_JOB_PARTITION_SETS_QUERY,\n    {\n      skip: !pipelineName,\n      variables: {\n        repositoryLocationName: repoAddress.location,\n        repositoryName: repoAddress.name,\n        pipelineName,\n      },\n    },\n  );\n\n  const {data: partitionSetsData} = queryResult;\n\n  return useMemo(\n    () => ({\n      partitionSet:\n        partitionSetsData?.partitionSetsOrError.__typename === 'PartitionSets'\n          ? partitionSetsData.partitionSetsOrError.results[0]\n          : undefined,\n      partitionSetError:\n        partitionSetsData?.partitionSetsOrError.__typename === 'PipelineNotFoundError' ||\n        partitionSetsData?.partitionSetsOrError.__typename === 'PythonError'\n          ? partitionSetsData.partitionSetsOrError\n          : undefined,\n    }),\n    [partitionSetsData],\n  );\n}\n\nexport const ASSET_JOB_PARTITION_SETS_QUERY = gql`\n  query AssetJobPartitionSetsQuery(\n    $pipelineName: String!\n    $repositoryName: String!\n    $repositoryLocationName: String!\n  ) {\n    partitionSetsOrError(\n      pipelineName: $pipelineName\n      repositorySelector: {\n        repositoryName: $repositoryName\n        repositoryLocationName: $repositoryLocationName\n      }\n    ) {\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PartitionSets {\n        results {\n          id\n          name\n          mode\n          solidSelection\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Box, NonIdealState} from '@dagster-io/ui-components';\nimport {useParams} from 'react-router-dom';\n\nimport {AssetJobPartitionsView} from './AssetJobPartitionsView';\nimport {OpJobPartitionsView} from './OpJobPartitionsView';\nimport {usePartitionNameForPipeline} from '../assets/usePartitionNameForPipeline';\nimport {explorerPathFromString, useStripSnapshotFromPath} from '../pipelines/PipelinePathUtils';\nimport {useJobTitle} from '../pipelines/useJobTitle';\nimport {LoadingSpinner} from '../ui/Loading';\nimport {useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelinePartitionsRoot = (props: Props) => {\n  const {repoAddress} = props;\n  const params = useParams<{pipelinePath: string}>();\n  const {pipelinePath} = params;\n\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const pipelineInfo = repo?.repository.pipelines.find(\n    (pipelineOrJob) => pipelineOrJob.name === pipelineName,\n  );\n  const isJob = !!pipelineInfo?.isJob;\n  const isAssetJob = !!pipelineInfo?.isAssetJob;\n\n  useJobTitle(explorerPath, isJob);\n  useStripSnapshotFromPath(params);\n\n  const {partitionSet, partitionSetError} = usePartitionNameForPipeline(repoAddress, pipelineName);\n\n  if (!partitionSet && !partitionSetError) {\n    return <LoadingSpinner purpose=\"page\" />;\n  }\n  if (partitionSetError) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState icon=\"error\" title=\"Partitions\" description={partitionSetError.message} />\n      </Box>\n    );\n  }\n\n  if (!partitionSet) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"Partitions\"\n          description={\n            <div>\n              There are no partition sets defined for {isJob ? 'job' : 'pipeline'}{' '}\n              <code>{pipelineName}</code>.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return isAssetJob ? (\n    <AssetJobPartitionsView\n      pipelineName={pipelineName}\n      partitionSetName={partitionSet.name}\n      repoAddress={repoAddress}\n    />\n  ) : (\n    <OpJobPartitionsView partitionSetName={partitionSet.name} repoAddress={repoAddress} />\n  );\n};\n","import {Redirect, Switch} from 'react-router-dom';\nimport {JobFallthroughRoot} from 'shared/pipelines/JobFallthroughRoot.oss';\n\nimport {PipelineOrJobDisambiguationRoot} from './PipelineOrJobDisambiguationRoot';\nimport {PipelineRunsFeedRoot} from './PipelineRunsFeedRoot';\nimport {Route} from '../app/Route';\nimport {JobOrAssetLaunchpad} from '../launchpad/LaunchpadRoot';\nimport {LaunchpadSetupFromRunRoot} from '../launchpad/LaunchpadSetupFromRunRoot';\nimport {LaunchpadSetupRoot} from '../launchpad/LaunchpadSetupRoot';\nimport {PipelineNav} from '../nav/PipelineNav';\nimport {PipelinePartitionsRoot} from '../partitions/PipelinePartitionsRoot';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelineRoot = (props: Props) => {\n  const {repoAddress} = props;\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <PipelineNav repoAddress={repoAddress} />\n      <Switch>\n        <Route path=\"/locations/:repoPath/pipeline_or_job/:pipelinePath(/?.*)\">\n          <PipelineOrJobDisambiguationRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/playground/setup',\n            '/locations/:repoPath/jobs/:pipelinePath/playground/setup',\n          ]}\n        >\n          <LaunchpadSetupRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/playground/setup-from-run/:runId',\n            '/locations/:repoPath/jobs/:pipelinePath/playground/setup-from-run/:runId',\n          ]}\n        >\n          <LaunchpadSetupFromRunRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/playground',\n            '/locations/:repoPath/jobs/:pipelinePath/playground',\n          ]}\n        >\n          <JobOrAssetLaunchpad repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/runs/:runId',\n            '/locations/:repoPath/jobs/:pipelinePath/runs/:runId',\n          ]}\n          render={(props) => <Redirect to={`/runs/${props.match.params.runId}`} />}\n        />\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/runs',\n            '/locations/:repoPath/jobs/:pipelinePath/runs',\n          ]}\n        >\n          <PipelineRunsFeedRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/partitions',\n            '/locations/:repoPath/jobs/:pipelinePath/partitions',\n          ]}\n        >\n          <PipelinePartitionsRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/overview',\n            '/locations/:repoPath/jobs/:pipelinePath/overview',\n          ]}\n          render={(props) => (\n            <Redirect to={`/locations/${props.match.url.replace(/\\/overview$/i, '')}`} />\n          )}\n        />\n        <Route path={['/locations/:repoPath/pipelines/(/?.*)', '/locations/:repoPath/jobs/(/?.*)']}>\n          <JobFallthroughRoot repoAddress={repoAddress} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n","import {RepoAddress} from '../workspace/types';\n\nexport interface Props {\n  repoAddress: RepoAddress;\n  scheduleName: string;\n}\n\nexport const ScheduleAlertDetails = (_props: Props) => null;\n","import {ButtonLink, Caption, Colors, Group} from '@dagster-io/ui-components';\nimport qs from 'qs';\nimport {memo, useCallback, useMemo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {gql, useLazyQuery} from '../apollo-client';\nimport {\n  SchedulePartitionStatusFragment,\n  SchedulePartitionStatusQuery,\n  SchedulePartitionStatusQueryVariables,\n  SchedulePartitionStatusResultFragment,\n} from './types/SchedulePartitionStatus.types';\nimport {ScheduleFragment} from './types/ScheduleUtils.types';\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../graphql/types';\nimport {StatusTable} from '../instigation/InstigationUtils';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nconst RUN_STATUSES = ['Succeeded', 'Failed', 'Missing', 'Pending'];\n\nconst calculateDisplayStatus = (partition: SchedulePartitionStatusResultFragment) => {\n  switch (partition.runStatus) {\n    case null:\n      return 'Missing';\n    case RunStatus.SUCCESS:\n      return 'Succeeded';\n    case RunStatus.FAILURE:\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n      return 'Failed';\n    case RunStatus.MANAGED:\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.STARTED:\n    case RunStatus.STARTING:\n      return 'Pending';\n    default:\n      return assertUnreachable(partition.runStatus);\n  }\n};\n\ninterface Props {\n  repoAddress: RepoAddress;\n  schedule: ScheduleFragment;\n}\n\nexport const SchedulePartitionStatus = memo((props: Props) => {\n  const {repoAddress, schedule} = props;\n  const repo = useRepository(repoAddress);\n  const {name: scheduleName, partitionSet, pipelineName} = schedule;\n\n  const partitionSetName = partitionSet?.name;\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  const partitionPath = useMemo(() => {\n    const query = partitionSetName\n      ? qs.stringify(\n          {\n            partitionSet: partitionSetName,\n          },\n          {addQueryPrefix: true},\n        )\n      : '';\n    return `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/partitions${query}`;\n  }, [partitionSetName, isJob, pipelineName]);\n\n  const partitionURL = workspacePathFromAddress(repoAddress, partitionPath);\n\n  const [retrievePartitionStatus, {data, loading}] = useLazyQuery<\n    SchedulePartitionStatusQuery,\n    SchedulePartitionStatusQueryVariables\n  >(SCHEDULE_PARTITION_STATUS_QUERY, {\n    variables: {\n      scheduleSelector: {\n        scheduleName,\n        repositoryName: repoAddress.name,\n        repositoryLocationName: repoAddress.location,\n      },\n    },\n  });\n\n  const onClick = useCallback(() => retrievePartitionStatus(), [retrievePartitionStatus]);\n\n  const loadable = () => {\n    if (loading) {\n      return <Caption style={{color: Colors.textLight()}}>Loading…</Caption>;\n    }\n\n    if (!data) {\n      return (\n        <ButtonLink onClick={onClick}>\n          <Caption>Show coverage</Caption>\n        </ButtonLink>\n      );\n    }\n\n    const partitionFragment = data.scheduleOrError;\n    if (partitionFragment.__typename === 'Schedule') {\n      return (\n        <RetrievedSchedulePartitionStatus\n          schedule={partitionFragment}\n          partitionURL={partitionURL}\n        />\n      );\n    }\n\n    return <Caption style={{color: Colors.textRed()}}>Partition set not found!</Caption>;\n  };\n\n  return (\n    <Group direction=\"column\" spacing={4}>\n      <Link to={partitionURL}>{partitionSetName}</Link>\n      {loadable()}\n    </Group>\n  );\n});\n\nconst RetrievedSchedulePartitionStatus = ({\n  schedule,\n  partitionURL,\n}: {\n  schedule: SchedulePartitionStatusFragment;\n  partitionURL: string;\n}) => {\n  const {partitionSet} = schedule;\n\n  if (!partitionSet || partitionSet.partitionStatusesOrError.__typename !== 'PartitionStatuses') {\n    return <span style={{color: Colors.textLight()}}>None</span>;\n  }\n\n  const partitions = partitionSet.partitionStatusesOrError.results;\n  const partitionsByType = {};\n  partitions.forEach((partition) => {\n    const displayStatus = calculateDisplayStatus(partition);\n    (partitionsByType as any)[displayStatus] = [\n      ...((partitionsByType as any)[displayStatus] || []),\n      partition,\n    ];\n  });\n\n  return (\n    <StatusTable>\n      <tbody>\n        {RUN_STATUSES.map((status) => {\n          if (!(status in partitionsByType)) {\n            return null;\n          }\n          return (\n            <tr key={status}>\n              <td style={{width: '100px'}}>{status}</td>\n              <td>\n                {status === 'Failed' || status === 'Missing' ? (\n                  <Link\n                    to={`${partitionURL}?showFailuresAndGapsOnly=true`}\n                    style={{color: Colors.textDefault()}}\n                  >\n                    {(partitionsByType as any)[status].length}\n                  </Link>\n                ) : (\n                  (partitionsByType as any)[status].length\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StatusTable>\n  );\n};\n\nconst SCHEDULE_PARTITION_STATUS_QUERY = gql`\n  query SchedulePartitionStatusQuery($scheduleSelector: ScheduleSelector!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        ...SchedulePartitionStatusFragment\n      }\n    }\n  }\n\n  fragment SchedulePartitionStatusFragment on Schedule {\n    id\n    mode\n    pipelineName\n    partitionSet {\n      id\n      name\n      partitionStatusesOrError {\n        ... on PartitionStatuses {\n          results {\n            id\n            ...SchedulePartitionStatusResult\n          }\n        }\n      }\n    }\n  }\n\n  fragment SchedulePartitionStatusResult on PartitionStatus {\n    id\n    partitionName\n    runStatus\n  }\n`;\n","import {Button, Tooltip} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RESET_SCHEDULE_MUTATION, displayScheduleMutationErrors} from './ScheduleMutations';\nimport {useMutation} from '../apollo-client';\nimport {\n  ResetScheduleMutation,\n  ResetScheduleMutationVariables,\n} from './types/ScheduleMutations.types';\nimport {ScheduleFragment} from './types/ScheduleUtils.types';\nimport {DEFAULT_DISABLED_REASON, usePermissionsForLocation} from '../app/Permissions';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  schedule: ScheduleFragment;\n}\n\nexport const ScheduleResetButton = ({repoAddress, schedule}: Props) => {\n  const {\n    permissions: {canStartSchedule, canStopRunningSchedule},\n  } = usePermissionsForLocation(repoAddress.location);\n\n  const {name} = schedule;\n  const scheduleSelector = {\n    ...repoAddressToSelector(repoAddress),\n    scheduleName: name,\n  };\n\n  const [resetSchedule, {loading: toggleOnInFlight}] = useMutation<\n    ResetScheduleMutation,\n    ResetScheduleMutationVariables\n  >(RESET_SCHEDULE_MUTATION, {\n    onCompleted: displayScheduleMutationErrors,\n  });\n  const onClick = () => {\n    resetSchedule({variables: {scheduleSelector}});\n  };\n\n  const hasPermission = canStartSchedule && canStopRunningSchedule;\n  const disabled = toggleOnInFlight || !hasPermission;\n  const tooltipContent = hasPermission\n    ? `In code, a default status for \"${name}\" has been set to \"${schedule.defaultStatus}\". Click here to reset the schedule status to track the status set in code.`\n    : DEFAULT_DISABLED_REASON;\n\n  return (\n    <Tooltip\n      content={<div style={{maxWidth: '500px', wordBreak: 'break-word'}}>{tooltipContent}</div>}\n      display=\"flex\"\n    >\n      <Button disabled={disabled} onClick={onClick}>\n        Reset schedule status\n      </Button>\n    </Tooltip>\n  );\n};\n","import {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Mono,\n  NonIdealState,\n  NonIdealStateWrapper,\n  Popover,\n  Spinner,\n  Subheading,\n  Tag,\n  Tooltip,\n  useViewport,\n} from '@dagster-io/ui-components';\nimport {useCallback, useContext, useMemo, useRef, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {RunRequestTable} from './DryRunRequestTable';\nimport {RUN_REQUEST_FRAGMENT} from './RunRequestFragment';\nimport {gql, useMutation, useQuery} from '../apollo-client';\nimport {\n  GetScheduleQuery,\n  GetScheduleQueryVariables,\n  ScheduleDryRunMutation,\n  ScheduleDryRunMutationVariables,\n} from './types/EvaluateScheduleDialog.types';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {assertUnreachable} from '../app/Util';\nimport {useTrackEvent} from '../app/analytics';\nimport {TimeContext} from '../app/time/TimeContext';\nimport {timestampToString} from '../app/time/timestampToString';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment.types';\nimport {ScheduleSelector} from '../graphql/types';\nimport {useLaunchMultipleRunsWithTelemetry} from '../launchpad/useLaunchMultipleRunsWithTelemetry';\nimport {testId} from '../testing/testId';\nimport {buildExecutionParamsListSchedule} from '../util/buildExecutionParamsList';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nexport type ScheduleDryRunInstigationTick = Extract<\n  ScheduleDryRunMutation['scheduleDryRun'],\n  {__typename: 'DryRunInstigationTick'}\n>;\n\nconst locale = navigator.language;\n\ntype Props = {\n  repoAddress: RepoAddress;\n  name: string;\n  onClose: () => void;\n  isOpen: boolean;\n  jobName: string;\n};\n\nexport const EvaluateScheduleDialog = (props: Props) => {\n  return (\n    <Dialog\n      {...props}\n      style={{width: '70vw', display: 'flex'}}\n      title={\n        <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n          <Icon name=\"preview_tick\" />\n          <span>Preview tick result for {props.name}</span>\n        </Box>\n      }\n    >\n      <EvaluateSchedule {...props} />\n    </Dialog>\n  );\n};\n\nconst EvaluateSchedule = ({repoAddress, name, onClose, jobName}: Props) => {\n  const trackEvent = useTrackEvent();\n\n  const [selectedTimestamp, setSelectedTimestamp] = useState<{ts: number; label: string}>();\n  const scheduleSelector: ScheduleSelector = useMemo(\n    () => ({\n      repositoryLocationName: repoAddress.location,\n      repositoryName: repoAddress.name,\n      scheduleName: name,\n    }),\n    [repoAddress, name],\n  );\n\n  // query to get the schedule initially\n  const {data: getScheduleData} = useQuery<GetScheduleQuery, GetScheduleQueryVariables>(\n    GET_SCHEDULE_QUERY,\n    {\n      variables: {\n        scheduleSelector,\n      },\n    },\n  );\n\n  // mutation to evaluate the schedule\n  const [scheduleDryRunMutation, {loading: scheduleDryRunMutationLoading}] = useMutation<\n    ScheduleDryRunMutation,\n    ScheduleDryRunMutationVariables\n  >(SCHEDULE_DRY_RUN_MUTATION);\n\n  // mutation to launch all runs\n  const launchMultipleRunsWithTelemetry = useLaunchMultipleRunsWithTelemetry();\n\n  const {\n    timezone: [userTimezone],\n  } = useContext(TimeContext);\n  const [isTickSelectionOpen, setIsTickSelectionOpen] = useState<boolean>(false);\n  const selectedTimestampRef = useRef<{ts: number; label: string} | null>(null);\n  const {viewport, containerProps} = useViewport();\n  const [launching, setLaunching] = useState(false);\n\n  const [scheduleExecutionError, setScheduleExecutionError] = useState<PythonErrorFragment | null>(\n    null,\n  );\n  const [scheduleExecutionData, setScheduleExecutionData] =\n    useState<ScheduleDryRunInstigationTick | null>(null);\n\n  const canSubmitTest = useMemo(() => {\n    return getScheduleData && !scheduleDryRunMutationLoading;\n  }, [getScheduleData, scheduleDryRunMutationLoading]);\n\n  // handle clicking Evaluate button\n  const submitTest = useCallback(async () => {\n    if (!canSubmitTest) {\n      return;\n    }\n\n    const repositorySelector = repoAddressToSelector(repoAddress);\n\n    const result = await scheduleDryRunMutation({\n      variables: {\n        selectorData: {\n          ...repositorySelector,\n          scheduleName: name,\n        },\n        timestamp: selectedTimestampRef.current!.ts,\n      },\n    });\n\n    const data = result.data?.scheduleDryRun;\n\n    if (data) {\n      if (data?.__typename === 'DryRunInstigationTick') {\n        if (data.evaluationResult?.error) {\n          setScheduleExecutionError(data.evaluationResult.error);\n        } else {\n          setScheduleExecutionData(data);\n        }\n      } else if (data?.__typename === 'ScheduleNotFoundError') {\n        showCustomAlert({\n          title: 'Schedule not found',\n          body: `Could not find a schedule named: ${name}`,\n        });\n      } else {\n        setScheduleExecutionError(data);\n      }\n    } else {\n      assertUnreachable('scheduleDryRun Mutation returned no data??' as never);\n    }\n  }, [canSubmitTest, scheduleDryRunMutation, repoAddress, name]);\n\n  const executionParamsList = useMemo(\n    () =>\n      scheduleExecutionData && scheduleSelector\n        ? buildExecutionParamsListSchedule(scheduleExecutionData, scheduleSelector, jobName)\n        : [],\n    [scheduleSelector, scheduleExecutionData, jobName],\n  );\n\n  const canLaunchAll = useMemo(() => {\n    return executionParamsList != null && executionParamsList.length > 0;\n  }, [executionParamsList]);\n\n  // handle clicking Launch all button\n  const onLaunchAll = useCallback(async () => {\n    if (!canLaunchAll) {\n      return;\n    }\n\n    trackEvent('launch-all-schedule');\n    setLaunching(true);\n\n    try {\n      if (executionParamsList) {\n        await launchMultipleRunsWithTelemetry({executionParamsList}, 'toast');\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    setLaunching(false);\n    onClose();\n  }, [canLaunchAll, executionParamsList, launchMultipleRunsWithTelemetry, onClose, trackEvent]);\n\n  const content = useMemo(() => {\n    // launching all runs state\n    if (launching) {\n      return (\n        <Box flex={{direction: 'row', gap: 8, justifyContent: 'center', alignItems: 'center'}}>\n          <Spinner purpose=\"body-text\" />\n          <div>Launching runs</div>\n        </Box>\n      );\n    }\n\n    // initial loading state when schedule data hasn't been queried yet\n    if (!getScheduleData) {\n      return (\n        <Box padding={{vertical: 48}} flex={{alignItems: 'center', justifyContent: 'center'}}>\n          <Spinner purpose=\"page\" />\n        </Box>\n      );\n    }\n\n    // error states after getting schedule data\n    if (getScheduleData.scheduleOrError.__typename === 'PythonError') {\n      return <PythonErrorInfo error={getScheduleData.scheduleOrError} />;\n    }\n\n    if (getScheduleData.scheduleOrError.__typename === 'ScheduleNotFoundError') {\n      return (\n        <NonIdealState\n          icon=\"error\"\n          title=\"Schedule not found\"\n          description={`Could not find a schedule named: ${name}`}\n        />\n      );\n    }\n\n    // handle showing results page after clicking Evaluate\n    if (scheduleExecutionData || scheduleExecutionError) {\n      return (\n        <EvaluateScheduleResult\n          repoAddress={repoAddress}\n          name={name}\n          timestamp={selectedTimestampRef.current!.ts}\n          jobName={jobName}\n          scheduleExecutionData={scheduleExecutionData}\n          scheduleExecutionError={scheduleExecutionError}\n        />\n      );\n    }\n\n    // loading state for evaluating\n    if (scheduleDryRunMutationLoading) {\n      return (\n        <Box flex={{direction: 'row', gap: 8, justifyContent: 'center', alignItems: 'center'}}>\n          <Spinner purpose=\"body-text\" />\n          <div>Evaluating schedule</div>\n        </Box>\n      );\n    } else {\n      // tick selection page\n      const timestamps = getScheduleData.scheduleOrError.potentialTickTimestamps.map((ts) => ({\n        ts,\n        label: timestampToString({\n          timestamp: {unix: ts},\n          locale,\n          timezone: userTimezone,\n          timeFormat: {\n            showTimezone: true,\n          },\n        }),\n      }));\n      selectedTimestampRef.current = selectedTimestamp || timestamps[0] || null;\n      return (\n        <Box flex={{direction: 'column', gap: 8}}>\n          <ScheduleDescriptor>Select an evaluation time to simulate</ScheduleDescriptor>\n          <Popover\n            isOpen={isTickSelectionOpen}\n            position=\"bottom-left\"\n            fill={true}\n            content={\n              <Menu style={{maxHeight: '400px', overflow: 'scroll', width: `${viewport.width}px`}}>\n                {timestamps.map((timestamp) => (\n                  <MenuItem\n                    key={timestamp.ts}\n                    text={<div data-testid={testId(`tick-${timestamp.ts}`)}>{timestamp.label}</div>}\n                    onClick={() => {\n                      setSelectedTimestamp(timestamp);\n                      setIsTickSelectionOpen(false);\n                    }}\n                  />\n                ))}\n              </Menu>\n            }\n          >\n            <div {...containerProps}>\n              <Button\n                style={{flex: 1, width: '100%'}}\n                rightIcon={<Icon name=\"arrow_drop_down\" />}\n                onClick={() => setIsTickSelectionOpen((isOpen) => !isOpen)}\n                data-testid={testId('tick-selection')}\n              >\n                {selectedTimestampRef.current?.label}\n              </Button>\n            </div>\n          </Popover>\n          <div>\n            Each evaluation of a schedule is called a tick, which is an opportunity for one or more\n            runs to be launched. Ticks kick off runs, which either materialize a selection of assets\n            or execute a <a href=\"https://docs.dagster.io/concepts/ops-jobs-graphs/jobs\">job</a>.\n            You can preview the result for a given tick in the next step.\n          </div>\n          <div>\n            <a href=\"https://docs.dagster.io/concepts/automation/schedules\">Learn more</a> about\n            schedules\n          </div>\n        </Box>\n      );\n    }\n  }, [\n    launching,\n    getScheduleData,\n    scheduleExecutionData,\n    scheduleExecutionError,\n    scheduleDryRunMutationLoading,\n    repoAddress,\n    name,\n    jobName,\n    selectedTimestamp,\n    isTickSelectionOpen,\n    viewport.width,\n    containerProps,\n    userTimezone,\n  ]);\n\n  const leftButtons = useMemo(() => {\n    if (launching) {\n      return null;\n    }\n\n    if (scheduleExecutionData || scheduleExecutionError) {\n      return (\n        <Button\n          icon={<Icon name=\"settings_backup_restore\" />}\n          data-testid={testId('try-again')}\n          onClick={() => {\n            setScheduleExecutionData(null);\n            setScheduleExecutionError(null);\n          }}\n        >\n          Try again\n        </Button>\n      );\n    } else {\n      return null;\n    }\n  }, [launching, scheduleExecutionData, scheduleExecutionError]);\n\n  const rightButtons = useMemo(() => {\n    if (launching) {\n      return <Box flex={{direction: 'row', gap: 8}}></Box>;\n    }\n\n    if (scheduleExecutionData || scheduleExecutionError) {\n      const runRequests = scheduleExecutionData?.evaluationResult?.runRequests;\n      const numRunRequests = runRequests?.length || 0;\n      const didSkip = !scheduleExecutionError && numRunRequests === 0;\n\n      if (scheduleExecutionError || didSkip) {\n        return (\n          <Box flex={{direction: 'row', gap: 8}}>\n            <Button onClick={onClose}>Close</Button>\n          </Box>\n        );\n      } else {\n        return (\n          <Box flex={{direction: 'row', gap: 8}}>\n            <Button onClick={onClose}>Close</Button>\n            <Tooltip\n              canShow={!canLaunchAll || launching}\n              content=\"Launches all runs and commits tick result\"\n              placement=\"top-end\"\n            >\n              <Button\n                icon={<Icon name=\"check_filled\" />}\n                intent=\"primary\"\n                disabled={!canLaunchAll || launching}\n                onClick={onLaunchAll}\n                data-testid={testId('launch-all')}\n              >\n                <div>Launch all & commit tick result</div>\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }\n    }\n\n    if (scheduleDryRunMutationLoading) {\n      return (\n        <Box flex={{direction: 'row', gap: 8}}>\n          <Button onClick={onClose}>Close</Button>\n        </Box>\n      );\n    } else {\n      return (\n        <>\n          <Button onClick={onClose}>Close</Button>\n          <Button\n            data-testid={testId('continue')}\n            intent=\"primary\"\n            disabled={!canSubmitTest}\n            onClick={() => {\n              submitTest();\n            }}\n          >\n            Continue\n          </Button>\n        </>\n      );\n    }\n  }, [\n    canLaunchAll,\n    canSubmitTest,\n    launching,\n    onClose,\n    onLaunchAll,\n    scheduleExecutionData,\n    scheduleExecutionError,\n    submitTest,\n    scheduleDryRunMutationLoading,\n  ]);\n\n  return (\n    <>\n      <DialogBody>\n        <div style={{minHeight: '300px'}}>{content}</div>\n      </DialogBody>\n      <DialogFooter topBorder left={leftButtons}>\n        {rightButtons}\n      </DialogFooter>\n    </>\n  );\n};\n\nexport const GET_SCHEDULE_QUERY = gql`\n  query getSchedule(\n    $scheduleSelector: ScheduleSelector!\n    $startTimestamp: Float\n    $ticksAfter: Int\n    $ticksBefore: Int\n  ) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on PythonError {\n        message\n        stack\n      }\n      ... on Schedule {\n        id\n        name\n        potentialTickTimestamps(\n          startTimestamp: $startTimestamp\n          upperLimit: $ticksAfter\n          lowerLimit: $ticksBefore\n        )\n      }\n    }\n  }\n`;\n\n// FE for showing result of evaluating schedule (error, skipped, or success state)\nconst EvaluateScheduleResult = ({\n  repoAddress,\n  name,\n  timestamp,\n  jobName,\n  scheduleExecutionData,\n  scheduleExecutionError,\n}: {\n  repoAddress: RepoAddress;\n  name: string;\n  timestamp: number;\n  jobName: string;\n  scheduleExecutionData: ScheduleDryRunInstigationTick | null;\n  scheduleExecutionError: PythonErrorFragment | null;\n}) => {\n  const {\n    timezone: [userTimezone],\n  } = useContext(TimeContext);\n\n  const evaluationResult = scheduleExecutionData?.evaluationResult;\n\n  const innerContent = () => {\n    if (scheduleExecutionError) {\n      return <PythonErrorInfo error={scheduleExecutionError} />;\n    }\n\n    const data = scheduleExecutionData;\n\n    if (!data || !evaluationResult) {\n      return (\n        <NonIdealState\n          title=\"An unknown error occurred\"\n          description={\n            <span>\n              File an issue on{' '}\n              <a href=\"https://github.com/dagster-io/dagster\" target=\"_blank\" rel=\"noreferrer\">\n                Github\n              </a>{' '}\n              if you think this is a bug\n            </span>\n          }\n          icon=\"error\"\n        />\n      );\n    } else if (evaluationResult.error) {\n      return <PythonErrorInfo error={evaluationResult.error} />;\n    }\n    if (!evaluationResult.runRequests?.length) {\n      return (\n        <Box flex={{direction: 'column', gap: 8}}>\n          <Subheading style={{marginBottom: 8}}>Requested runs (0)</Subheading>\n          <div>\n            <SkipReasonNonIdealStateWrapper>\n              <NonIdealState\n                icon=\"missing\"\n                title=\"No runs requested\"\n                description={\n                  <>\n                    <span>\n                      The schedule function was successfully evaluated but didn&apos;t return any\n                      run requests.\n                    </span>\n                    <span>\n                      <br />\n                      Skip reason:{' '}\n                      {evaluationResult?.skipReason\n                        ? `\"${evaluationResult.skipReason}\"`\n                        : 'No skip reason was output'}\n                    </span>\n                  </>\n                }\n              />\n            </SkipReasonNonIdealStateWrapper>\n          </div>\n        </Box>\n      );\n    } else {\n      return (\n        <Box flex={{direction: 'column', gap: 8}}>\n          <Subheading>Requested runs ({numRunRequests})</Subheading>\n          <RunRequestTable\n            runRequests={evaluationResult.runRequests}\n            repoAddress={repoAddress}\n            isJob={true}\n            jobName={jobName}\n            name={name}\n          />\n        </Box>\n      );\n    }\n  };\n\n  const numRunRequests = evaluationResult?.runRequests?.length;\n  const error = scheduleExecutionError || evaluationResult?.error;\n\n  return (\n    <Box flex={{direction: 'column', gap: 8}}>\n      <Box>\n        <Grid>\n          <div>\n            <Subheading>Result</Subheading>\n            <Box flex={{grow: 1, alignItems: 'center'}}>\n              <div>\n                {error ? (\n                  <Tag intent=\"danger\">Failed</Tag>\n                ) : numRunRequests ? (\n                  <Tag intent=\"success\">{numRunRequests} run requests</Tag>\n                ) : (\n                  <Tag intent=\"warning\">Skipped</Tag>\n                )}\n              </div>\n            </Box>\n          </div>\n          <div>\n            <Subheading>Tick</Subheading>\n            <Box flex={{grow: 1, alignItems: 'center'}}>\n              <Mono>\n                {timestampToString({\n                  timestamp: {unix: timestamp},\n                  locale,\n                  timezone: userTimezone,\n                  timeFormat: {\n                    showTimezone: true,\n                  },\n                })}\n              </Mono>\n            </Box>\n          </div>\n        </Grid>\n      </Box>\n      {innerContent()}\n    </Box>\n  );\n};\n\nexport const SCHEDULE_DRY_RUN_MUTATION = gql`\n  mutation ScheduleDryRunMutation($selectorData: ScheduleSelector!, $timestamp: Float) {\n    scheduleDryRun(selectorData: $selectorData, timestamp: $timestamp) {\n      ...PythonErrorFragment\n      ... on DryRunInstigationTick {\n        timestamp\n        evaluationResult {\n          runRequests {\n            ...RunRequestFragment\n          }\n          skipReason\n          error {\n            ...PythonErrorFragment\n          }\n        }\n      }\n      ... on ScheduleNotFoundError {\n        scheduleName\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_REQUEST_FRAGMENT}\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding-bottom: 12px;\n  border-bottom: 1px solid ${Colors.keylineDefault()};\n  margin-bottom: 12px;\n  ${Subheading} {\n    padding-bottom: 4px;\n    display: block;\n  }\n  pre {\n    margin: 0;\n  }\n  button {\n    margin-top: 4px;\n  }\n`;\n\nconst ScheduleDescriptor = styled.div`\n  padding-bottom: 2px;\n`;\n\nconst SkipReasonNonIdealStateWrapper = styled.div`\n  ${NonIdealStateWrapper} {\n    margin: auto !important;\n    width: unset !important;\n    max-width: unset !important;\n  }\n`;\n","import {Box, Button, Icon} from '@dagster-io/ui-components';\nimport {useState} from 'react';\n\nimport {EvaluateScheduleDialog} from './EvaluateScheduleDialog';\nimport {RepoAddress} from '../workspace/types';\n\ninterface EvaluateTickButtonScheduleProps {\n  name: string;\n  repoAddress: RepoAddress;\n  jobName: string;\n}\n\nexport const EvaluateTickButtonSchedule = ({\n  name,\n  repoAddress,\n  jobName,\n}: EvaluateTickButtonScheduleProps) => {\n  const [showTestTickDialog, setShowTestTickDialog] = useState(false);\n\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n      <Button\n        icon={<Icon name=\"preview_tick\" />}\n        onClick={() => {\n          setShowTestTickDialog(true);\n        }}\n      >\n        Preview tick result\n      </Button>\n      <EvaluateScheduleDialog\n        isOpen={showTestTickDialog}\n        onClose={() => {\n          setShowTestTickDialog(false);\n        }}\n        name={name}\n        repoAddress={repoAddress}\n        jobName={jobName}\n      />\n    </Box>\n  );\n};\n","import {\n  Box,\n  Code,\n  Group,\n  MetadataTableWIP,\n  PageHeader,\n  Subtitle1,\n  Tag,\n} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport {ScheduleAlertDetails} from 'shared/schedules/ScheduleAlertDetails.oss';\nimport styled from 'styled-components';\n\nimport {SchedulePartitionStatus} from './SchedulePartitionStatus';\nimport {ScheduleResetButton} from './ScheduleResetButton';\nimport {ScheduleSwitch} from './ScheduleSwitch';\nimport {TimestampDisplay} from './TimestampDisplay';\nimport {humanCronString} from './humanCronString';\nimport {ScheduleFragment} from './types/ScheduleUtils.types';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {AutomationTargetList} from '../automation/AutomationTargetList';\nimport {AutomationAssetSelectionFragment} from '../automation/types/AutomationAssetSelectionFragment.types';\nimport {InstigationStatus} from '../graphql/types';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {EvaluateTickButtonSchedule} from '../ticks/EvaluateTickButtonSchedule';\nimport {TickStatusTag} from '../ticks/TickStatusTag';\nimport {RepoAddress} from '../workspace/types';\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: true};\n\nexport const ScheduleDetails = (props: {\n  schedule: ScheduleFragment;\n  repoAddress: RepoAddress;\n  refreshState: QueryRefreshState;\n  assetSelection: AutomationAssetSelectionFragment | null;\n}) => {\n  const {repoAddress, schedule, refreshState, assetSelection} = props;\n  const {cronSchedule, executionTimezone, futureTicks, name, partitionSet, pipelineName} = schedule;\n  const {scheduleState} = schedule;\n  const {status, ticks} = scheduleState;\n  const latestTick = ticks.length > 0 ? ticks[0] : null;\n  const running = status === InstigationStatus.RUNNING;\n\n  return (\n    <>\n      <PageHeader\n        title={\n          <Subtitle1 style={{display: 'flex', flexDirection: 'row', gap: 4}}>\n            <Link to=\"/automation\">Automation</Link>\n            <span>/</span>\n            {name}\n          </Subtitle1>\n        }\n        tags={\n          <Tag icon=\"schedule\">\n            Schedule in <RepositoryLink repoAddress={repoAddress} />\n          </Tag>\n        }\n        right={\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n            <QueryRefreshCountdown refreshState={refreshState} />\n            <EvaluateTickButtonSchedule\n              name={schedule.name}\n              repoAddress={repoAddress}\n              jobName={pipelineName}\n            />\n          </Box>\n        }\n      />\n      <MetadataTableWIP>\n        <tbody>\n          {schedule.description ? (\n            <tr>\n              <td>Description</td>\n              <td>{schedule.description}</td>\n            </tr>\n          ) : null}\n          <tr>\n            <td>Latest tick</td>\n            <td>\n              {latestTick ? (\n                <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                  <TimestampDisplay\n                    timestamp={latestTick.timestamp}\n                    timezone={executionTimezone}\n                    timeFormat={TIME_FORMAT}\n                  />\n                  <TickStatusTag tick={latestTick} tickResultType=\"runs\" />\n                </Group>\n              ) : (\n                'Schedule has never run'\n              )}\n            </td>\n          </tr>\n          {futureTicks.results[0] && running && (\n            <tr>\n              <td>Next tick</td>\n              <td>\n                <TimestampDisplay\n                  timestamp={futureTicks.results[0].timestamp!}\n                  timezone={executionTimezone}\n                  timeFormat={TIME_FORMAT}\n                />\n              </td>\n            </tr>\n          )}\n          {schedule.pipelineName || assetSelection ? (\n            <tr>\n              <td>Target</td>\n              <TargetCell>\n                <AutomationTargetList\n                  targets={schedule.pipelineName ? [{pipelineName: schedule.pipelineName}] : null}\n                  repoAddress={repoAddress}\n                  assetSelection={assetSelection || null}\n                  automationType=\"schedule\"\n                />\n              </TargetCell>\n            </tr>\n          ) : null}\n          <tr>\n            <td>\n              <Box flex={{alignItems: 'center'}} style={{height: '32px'}}>\n                Running\n              </Box>\n            </td>\n            <td>\n              <Box\n                flex={{direction: 'row', gap: 12, alignItems: 'center'}}\n                style={{height: '32px'}}\n              >\n                <ScheduleSwitch repoAddress={repoAddress} schedule={schedule} />\n                {schedule.canReset && (\n                  <ScheduleResetButton repoAddress={repoAddress} schedule={schedule} />\n                )}\n              </Box>\n            </td>\n          </tr>\n          <tr>\n            <td>Partition set</td>\n            <td>\n              {partitionSet ? (\n                <SchedulePartitionStatus schedule={schedule} repoAddress={repoAddress} />\n              ) : (\n                'None'\n              )}\n            </td>\n          </tr>\n          <tr>\n            <td>Schedule</td>\n            <td>\n              {cronSchedule ? (\n                <Group direction=\"row\" spacing={8}>\n                  <span>\n                    {humanCronString(cronSchedule, {\n                      longTimezoneName: executionTimezone || 'UTC',\n                    })}\n                  </span>\n                  <Code>({cronSchedule})</Code>\n                </Group>\n              ) : (\n                <div>&mdash;</div>\n              )}\n            </td>\n          </tr>\n          {executionTimezone ? (\n            <tr>\n              <td>Execution timezone</td>\n              <td>{executionTimezone}</td>\n            </tr>\n          ) : null}\n          <ScheduleAlertDetails repoAddress={repoAddress} scheduleName={name} />\n        </tbody>\n      </MetadataTableWIP>\n    </>\n  );\n};\n\nconst TargetCell = styled.td`\n  button {\n    line-height: 20px;\n  }\n`;\n","import {gql} from '../apollo-client';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\n\nexport const SCHEDULE_FRAGMENT = gql`\n  fragment ScheduleFragment on Schedule {\n    id\n    name\n    cronSchedule\n    executionTimezone\n    pipelineName\n    solidSelection\n    mode\n    description\n    partitionSet {\n      id\n      name\n    }\n    defaultStatus\n    canReset\n    scheduleState {\n      id\n      ...InstigationStateFragment\n    }\n    futureTicks(limit: 5) {\n      results {\n        timestamp\n      }\n    }\n  }\n\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import {Page, Tab, Tabs} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {SCHEDULE_ASSET_SELECTIONS_QUERY} from './ScheduleAssetSelectionsQuery';\nimport {ScheduleDetails} from './ScheduleDetails';\nimport {SCHEDULE_FRAGMENT} from './ScheduleUtils';\nimport {SchedulerInfo} from './SchedulerInfo';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  ScheduleAssetSelectionQuery,\n  ScheduleAssetSelectionQueryVariables,\n} from './types/ScheduleAssetSelectionsQuery.types';\nimport {ScheduleRootQuery, ScheduleRootQueryVariables} from './types/ScheduleRoot.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {FIFTEEN_SECONDS, useMergedRefresh, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {RunsFilter} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {TicksTable} from '../instigation/TickHistory';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunsFeedTableWithFilters} from '../runs/RunsFeedTable';\nimport {Loading} from '../ui/Loading';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const ScheduleRoot = (props: Props) => {\n  useTrackPageView();\n\n  const {repoAddress} = props;\n  const {scheduleName} = useParams<{scheduleName: string}>();\n\n  useDocumentTitle(`Schedule: ${scheduleName}`);\n\n  const scheduleSelector = {\n    ...repoAddressToSelector(repoAddress),\n    scheduleName,\n  };\n\n  const [selectedTab, setSelectedTab] = React.useState<string>('ticks');\n\n  const queryResult = useQuery<ScheduleRootQuery, ScheduleRootQueryVariables>(SCHEDULE_ROOT_QUERY, {\n    variables: {\n      scheduleSelector,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const selectionQueryResult = useQuery<\n    ScheduleAssetSelectionQuery,\n    ScheduleAssetSelectionQueryVariables\n  >(SCHEDULE_ASSET_SELECTIONS_QUERY, {\n    variables: {scheduleSelector},\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const refreshState1 = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const refreshState2 = useQueryRefreshAtInterval(selectionQueryResult, FIFTEEN_SECONDS);\n  const refreshState = useMergedRefresh(refreshState1, refreshState2);\n\n  const tabs = (\n    <Tabs selectedTabId={selectedTab} onChange={setSelectedTab}>\n      <Tab id=\"ticks\" title=\"Tick history\" />\n      <Tab id=\"runs\" title=\"Run history\" />\n    </Tabs>\n  );\n\n  const assetSelection =\n    selectionQueryResult.data?.scheduleOrError.__typename === 'Schedule'\n      ? selectionQueryResult.data.scheduleOrError.assetSelection\n      : null;\n\n  const runsFilter: RunsFilter = React.useMemo(\n    () => ({\n      tags: [\n        {key: DagsterTag.ScheduleName, value: scheduleName},\n        {key: DagsterTag.RepositoryLabelTag, value: repoAddressAsTag(repoAddress)},\n      ],\n    }),\n    [repoAddress, scheduleName],\n  );\n\n  return (\n    <Loading queryResult={queryResult} allowStaleData={true}>\n      {({scheduleOrError, instance}) => {\n        if (scheduleOrError.__typename !== 'Schedule') {\n          return null;\n        }\n\n        const showDaemonWarning = !instance.daemonHealth.daemonStatus.healthy;\n\n        return (\n          <Page>\n            <ScheduleDetails\n              repoAddress={repoAddress}\n              schedule={scheduleOrError}\n              refreshState={refreshState}\n              assetSelection={assetSelection}\n            />\n            {showDaemonWarning ? (\n              <SchedulerInfo\n                daemonHealth={instance.daemonHealth}\n                padding={{vertical: 16, horizontal: 24}}\n              />\n            ) : null}\n            {selectedTab === 'ticks' ? (\n              <TicksTable\n                tabs={tabs}\n                tickResultType=\"runs\"\n                repoAddress={repoAddress}\n                name={scheduleOrError.name}\n              />\n            ) : (\n              <RunsFeedTableWithFilters\n                filter={runsFilter}\n                actionBarComponents={tabs}\n                includeRunsFromBackfills={true}\n              />\n            )}\n          </Page>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst SCHEDULE_ROOT_QUERY = gql`\n  query ScheduleRootQuery($scheduleSelector: ScheduleSelector!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        ...ScheduleFragment\n      }\n      ... on ScheduleNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n    instance {\n      id\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"SCHEDULER\") {\n          id\n          healthy\n        }\n      }\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${SCHEDULE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Box, MainContent, NonIdealState, SpinnerWithText} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\nimport {Redirect, Switch, useParams} from 'react-router-dom';\n\nimport {GraphRoot} from './GraphRoot';\nimport {WorkspaceContext} from './WorkspaceContext/WorkspaceContext';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {repoAddressFromPath} from './repoAddressFromPath';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {Route} from '../app/Route';\nimport {AssetGroupRoot} from '../assets/AssetGroupRoot';\nimport {CodeLocationDefinitionsRoot} from '../code-location/CodeLocationDefinitionsRoot';\nimport {CodeLocationDocsRoot} from '../code-location/CodeLocationDocsRoot';\nimport CodeLocationOverviewRoot from '../code-location/CodeLocationOverviewRoot';\nimport {PipelineRoot} from '../pipelines/PipelineRoot';\nimport {ResourceRoot} from '../resources/ResourceRoot';\nimport {ScheduleRoot} from '../schedules/ScheduleRoot';\nimport {SensorRoot} from '../sensors/SensorRoot';\n\nconst RepoRouteContainer = () => {\n  const {repoPath} = useParams<{repoPath: string}>();\n  const workspaceState = useContext(WorkspaceContext);\n  const addressForPath = repoAddressFromPath(repoPath);\n\n  const {loading} = workspaceState;\n\n  // A RepoAddress could not be created for this path, which means it's invalid.\n  if (!addressForPath) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"Invalid code location path\"\n          description={\n            <div>\n              <div>\n                <strong>{repoPath}</strong>\n              </div>\n              {'  is not a valid code location path.'}\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  const matchingRepo = workspaceState.allRepos.find(\n    (repo) =>\n      repo.repository.name === addressForPath.name &&\n      repo.repositoryLocation.name === addressForPath.location,\n  );\n\n  // If we don't have any active code locations, or if our active repo does not match\n  // the repo path in the URL, it means we aren't able to load this repo.\n  if (!matchingRepo) {\n    if (loading) {\n      return (\n        <Box padding={{vertical: 64}} flex={{direction: 'row', justifyContent: 'center'}}>\n          <SpinnerWithText label={`Loading ${repoAddressAsHumanString(addressForPath)}…`} />\n        </Box>\n      );\n    }\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/locations/:repoPath/graphs/(/?.*)\">\n        <GraphRoot repoAddress={addressForPath} />\n      </Route>\n      <Route\n        path={[\n          '/locations/:repoPath/pipelines/(/?.*)',\n          '/locations/:repoPath/jobs/(/?.*)',\n          '/locations/:repoPath/pipeline_or_job/(/?.*)',\n        ]}\n      >\n        <PipelineRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/schedules/:scheduleName/:runTab?\">\n        <ScheduleRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/sensors/:sensorName\">\n        <SensorRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/resources/:resourceName\">\n        <ResourceRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path={['/locations/:repoPath/asset-groups/:groupName/list(/?.*)']}>\n        <AssetGroupRoot repoAddress={addressForPath} tab=\"list\" />\n      </Route>\n      <Route\n        path={[\n          '/locations/:repoPath/asset-groups/:groupName/(/?.*)',\n          '/locations/:repoPath/asset-groups/:groupName',\n        ]}\n      >\n        <AssetGroupRoot repoAddress={addressForPath} tab=\"lineage\" />\n      </Route>\n      <Route path=\"/locations/:repoPath\" exact>\n        <CodeLocationOverviewRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/definitions\" exact>\n        <Redirect to={workspacePathFromAddress(addressForPath, '/assets')} />\n      </Route>\n      <Route path=\"/locations/:repoPath/docs\" exact>\n        <CodeLocationDocsRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/docs/packages/:packageName?/:componentName?\">\n        <CodeLocationDocsRoot repoAddress={addressForPath} />\n      </Route>\n      {/* Avoid trying to render a definitions route if there is no actual repo available. */}\n      {matchingRepo ? (\n        <Route\n          path={[\n            '/locations/:repoPath/assets',\n            '/locations/:repoPath/jobs',\n            '/locations/:repoPath/resources',\n            '/locations/:repoPath/schedules',\n            '/locations/:repoPath/sensors',\n            '/locations/:repoPath/graphs',\n            '/locations/:repoPath/ops/:name?',\n          ]}\n          exact\n        >\n          <CodeLocationDefinitionsRoot\n            repoAddress={addressForPath}\n            repository={matchingRepo.repository}\n          />\n        </Route>\n      ) : null}\n      <Route path={['/locations/:repoPath/*', '/locations/:repoPath/']}>\n        <Redirect to={workspacePathFromAddress(addressForPath, '/assets')} />\n      </Route>\n    </Switch>\n  );\n};\n\nexport const WorkspaceRoot = () => {\n  return (\n    <MainContent>\n      <Switch>\n        <Route path=\"/locations/:repoPath\">\n          <RepoRouteContainer />\n        </Route>\n      </Switch>\n    </MainContent>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default WorkspaceRoot;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchOuter\":\"PackageTree_searchOuter__Rjz7E\",\"searchContainer\":\"PackageTree_searchContainer__KxZc_\",\"icon\":\"PackageTree_icon__hR7Xz\",\"search\":\"PackageTree_search__K73yH\",\"treeContainer\":\"PackageTree_treeContainer__sXDC1\",\"loading\":\"PackageTree_loading__lVul6\",\"pkgItem\":\"PackageTree_pkgItem__M3mLe\",\"expandButton\":\"PackageTree_expandButton__KnD3r\",\"chevron\":\"PackageTree_chevron__XMY7L\",\"expanded\":\"PackageTree_expanded___PEO3\",\"pkgLink\":\"PackageTree_pkgLink___esh8\",\"selected\":\"PackageTree_selected__H_AKG\",\"componentList\":\"PackageTree_componentList__dDioC\",\"componentLink\":\"PackageTree_componentLink__N9Dmt\",\"componentName\":\"PackageTree_componentName__3CMdU\"};","import React, {useEffect, useState} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {explodeCompositesInHandleGraph} from './CompositeSupport';\nimport {\n  GRAPH_EXPLORER_ASSET_NODE_FRAGMENT,\n  GRAPH_EXPLORER_FRAGMENT,\n  GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT,\n  GraphExplorer,\n  GraphExplorerOptions,\n} from './GraphExplorer';\nimport {NonIdealPipelineQueryResult} from './NonIdealPipelineQueryResult';\nimport {ExplorerPath, explorerPathFromString, explorerPathToString} from './PipelinePathUtils';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  PipelineExplorerRootQuery,\n  PipelineExplorerRootQueryVariables,\n} from './types/PipelineExplorerRoot.oss.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useTrackPageView} from '../app/analytics';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphViewType} from '../asset-graph/Utils';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useOpenInNewTab} from '../hooks/useOpenInNewTab';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntryFragment';\nimport {Loading} from '../ui/Loading';\nimport {buildPipelineSelector, useJob} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\nexport const PipelineExplorerSnapshotRoot = () => {\n  useTrackPageView();\n\n  const params = useParams();\n  const explorerPath = explorerPathFromString((params as any)['0']);\n  const {pipelineName, snapshotId} = explorerPath;\n  const history = useHistory();\n\n  const openInNewTab = useOpenInNewTab();\n  useDocumentTitle(`Snapshot: ${pipelineName}${snapshotId ? `@${snapshotId.slice(0, 8)}` : ''}`);\n\n  return (\n    <PipelineExplorerContainer\n      explorerPath={explorerPath}\n      onChangeExplorerPath={(path, mode) => {\n        history[mode](`/snapshots/${explorerPathToString(path)}`);\n      }}\n      onNavigateToSourceAssetNode={(e, {assetKey}) => {\n        const path = assetDetailsPathForKey(assetKey);\n        if (e.metaKey) {\n          openInNewTab(path);\n        } else {\n          history.push(assetDetailsPathForKey(assetKey));\n        }\n      }}\n    />\n  );\n};\n\nexport const PipelineExplorerContainer = (props: {\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  onNavigateToSourceAssetNode: (\n    e: Pick<React.MouseEvent<any>, 'metaKey'>,\n    node: AssetLocation,\n  ) => void;\n  repoAddress?: RepoAddress;\n  isGraph?: boolean;\n}) => {\n  const {explorerPath, repoAddress} = props;\n  const job = useJob(repoAddress, explorerPath.pipelineName);\n  const [options, setOptions] = useState<GraphExplorerOptions>({\n    explodeComposites: explorerPath.explodeComposites ?? false,\n    preferAssetRendering: true,\n  });\n  const isExternal = !!job && job.externalJobSource !== null;\n  useEffect(() => {\n    if (isExternal !== options.isExternal) {\n      setOptions({...options, isExternal});\n    }\n    return () => {};\n  }, [isExternal, options]);\n  if (job && job.isAssetJob && options.preferAssetRendering) {\n    const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n    return (\n      <AssetGraphExplorer\n        key={explorerPath.pipelineName}\n        options={options}\n        setOptions={setOptions}\n        fetchOptions={{pipelineSelector}}\n        explorerPath={explorerPath}\n        onChangeExplorerPath={props.onChangeExplorerPath}\n        onNavigateToSourceAssetNode={props.onNavigateToSourceAssetNode}\n        viewType={AssetGraphViewType.JOB}\n      />\n    );\n  }\n\n  return <PipelineOpGraphExplorer {...props} options={options} setOptions={setOptions} />;\n};\n\nconst PipelineOpGraphExplorer = ({\n  explorerPath,\n  repoAddress,\n  onChangeExplorerPath,\n  onNavigateToSourceAssetNode,\n  isGraph = false,\n  options,\n  setOptions,\n}: {\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  onNavigateToSourceAssetNode: (\n    e: Pick<React.MouseEvent<any>, 'metaKey'>,\n    node: AssetLocation,\n  ) => void;\n  repoAddress?: RepoAddress;\n  isGraph?: boolean;\n  options: GraphExplorerOptions;\n  setOptions: React.Dispatch<React.SetStateAction<GraphExplorerOptions>>;\n}) => {\n  const parentNames = explorerPath.opNames.slice(0, explorerPath.opNames.length - 1);\n  const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n\n  const pipelineResult = useQuery<PipelineExplorerRootQuery, PipelineExplorerRootQueryVariables>(\n    PIPELINE_EXPLORER_ROOT_QUERY,\n    {\n      variables: {\n        snapshotPipelineSelector: explorerPath.snapshotId ? undefined : pipelineSelector,\n        snapshotId: explorerPath.snapshotId ? explorerPath.snapshotId : undefined,\n        rootHandleID: parentNames.join('.'),\n        requestScopeHandleID: options.explodeComposites ? undefined : parentNames.join('.'),\n      },\n    },\n  );\n\n  return (\n    <Loading<PipelineExplorerRootQuery> queryResult={pipelineResult}>\n      {({pipelineSnapshotOrError: result}) => {\n        if (result.__typename !== 'PipelineSnapshot') {\n          return (\n            <NonIdealPipelineQueryResult\n              isGraph={isGraph}\n              result={result}\n              repoAddress={repoAddress}\n            />\n          );\n        }\n\n        const parentHandle = result.solidHandle;\n        const displayedHandles = options.explodeComposites\n          ? explodeCompositesInHandleGraph(result.solidHandles)\n          : result.solidHandles;\n        const assetNodesPresent = result.solidHandles.some(\n          (h) => h.solid.definition.assetNodes.length > 0,\n        );\n        if (options.preferAssetRendering && assetNodesPresent) {\n          return (\n            <AssetGraphExplorer\n              options={options}\n              setOptions={setOptions}\n              fetchOptions={{pipelineSelector}}\n              explorerPath={explorerPath}\n              onChangeExplorerPath={onChangeExplorerPath}\n              onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n              viewType={AssetGraphViewType.JOB}\n            />\n          );\n        }\n\n        return (\n          <GraphExplorer\n            options={options}\n            setOptions={setOptions}\n            explorerPath={explorerPath}\n            onChangeExplorerPath={onChangeExplorerPath}\n            container={result}\n            repoAddress={repoAddress}\n            handles={displayedHandles}\n            parentHandle={parentHandle ? parentHandle : undefined}\n            isGraph={isGraph}\n            getInvocations={(definitionName) =>\n              displayedHandles\n                .filter((s) => s.solid.definition.name === definitionName)\n                .map((s) => ({handleID: s.handleID}))\n            }\n          />\n        );\n      }}\n    </Loading>\n  );\n};\n\nexport const PIPELINE_EXPLORER_ROOT_QUERY = gql`\n  query PipelineExplorerRootQuery(\n    $snapshotPipelineSelector: PipelineSelector\n    $snapshotId: String\n    $rootHandleID: String!\n    $requestScopeHandleID: String\n  ) {\n    pipelineSnapshotOrError(\n      snapshotId: $snapshotId\n      activePipelineSelector: $snapshotPipelineSelector\n    ) {\n      ... on PipelineSnapshot {\n        id\n        name\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n        solidHandle(handleID: $rootHandleID) {\n          ...GraphExplorerSolidHandleFragment\n        }\n        solidHandles(parentHandleID: $requestScopeHandleID) {\n          handleID\n          solid {\n            name\n            definition {\n              assetNodes {\n                id\n                ...GraphExplorerAssetNodeFragment\n              }\n            }\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n        ...GraphExplorerFragment\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PipelineSnapshotNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n  ${GRAPH_EXPLORER_FRAGMENT}\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${GRAPH_EXPLORER_ASSET_NODE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ComponentScaffolding_container__OrcqX\",\"commandContainer\":\"ComponentScaffolding_commandContainer__VX0gJ\",\"buttonContainer\":\"ComponentScaffolding_buttonContainer__2dRGl\"};","import {\n  Box,\n  Button,\n  ButtonLink,\n  CaptionMono,\n  Colors,\n  FontFamily,\n  Icon,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n  UnstyledButton,\n} from '@dagster-io/ui-components';\nimport {useCallback, useMemo, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext/WorkspaceContext';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {\n  LocationStatusEntryFragment,\n  WorkspaceDisplayMetadataFragment,\n} from './WorkspaceContext/types/WorkspaceQueries.types';\n\nexport const ImageName = ({metadata}: {metadata: WorkspaceDisplayMetadataFragment[]}) => {\n  const copy = useCopyToClipboard();\n  const [didCopy, setDidCopy] = useState(false);\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = useCallback(async () => {\n    copy(value);\n    setDidCopy(true);\n    const timer = setTimeout(() => {\n      setDidCopy(false);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox>\n        <span style={{fontWeight: 500}}>image: </span>\n        <span style={{marginRight: '4px'}}>\n          <CaptionMono>{imageKV.value}</CaptionMono>\n        </span>\n        <Tooltip content={didCopy ? 'Copied!' : 'Click to copy image string'} placement=\"top\">\n          <UnstyledButton onClick={onClick}>\n            <Icon name={didCopy ? 'done' : 'copy'} size={12} />\n          </UnstyledButton>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.textLight()};\n  font-size: 12px;\n\n  .bp5-popover-target {\n    display: inline;\n    overflow: hidden;\n    position: relative;\n    top: 1px;\n  }\n`;\n\nexport const ModuleOrPackageOrFile = ({\n  metadata,\n}: {\n  metadata: WorkspaceDisplayMetadataFragment[];\n}) => {\n  const imageKV = metadata.find(\n    ({key}) => key === 'module_name' || key === 'package_name' || key === 'python_file',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.textLight(), fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <div style={MetadataValueButtonStyle}>\n          <MiddleTruncate text={imageKV.value} />\n        </div>\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport const LocationStatus = (props: {\n  locationStatus: LocationStatusEntryFragment | null;\n  locationOrError: WorkspaceRepositoryLocationNode | null;\n}) => {\n  const {locationStatus, locationOrError} = props;\n  const [showDialog, setShowDialog] = useState(false);\n\n  const reloadFn = useMemo(\n    () => buildReloadFnForLocation(locationStatus?.name || ''),\n    [locationStatus?.name],\n  );\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationStatus?.loadStatus === 'LOADING') {\n    return (\n      <Tag minimal intent=\"primary\">\n        Updating…\n      </Tag>\n    );\n  }\n\n  if (locationOrError?.versionKey !== locationStatus?.versionKey) {\n    return (\n      <Tag minimal intent=\"primary\">\n        Loading…\n      </Tag>\n    );\n  }\n\n  if (locationStatus && locationOrError?.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '12px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={locationStatus.name}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nexport const ReloadButton = ({location}: {location: string}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"code_location_reload\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n\nconst MetadataValueButtonStyle = {\n  width: '100%',\n  display: 'block',\n  fontFamily: FontFamily.monospace,\n  fontSize: '12px',\n  color: Colors.textLight(),\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"CodeLocationDocsPackageTree_link__bf3EM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CopyButton_button__FudcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ComponentHeader_container__JKqkl\",\"heading\":\"ComponentHeader_heading__JBvO1\",\"icon\":\"ComponentHeader_icon___9SeD\",\"headingContent\":\"ComponentHeader_headingContent__GRXA_\",\"description\":\"ComponentHeader_description__ciNaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionHeader\":\"ComponentDetails_sectionHeader__9tkjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"CodeLocationDocsRoot_contentContainer__KyP2M\",\"sidebar\":\"CodeLocationDocsRoot_sidebar__b1D1D\",\"main\":\"CodeLocationDocsRoot_main__K4gfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"ArrayTag_tag__1xQK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"ComponentPageContents_outer___lMOD\",\"container\":\"ComponentPageContents_container__XWpLQ\",\"main\":\"ComponentPageContents_main__w_slE\",\"tableOfContents\":\"ComponentPageContents_tableOfContents__o3F1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageName\":\"CodeLocationOverviewRoot_imageName__Xqm7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ComponentTags_tags__h3vCZ\",\"tag\":\"ComponentTags_tag__YugkU\",\"authorTag\":\"ComponentTags_authorTag__xtZui\"};","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  Table,\n} from '@dagster-io/ui-components';\nimport {StyledRawCodeMirror} from '@dagster-io/ui-components/editor';\nimport {useMemo, useState} from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext/WorkspaceContext';\n\nexport const CodeLocationMenu = ({\n  locationNode,\n}: {\n  locationNode: WorkspaceRepositoryLocationNode;\n}) => {\n  const [configIsOpen, setConfigIsOpen] = useState(false);\n  const [libsIsOpen, setLibsIsOpen] = useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog = ({\n  isOpen,\n  setIsOpen,\n  metadata,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog = ({\n  isOpen,\n  setIsOpen,\n  libraries,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Library</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig = ({\n  displayMetadata,\n}: {\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  const yamlString = useMemo(() => {\n    const kvPairs = displayMetadata.reduce(\n      (accum, item) => {\n        accum[item.key] = item.value;\n        return accum;\n      },\n      {} as Record<string, string>,\n    );\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledRawCodeMirror\n      value={yamlString}\n      options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {Box, Icon, NonIdealState} from '@dagster-io/ui-components';\n\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {\n  isThisThingAnAssetJob,\n  isThisThingAnExternalJob,\n  useRepository,\n} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface EmptyStateProps {\n  repoAddress: RepoAddress | null;\n  jobName: string;\n  jobPath: string;\n  anyFilter: boolean;\n}\n\nexport const PipelineRunsEmptyState = (props: EmptyStateProps) => {\n  const {repoAddress, anyFilter, jobName, jobPath} = props;\n\n  const repo = useRepository(repoAddress);\n  const isAssetJob = isThisThingAnAssetJob(repo, jobName);\n  const isExternalJob = isThisThingAnExternalJob(repo, jobName);\n\n  const description = () => {\n    if (!repoAddress) {\n      return <div>You have not launched any runs for this job.</div>;\n    }\n\n    if (isExternalJob) {\n      return (\n        <div>\n          {anyFilter\n            ? 'There are no matching runs for these filters.'\n            : 'You have not launched any runs for this external job.'}\n        </div>\n      );\n    }\n\n    if (isAssetJob) {\n      return (\n        <Box flex={{direction: 'column', gap: 12}}>\n          <div>\n            {anyFilter\n              ? 'There are no matching runs for these filters.'\n              : 'You have not materialized any assets with this job yet.'}\n          </div>\n          <div>\n            <AnchorButton\n              icon={<Icon name=\"materialization\" />}\n              to={workspacePathFromAddress(repoAddress, `/jobs/${jobPath}`)}\n            >\n              Materialize an asset\n            </AnchorButton>\n          </div>\n        </Box>\n      );\n    }\n\n    return (\n      <Box flex={{direction: 'column', gap: 12}}>\n        <div>\n          {anyFilter\n            ? 'There are no matching runs for these filters.'\n            : 'You have not launched any runs for this job yet.'}\n        </div>\n        <div>\n          <AnchorButton\n            icon={<Icon name=\"add_circle\" />}\n            to={workspacePathFromAddress(repoAddress, `/jobs/${jobPath}/playground`)}\n          >\n            Launch a run\n          </AnchorButton>\n        </div>\n      </Box>\n    );\n  };\n\n  return (\n    <Box padding={{vertical: 64}}>\n      <NonIdealState icon=\"run\" title=\"No runs found\" description={description()} />\n    </Box>\n  );\n};\n","import {Box, ButtonLink, Tag, TokenizingFieldValue, tokenToString} from '@dagster-io/ui-components';\nimport {useCallback, useMemo} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {explorerPathFromString} from './PipelinePathUtils';\nimport {PipelineRunsEmptyState} from './PipelineRunsEmptyState';\nimport {useJobTitle} from './useJobTitle';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {RunsFeedView, RunsFilter} from '../graphql/types';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunsQueryRefetchContext} from '../runs/RunUtils';\nimport {RunsFeedError} from '../runs/RunsFeedError';\nimport {RunsFeedTable} from '../runs/RunsFeedTable';\nimport {\n  RunFilterToken,\n  RunFilterTokenType,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  useRunsFilterInput,\n} from '../runs/RunsFilterInput';\nimport {useRunsFeedEntries} from '../runs/useRunsFeedEntries';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nconst ENABLED_FILTERS: RunFilterTokenType[] = [\n  'status',\n  'tag',\n  'id',\n  'created_date_before',\n  'created_date_after',\n];\n\nexport const PipelineRunsFeedRoot = (props: {repoAddress?: RepoAddress}) => {\n  useTrackPageView();\n\n  const {pipelinePath} = useParams<{pipelinePath: string}>();\n  const {repoAddress = null} = props;\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName, snapshotId} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters(ENABLED_FILTERS);\n\n  const permanentTokens = useMemo(() => {\n    return [\n      isJob ? {token: 'job', value: pipelineName} : {token: 'pipeline', value: pipelineName},\n      snapshotId ? {token: 'snapshotId', value: snapshotId} : null,\n    ].filter(Boolean) as TokenizingFieldValue[];\n  }, [isJob, pipelineName, snapshotId]);\n\n  const runsFilter: RunsFilter = useMemo(() => {\n    const allTokens = [...filterTokens, ...permanentTokens];\n    if (repoAddress) {\n      const repoToken = {\n        token: 'tag',\n        value: `${DagsterTag.RepositoryLabelTag}=${repoAddressAsTag(repoAddress)}`,\n      };\n      allTokens.push(repoToken);\n    }\n    return {...runsFilterForSearchTokens(allTokens), pipelineName, snapshotId};\n  }, [filterTokens, permanentTokens, pipelineName, repoAddress, snapshotId]);\n\n  const onAddTag = useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!filterTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokens([...filterTokens, token]);\n      }\n    },\n    [filterTokens, setFilterTokens],\n  );\n\n  const {entries, paginationProps, queryResult} = useRunsFeedEntries({\n    filter: runsFilter,\n    skip: false,\n    view: RunsFeedView.RUNS,\n  });\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const {button, activeFiltersJsx} = useRunsFilterInput({\n    enabledFilters: ENABLED_FILTERS,\n    tokens: filterTokens,\n    onChange: setFilterTokens,\n    loading: queryResult.loading,\n  });\n\n  const actionBarComponents = (\n    <Box\n      flex={{direction: 'row', gap: 8, alignItems: 'center'}}\n      style={{width: '100%'}}\n      padding={{right: 16}}\n    >\n      {button}\n      <div style={{flex: 1}} />\n      <QueryRefreshCountdown refreshState={refreshState} />\n    </Box>\n  );\n\n  const belowActionBarComponents = (\n    <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n      {permanentTokens.map(({token, value}) => (\n        <Tag key={token}>{`${token}:${value}`}</Tag>\n      ))}\n      {activeFiltersJsx}\n      {activeFiltersJsx.length > 0 && (\n        <ButtonLink onClick={() => setFilterTokens([])}>Clear all</ButtonLink>\n      )}\n    </Box>\n  );\n\n  function content() {\n    if (queryResult.error) {\n      return <RunsFeedError error={queryResult.error} />;\n    }\n\n    return (\n      <div style={{minHeight: 0}}>\n        <RunsFeedTable\n          entries={entries}\n          loading={queryResult.loading}\n          onAddTag={onAddTag}\n          refetch={refreshState.refetch}\n          actionBarComponents={actionBarComponents}\n          belowActionBarComponents={belowActionBarComponents}\n          paginationProps={paginationProps}\n          filter={runsFilter}\n          emptyState={() => (\n            <PipelineRunsEmptyState\n              repoAddress={repoAddress}\n              anyFilter={filterTokens.length > 0}\n              jobName={pipelineName}\n              jobPath={pipelinePath}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <RunsQueryRefetchContext.Provider value={{refetch: refreshState.refetch}}>\n      {content()}\n    </RunsQueryRefetchContext.Provider>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"schemaContainer\":\"ComponentSchema_schemaContainer__6rYYb\",\"schemaTitle\":\"ComponentSchema_schemaTitle__hWZJk\",\"propertyContainer\":\"ComponentSchema_propertyContainer__Vntq5\",\"chevronContainer\":\"ComponentSchema_chevronContainer__MvSIz\",\"expandButton\":\"ComponentSchema_expandButton__aWQDj\",\"expanded\":\"ComponentSchema_expanded__b68L0\",\"chevron\":\"ComponentSchema_chevron__xbSbs\",\"expansionContainer\":\"ComponentSchema_expansionContainer__VdcFC\",\"property\":\"ComponentSchema_property__N6_2_\",\"propertyNameAndTypes\":\"ComponentSchema_propertyNameAndTypes__dkdx6\",\"propertyName\":\"ComponentSchema_propertyName__GOlu_\",\"propertyDescriptionContainer\":\"ComponentSchema_propertyDescriptionContainer__meGAo\",\"propertyDescription\":\"ComponentSchema_propertyDescription__pS8uc\",\"propertyDefault\":\"ComponentSchema_propertyDefault__U6kfs\",\"propertyDefaultValue\":\"ComponentSchema_propertyDefaultValue__oDIwt\",\"propertyExamples\":\"ComponentSchema_propertyExamples__GotnC\",\"propertyExamplesValue\":\"ComponentSchema_propertyExamplesValue__fxM9x\",\"required\":\"ComponentSchema_required__6RnJN\",\"anyOf\":\"ComponentSchema_anyOf__B_RPR\",\"anyOfLabel\":\"ComponentSchema_anyOfLabel__QAYwb\",\"expansion\":\"ComponentSchema_expansion__pGyym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PackagePageDetails_container__SRrkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ComponentExample_container__yHiZF\",\"code\":\"ComponentExample_code__kXo4_\",\"buttonContainer\":\"ComponentExample_buttonContainer__HtWoM\"};","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PackageDetails_container__0JGnM\",\"componentItem\":\"PackageDetails_componentItem__yAqel\"};"],"names":["GraphRoot","useTrackPageView","repoAddress","props","params","useParams","path","explorerPathFromString","title","opNames","length","pipelineName","useDocumentTitle","div","style","height","display","flexDirection","PageHeader","Subtitle1","tags","Tag","icon","RepositoryLink","Box","border","minHeight","flex","GraphExplorerRoot","explorerPath","history","useHistory","options","setOptions","useState","explodeComposites","preferAssetRendering","parentNames","slice","graphResult","useQuery","GRAPH_EXPLORER_ROOT_QUERY","variables","graphSelector","repositoryName","name","repositoryLocationName","location","graphName","rootHandleID","join","requestScopeHandleID","undefined","Loading","queryResult","graphOrError","result","__typename","NonIdealState","description","message","parentHandle","solidHandle","displayedHandles","explodeCompositesInHandleGraph","solidHandles","GraphExplorer","onChangeExplorerPath","mode","fullPath","workspacePathFromAddress","explorerPathToString","push","replace","container","handles","isGraph","getInvocations","definitionName","filter","s","solid","definition","map","handleID","gql","GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT","GRAPH_EXPLORER_FRAGMENT","PYTHON_ERROR_FRAGMENT","AutomaterializeDaemonStatusTag","paused","useAutomaterializeDaemonStatus","Tooltip","content","canShow","Link","to","outline","intent","AssetGroupRoot","tab","groupName","openInNewTab","useOpenInNewTab","groupPath","groupSelector","useMemo","useCallback","pathname","search","onNavigateToSourceAssetNode","e","node","assetKey","encodeURIComponent","assetDetailsPathForKey","view","metaKey","fetchOptions","React","loading","lineageOptions","Page","paddingBottom","right","ReloadAllButton","label","AssetGroupTags","tabs","direction","justifyContent","alignItems","margin","Tabs","selectedTabId","TabLink","id","AssetGlobalLineageLink","AssetGraphExplorer","viewType","AssetGraphViewType","GROUP","AssetsCatalogTable","prefixPath","split","decodeURIComponent","Boolean","setPrefixPath","automaterializeSensorsFlagState","useAutoMaterializeSensorFlag","data","ASSET_GROUP_METADATA_QUERY","selector","assetNodes","some","a","automationCondition","CodeLocationPageHeaderTitle","gap","repoAddressAsHumanString","CodeLocationPageHeader","locationEntries","useContext","WorkspaceContext","locationEntry","find","entry","JoinedButtons","ReloadButton","CodeLocationMenu","locationNode","CODE_LOCATION_HAS_DOCS_QUERY","findRepositoryInLocation","locationOrLoadError","repositories","repo","CodeLocationTabs","selectedTab","canShowDocs","featureEnabled","FeatureFlag","flagDocsInApp","skip","repositorySelector","repoAddressToSelector","fetchPolicy","hasDocs","repositoryOrError","hasLocationDocs","repository","span","fontWeight","Tab","disabled","CodeLocationSearchableList","items","placeholder","nameFilter","renderRow","searchValue","setSearchValue","onChange","target","value","trimmedValue","trim","toLowerCase","filteredItems","item","containerRef","useRef","rowVirtualizer","useVirtualizer","count","getScrollElement","current","estimateSize","ROW_HEIGHT","overscan","totalHeight","getTotalSize","virtualItems","getVirtualItems","overflow","padding","vertical","horizontal","TextInput","width","Container","ref","HeaderRow","templateColumns","sticky","HeaderCell","Inner","$totalHeight","index","key","size","start","Row","$height","$start","top","strong","iconName","ListLink","Icon","color","Colors","MiddleTruncate","text","styled","useSanitizedAssetSearch","useAssetSearch","assets","sanitizedSearch","tokenForAssetKey","includes","REPO_ASSET_TABLE_FRAGMENT","ASSET_TABLE_DEFINITION_FRAGMENT","validateExpandedKeys","parsed","Array","isArray","usePersistedExpansionState","basePath","AppContext","expandedKeys","setExpandedKeys","useStateWithStorage","storageKey","onToggle","nextExpandedKeys","Set","has","delete","add","from","repoKey","ASSET_GROUPS_EXPANSION_STATE_STORAGE_KEY","grouped","groups","asset","UNGROUPED_NAME","Object","values","forEach","group","sort","b","COMMON_COLLATOR","compare","displayNameForAssetKey","flattened","flat","entries","aName","bName","assetsForGroup","type","assetCount","repoName","queryResultOverview","WORKSPACE_ASSETS_QUERY","filteredBySearch","useFlattenedGroupedAssetList","SpinnerWithText","GroupNameRow","expanded","SearchableListRow","ClickableRow","onClick","$open","tabIndex","onKeyDown","code","preventDefault","background","IconWrapper","REPOSITORY_GRAPHS_FRAGMENT","WORSKPACE_GRAPHS_QUERY","pipelines","p","isJob","isHiddenAssetGroupJob","usedSolids","invocation","invocations","pipeline","graphs","extractGraphsForRepo","repoString","PythonErrorInfo","error","graph","OpCard","inputDefinitions","outputDefinitions","layout","layoutOp","inputs","d","dependsOn","outputs","dependedBy","x","y","OpCardContainer","bounds","OpNode","minified","onDoubleClick","onEnterComposite","onHighlightEdges","selected","focused","highlightedEdges","dim","OP_NODE_DEFINITION_FRAGMENT","UsedSolidDetails","onClickInvocation","USED_SOLID_DETAILS_QUERY","usedSolid","SidebarOpDefinition","showingSubgraph","i","OP_CARD_SOLID_DEFINITION_FRAGMENT","SIDEBAR_OP_DEFINITION_FRAGMENT","OpDetailScrollContainer","flatUniq","arrs","results","arr","keys","localeCompare","OpsRootWithData","useLocation","q","typeExplorer","qs","ignoreQueryPrefix","suggestions","searchSuggestionsForOps","token","solids","displayName","tokenizedValuesFromString","filtered","startsWith","sorted","onSearch","stringFromValue","onClickOp","defName","SplitPanelContainer","identifier","firstInitialPercent","firstMinSize","first","OpListColumnContainer","TokenizingField","suggestionProviders","OpList","second","selectedIndex","findIndex","OpListItem","$selected","OPS_ROOT_QUERY","OP_TYPE_SIGNATURE_FRAGMENT","CodeLocationOpsView","Switch","Route","CodeLocationAssetsList","CodeLocationJobsList","CodeLocationSensorsList","CodeLocationSchedulesList","CodeLocationResourcesList","CodeLocationGraphsList","jobs","job","sensors","sensor","schedules","schedule","resources","allTopLevelResourceDetails","resource","SideNavItem","active","rightElement","tooltip","left","className","placement","StyledSideNavButton","$active","StyledSideNavLink","css","sharedSideNavItemStyle","UnstyledButton","CodeLocationDefinitionsNav","assetGroupCount","assetGroups","jobCount","scheduleCount","sensorCount","resourceCount","numberFormatter","format","bottom","grow","overflowY","CodeLocationDefinitionsMain","Redirect","CopyButton","copied","setCopied","handleCopy","navigator","clipboard","writeText","setTimeout","console","svg","viewBox","fill","xmlns","button","styles","ComponentExample","yaml","highlightedYaml","hljs","highlight","language","pre","dangerouslySetInnerHTML","__html","registerLanguage","hljsYaml","ComponentTags","owners","clsx","owner","tag","ComponentHeader","config","descriptionStyle","displayedDescription","markdownToPlaintext","str","h1","Markdown","remarkPlugins","remarkGfm","components","componentsMinusLinks","children","Remark","remark","use","strip","processSync","md","toString","ComponentScaffolding","componentName","command","ArrayTag","defs","itemName","getItemName","$ref","refName","pop","basicTypes","TypeTag","ComponentSchema","json","schema","JSON","parse","jsonSchema","SchemaRoot","$defs","properties","property","Property","setExpanded","anyOf","required","examples","expandable","isExpandableProperty","filterSchema","firstExample","defaultValue","default","onToggleExpansion","PropertyRef","PropertyType","PropertyAnyOf","Chevron","stringify","ExpandedRoot","ii","propertyTypeToString","typeName","String","ComponentDetails","h2","href","example","ComponentPageContents","componentConfig","ol","li","ListView","contents","renderLink","allComponents","pkg","componentTypes","component","packageName","PackageDetails","Fragment","PackagePageDetails","extractFromPathname","selectedPkg","selectedComponent","PackageTree","expandedPkgs","setExpandedPkgs","useLayoutEffect","copy","setSearch","onTogglePkg","prev","input","listContent","TempFolderIcon","componentType","isSelected","TempIcon","CodeLocationDocsPackageTree","rest","url","repoAddressAsURLString","CODE_LOCATION_DOCS_QUERY","CodeLocationDocsRoot","QueryfulCodeLocationDocs","memo","locationDocsJsonOrError","mainContent","matchingPackage","CodeLocationAlertsSection","locationName","_","CodeLocationOverviewSectionHeader","Subheading","CodeLocationNotFound","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","reloading","tryReload","useRepositoryLocationReload","scope","wordBreak","Button","RepositoryLocationNonBlockingErrorDialog","isOpen","onDismiss","onTryReload","RIGHT_COLUMN_WIDTH","CodeLocationOverviewRoot","locationStatus","displayMetadata","metadataForDetails","image","metadataAsYaml","fromEntries","libraryVersions","dagsterLibraryVersions","useCopyToClipboard","didCopy","setDidCopy","onClickCopy","timer","clearTimeout","Table","tableLayout","tbody","tr","td","minWidth","verticalAlign","LocationStatus","locationOrError","whiteSpace","TimeFromNow","unixTimestamp","updateTimestamp","fontFamily","FontFamily","monospace","marginRight","CodeLocationServerSection","Mono","version","CodeLocationMetadataStyle","StyledRawCodeMirror","readOnly","lineNumbers","theme","QueryfulCodeLocationOverviewRoot","locationStatuses","createGlobalStyle","PipelineOverviewRoot","pathStr","useRepository","isThisThingAJob","useJobTitle","useStripSnapshotFromPath","pipelinePath","action","jobName","opsQuery","PipelineExplorerContainer","JobFallthroughRoot","PipelineOrJobDisambiguationRoot","permissionsLoading","PermissionsContext","useBlockTraceUntilTrue","pipelineOrJobName","replacedPath","LaunchpadSetupFromRunRoot","permissions","canLaunchPipelineExecution","usePermissionsForLocation","repoPath","runId","LaunchpadSetupFromRunAllowedRoot","onSave","useExecutionSessionStorage","CONFIG_FOR_RUN_QUERY","onCompleted","runOrError","run","runConfigYaml","solidSelection","newSession","solidSelectionValue","solidSelectionQuery","applyCreateSession","storageData","LaunchpadSessionLoading","LaunchpadSessionError","LaunchpadSetupRoot","LaunchpadSetupAllowedRoot","queryString","window","useEffect","assetSelection","DEFAULT_JOB_TAB_ORDER","matchingTab","explorerPathForTab","pathComponent","isHidden","getPermissionsResult","permissionsResult","enabled","disabledReason","hasLaunchpad","hasPartitionSet","overview","playground","permissionResultForKey","permissionsState","runs","partitions","tabConfigs","buildJobTabMap","tabId","TIME_FORMAT","showSeconds","showTimezone","LatestRunTag","lastRunQuery","LATEST_RUN_TAG_QUERY","runsFilter","DagsterTag","RepositoryLabelTag","repoAddressAsTag","notifyOnNetworkStatusChange","useQueryRefreshAtInterval","FIFTEEN_SECONDS","runsOrError","pipelineRunsOrError","stats","startTime","end","endTime","status","RunStatus","SUCCESS","CANCELED","CANCELING","FAILURE","RunStatusIndicator","StyledTable","TimestampDisplay","timestamp","timeFormat","timingStringForStatus","RunTime","RUN_TIME_FRAGMENT","JobMetadata","metadata","useJobNavMetadata","JOB_METADATA_QUERY","pipelineOrError","runsForAssetScan","JobScheduleOrSensorTag","RelatedAssetsTag","relatedAssets","getRelatedAssets","uniq","flatMap","r","matchingSchedules","matchingSensors","ScheduleOrSensorTag","open","setOpen","ButtonLink","Dialog","canOutsideClickClose","canEscapeKeyClose","onClose","maxWidth","DialogFooter","topBorder","SCHEDULE_SWITCH_FRAGMENT","SENSOR_SWITCH_FRAGMENT","PipelineNav","match","useRouteMatch","snapshotId","repoJobEntry","pipelineOrJob","isAssetJob","partitionSets","buildJobTabs","externalJobSource","partitionSet","wrap","JobTabs","BackfillTable","showBackfillTarget","allPartitions","backfills","refetch","partitionsRequestedBackfill","setPartitionsRequestedBackfill","thead","th","BackfillRow","backfill","onShowPartitionsRequested","BackfillPartitionsRequestedDialog","backfillId","BACKFILL_ACTIONS_BACKFILL_FRAGMENT","PARTITION_SET_FOR_BACKFILL_TABLE_FRAGMENT","JobBackfillsTable","partitionSetName","partitionNames","refetchCounter","cursorStack","setCursorStack","cursor","setCursor","JOB_BACKFILLS_QUERY","limit","BACKFILL_PAGE_SIZE","partitionSetOrError","paginationProps","hasPrevCursor","hasNextCursor","popCursor","nextStack","advanceCursor","nextCursor","reset","CursorPaginationControls","BACKFILL_TABLE_FRAGMENT","PartitionRunStatusCheckboxes","counts","allowed","Checkbox","data-testid","testId","marginBottom","marginLeft","checked","runStatusToBackfillStateString","v","BackfillPartitionSelector","onLaunch","onCancel","onSubmit","runStatusData","refreshing","range","_setRange","k","stateFilters","setStateFilters","NOT_STARTED","tagEditorOpen","setTagEditorOpen","setTags","query","setQuery","reexecute","fromFailure","BACKFILL_SELECTOR_QUERY","pipelineSelector","mounted","Spinner","purpose","pipelineSnapshotOrError","pipelineSnapshot","instance","h","solidsFiltered","filterByQuery","stepRows","buildLayout","nodes","all","GanttChartMode","FLAT","boxes","box","isFailed","failedPartitions","countsByState","QUEUED","STARTED","partitionKeysForCounts","state","partitionKey","DialogBody","Section","Body2","DimensionRangeWizard","setSelected","selection","setRange","selectionSet","health","runStatusForPartitionKey","partitionKeys","dimensionType","isTimeseriesPartition","PartitionDefinitionType","TIME_WINDOW","STATIC","every","next","GraphQueryInput","autoApplyChanges","TagEditor","tagsFromSession","onRequestClose","borderRadius","TagContainer","onRequestEdit","isBackfillDaemonHealthy","DaemonNotRunningAlert","UsingDefaultLauncherAlert","LaunchBackfillButton","reexecutionSteps","step","onSuccess","showBackfillSuccessToast","onError","showBackfillErrorToast","launchBackfill","useMutation","LAUNCH_PARTITION_BACKFILL_MUTATION","backfillParams","tagsWithUIExecutionTags","launchPartitionBackfill","reexecutionCount","buttonTitle","LaunchButton","runCount","DAEMON_NOT_RUNNING_ALERT_INSTANCE_FRAGMENT","USING_DEFAULT_LAUNCHER_ALERT_INSTANCE_FRAGMENT","PartitionGraph","jobDataByPartition","stepDataByPartition","yLabel","hiddenStepKeys","hiddenPartitions","setHiddenPartitions","chart","rgbColors","useRGBColorsForTheme","_showLargeGraphMessage","setShowLargeGraphMessage","showLargeGraphMessage","onGraphClick","xAxis","scales","offsetX","offsetY","event","isChartClick","chartArea","shiftKey","labelIndex","getValueForPixel","partitionName","labels","defaultOptions","titleOptions","animation","grid","ticks","font","family","plugins","legend","_e","_legendItem","maintainAspectRatio","jobData","stepData","hidden","stepKey","_fillPartitions","allLabel","graphData","datasets","borderColor","backgroundColor","colorHash","PartitionGraphContainer","Line","points","pointData","point","simpleCache","Map","OpJobPartitionsView","cacheKey","cachedResult","get","currentQueryResult","PARTITIONS_STATUS_QUERY","set","partitionsOrError","OpJobPartitionsViewContent","partitionsQueryResult","usePartitionDurations","stepDurationData","runDurationData","runsLoaded","sortedRuns","lastRun","stepStats","canLaunchPartitionBackfill","disabledReasons","viewport","containerProps","useViewport","pageSize","setPageSize","offset","setOffset","showSteps","setShowSteps","showBackfillSetup","setShowBackfillSetup","blockDialog","setBlockDialog","backfillRefetchCounter","setBackfillRefetchCounter","usePartitionStepQuery","partitionTagName","Partition","skipQuery","getVisibleItemCount","GRID_FLOATING_CONTAINER_WIDTH","selectedPartitions","Math","max","selectPartitionNamesSet","partitionStatusesOrError","partitionStatuses","runStatus","runDuration","zIndex","_backfillId","_stepQuery","CountBox","PartitionStatus","selectionWindowSize","maxIdx","min","indexOf","selectedIdx","tooltipMessage","PartitionPerOpStatus","fontSize","AssetJobPartitionsView","assetGraph","useAssetGraphData","assetKeysWithPartitions","graphAssetKeys","assetGraphData","toGraphId","isPartitioned","assetHealth","usePartitionHealthData","total","missing","merged","mergedAssetHealth","dimensions","selectedKeys","selectedRanges","allPartitionsRange","dimension","explodePartitionKeysInSelectionMatching","stateForKeyIdx","dIdxs","AssetPartitionStatus","MISSING","keyCountInSelections","showAssets","setShowAssets","selectedDimensionKeys","dimensionIdx","dimensionKeys","isTimeseriesDimension","LaunchAssetExecutionButton","graphQueryItems","g","skipAllTerm","preferredJobName","splitPartitions","ranges","rangesForSingleDimension","PartitionPerAssetStatus","rangeDimensionIdx","rangeDimension","assetQueryItems","AssetJobPartitionGraphs","multidimensional","dimensionName","ASSET_JOB_PARTITION_SETS_QUERY","pipelineInfo","partitionSetError","usePartitionNameForPipeline","partitionSetsData","partitionSetsOrError","LoadingSpinner","JobOrAssetLaunchpad","render","PipelineRunsFeedRoot","PipelinePartitionsRoot","ScheduleAlertDetails","RUN_STATUSES","calculateDisplayStatus","partition","MANAGED","STARTING","assertUnreachable","SchedulePartitionStatus","scheduleName","partitionPath","addQueryPrefix","partitionURL","retrievePartitionStatus","useLazyQuery","SCHEDULE_PARTITION_STATUS_QUERY","scheduleSelector","Group","spacing","loadable","Caption","partitionFragment","scheduleOrError","RetrievedSchedulePartitionStatus","partitionsByType","displayStatus","StatusTable","ScheduleResetButton","canStartSchedule","canStopRunningSchedule","resetSchedule","toggleOnInFlight","RESET_SCHEDULE_MUTATION","displayScheduleMutationErrors","hasPermission","tooltipContent","defaultStatus","DEFAULT_DISABLED_REASON","locale","EvaluateScheduleDialog","EvaluateSchedule","trackEvent","useTrackEvent","selectedTimestamp","setSelectedTimestamp","getScheduleData","GET_SCHEDULE_QUERY","scheduleDryRunMutation","scheduleDryRunMutationLoading","SCHEDULE_DRY_RUN_MUTATION","launchMultipleRunsWithTelemetry","useLaunchMultipleRunsWithTelemetry","timezone","userTimezone","TimeContext","isTickSelectionOpen","setIsTickSelectionOpen","selectedTimestampRef","launching","setLaunching","scheduleExecutionError","setScheduleExecutionError","scheduleExecutionData","setScheduleExecutionData","canSubmitTest","submitTest","selectorData","ts","scheduleDryRun","evaluationResult","showCustomAlert","body","executionParamsList","buildExecutionParamsListSchedule","canLaunchAll","onLaunchAll","EvaluateScheduleResult","timestamps","potentialTickTimestamps","timestampToString","unix","ScheduleDescriptor","Popover","position","Menu","maxHeight","MenuItem","rightIcon","leftButtons","rightButtons","runRequests","numRunRequests","didSkip","Grid","innerContent","RunRequestTable","SkipReasonNonIdealStateWrapper","br","skipReason","rel","RUN_REQUEST_FRAGMENT","NonIdealStateWrapper","EvaluateTickButtonSchedule","showTestTickDialog","setShowTestTickDialog","ScheduleDetails","refreshState","cronSchedule","executionTimezone","futureTicks","scheduleState","latestTick","running","InstigationStatus","RUNNING","QueryRefreshCountdown","MetadataTableWIP","TickStatusTag","tick","tickResultType","TargetCell","AutomationTargetList","targets","automationType","ScheduleSwitch","canReset","humanCronString","longTimezoneName","Code","SCHEDULE_FRAGMENT","INSTIGATION_STATE_FRAGMENT","ScheduleRoot","selectionQueryResult","setSelectedTab","SCHEDULE_ROOT_QUERY","SCHEDULE_ASSET_SELECTIONS_QUERY","refreshState1","refreshState2","useMergedRefresh","ScheduleName","allowStaleData","showDaemonWarning","daemonHealth","daemonStatus","healthy","SchedulerInfo","TicksTable","RunsFeedTableWithFilters","actionBarComponents","includeRunsFromBackfills","INSTANCE_HEALTH_FRAGMENT","RepoRouteContainer","workspaceState","addressForPath","repoAddressFromPath","matchingRepo","allRepos","repositoryLocation","PipelineRoot","SensorRoot","ResourceRoot","exact","CodeLocationDefinitionsRoot","WorkspaceRoot","MainContent","PipelineExplorerSnapshotRoot","useJob","isExternal","buildPipelineSelector","JOB","PipelineOpGraphExplorer","pipelineResult","PIPELINE_EXPLORER_ROOT_QUERY","snapshotPipelineSelector","NonIdealPipelineQueryResult","assetNodesPresent","METADATA_ENTRY_FRAGMENT","GRAPH_EXPLORER_ASSET_NODE_FRAGMENT","ImageName","imageKV","ImageNameBox","CaptionMono","ModuleOrPackageOrFile","MetadataValueButtonStyle","loadStatus","minimal","versionKey","ReloadRepositoryLocationButton","ChildComponent","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","useDisabledButtonTooltipFix","configIsOpen","setConfigIsOpen","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","DagsterLibrariesDialog","libraries","setIsOpen","CodeLocationConfigDialog","CodeLocationConfig","library","yamlString","kvPairs","reduce","accum","PipelineRunsEmptyState","anyFilter","jobPath","isThisThingAnAssetJob","isExternalJob","isThisThingAnExternalJob","AnchorButton","ENABLED_FILTERS","filterTokens","setFilterTokens","useQueryPersistedRunFilters","permanentTokens","allTokens","repoToken","runsFilterForSearchTokens","onAddTag","tokenAsString","tokenToString","useRunsFeedEntries","RunsFeedView","RUNS","activeFiltersJsx","useRunsFilterInput","enabledFilters","tokens","belowActionBarComponents","RunsQueryRefetchContext","Provider","RunsFeedError","RunsFeedTable","emptyState"],"sourceRoot":"","ignoreList":[]}